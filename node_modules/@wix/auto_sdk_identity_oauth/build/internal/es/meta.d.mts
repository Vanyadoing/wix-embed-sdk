import { d as RawHttpRequest$1, R as RawHttpResponse$1, b as TokenInfoResponse$1 } from './identity-oauth-v1-refresh-token-oauth.universal-DIzKUWYi.mjs';

interface RawHttpResponse {
    body?: Uint8Array;
    statusCode?: number | null;
    headers?: HeadersEntry[];
}
interface HeadersEntry {
    key?: string;
    value?: string;
}
interface RawHttpRequest {
    body?: Uint8Array;
    pathParams?: PathParametersEntry[];
    queryParams?: QueryParametersEntry[];
    headers?: HeadersEntry[];
    method?: string;
    rawPath?: string;
    rawQuery?: string;
}
interface PathParametersEntry {
    key?: string;
    value?: string;
}
interface QueryParametersEntry {
    key?: string;
    value?: string;
}
interface TokenInfoResponse {
    active?: boolean;
    /** subject type. */
    subjectType?: SubjectTypeWithLiterals;
    /** subject id */
    subjectId?: string;
    /** Expiration time of the token */
    exp?: string | null;
    /** Issued time of the token */
    iat?: string | null;
    /** Client id */
    clientId?: string;
    /** Account id */
    accountId?: string | null;
    /** Site id */
    siteId?: string | null;
    /** Instance Id */
    instanceId?: string | null;
    /**
     * Vendor Product Id
     * @maxLength 100
     */
    vendorProductId?: string | null;
}
declare enum SubjectType {
    /** unknown subject type */
    UNKNOWN = "UNKNOWN",
    /** user subject type */
    USER = "USER",
    /** visitor subject type */
    VISITOR = "VISITOR",
    /** member subject type */
    MEMBER = "MEMBER",
    /** app subject type */
    APP = "APP"
}
/** @enumType */
type SubjectTypeWithLiterals = SubjectType | 'UNKNOWN' | 'USER' | 'VISITOR' | 'MEMBER' | 'APP';

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function token(): __PublicMethodMetaInfo<'POST', {}, RawHttpRequest$1, RawHttpRequest, RawHttpResponse$1, RawHttpResponse>;
declare function tokenInfo(): __PublicMethodMetaInfo<'POST', {}, RawHttpRequest$1, RawHttpRequest, TokenInfoResponse$1, TokenInfoResponse>;

export { type __PublicMethodMetaInfo, token, tokenInfo };
