"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  bulkCreateInfoSections: () => bulkCreateInfoSections2,
  bulkDeleteInfoSections: () => bulkDeleteInfoSections2,
  bulkGetOrCreateInfoSections: () => bulkGetOrCreateInfoSections2,
  bulkUpdateInfoSections: () => bulkUpdateInfoSections2,
  createInfoSection: () => createInfoSection2,
  deleteInfoSection: () => deleteInfoSection2,
  getInfoSection: () => getInfoSection2,
  getOrCreateInfoSection: () => getOrCreateInfoSection2,
  queryInfoSections: () => queryInfoSections2,
  updateInfoSection: () => updateInfoSection2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-catalog-v3-info-section-info-sections-v-3.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/info-sections",
        destPath: "/v3/info-sections"
      },
      {
        srcPath: "/stores/v3/bulk/info-sections",
        destPath: "/v3/bulk/info-sections"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/info-sections",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/info-section",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/info-section",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/info-section",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/info-section",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/info-section",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_info-sections-v-3";
function createInfoSection(payload) {
  function __createInfoSection({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSection.createdDate" },
          { path: "infoSection.updatedDate" },
          { path: "infoSection.description.metadata.createdTimestamp" },
          { path: "infoSection.description.metadata.updatedTimestamp" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSection.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.options.item.ratio"
          },
          { path: "infoSection.description.nodes.imageData.image.duration" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
          {
            path: "infoSection.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
          },
          { path: "infoSection.description.nodes.appEmbedData.image.duration" },
          { path: "infoSection.description.nodes.videoData.video.duration" },
          {
            path: "infoSection.description.nodes.videoData.thumbnail.duration"
          },
          { path: "infoSection.description.nodes.audioData.audio.duration" },
          {
            path: "infoSection.description.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.CreateInfoSection",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "infoSection.createdDate" },
            { path: "infoSection.updatedDate" },
            { path: "infoSection.description.metadata.createdTimestamp" },
            { path: "infoSection.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "infoSection.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "infoSection.description.nodes.imageData.image.duration"
            },
            { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
            { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
            {
              path: "infoSection.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "infoSection.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.video.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.audio.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createInfoSection;
}
function getInfoSection(payload) {
  function __getInfoSection({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "GET",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetInfoSection",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections/{infoSectionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "infoSection.createdDate" },
            { path: "infoSection.updatedDate" },
            { path: "infoSection.description.metadata.createdTimestamp" },
            { path: "infoSection.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "infoSection.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "infoSection.description.nodes.imageData.image.duration"
            },
            { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
            { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
            {
              path: "infoSection.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "infoSection.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.video.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.audio.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getInfoSection;
}
function getOrCreateInfoSection(payload) {
  function __getOrCreateInfoSection({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSection.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.options.item.ratio"
          },
          { path: "infoSection.description.nodes.imageData.image.duration" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
          {
            path: "infoSection.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
          },
          { path: "infoSection.description.nodes.appEmbedData.image.duration" },
          { path: "infoSection.description.nodes.videoData.video.duration" },
          {
            path: "infoSection.description.nodes.videoData.thumbnail.duration"
          },
          { path: "infoSection.description.nodes.audioData.audio.duration" },
          {
            path: "infoSection.description.nodes.audioData.coverImage.duration"
          }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSection.description.metadata.createdTimestamp" },
          { path: "infoSection.description.metadata.updatedTimestamp" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetOrCreateInfoSection",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections/get-or-create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "infoSection.createdDate" },
            { path: "infoSection.updatedDate" },
            { path: "infoSection.description.metadata.createdTimestamp" },
            { path: "infoSection.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "infoSection.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "infoSection.description.nodes.imageData.image.duration"
            },
            { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
            { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
            {
              path: "infoSection.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "infoSection.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.video.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.audio.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getOrCreateInfoSection;
}
function bulkGetOrCreateInfoSections(payload) {
  function __bulkGetOrCreateInfoSections({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSections.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.options.item.ratio"
          },
          { path: "infoSections.description.nodes.imageData.image.duration" },
          { path: "infoSections.description.nodes.mapData.mapSettings.lat" },
          { path: "infoSections.description.nodes.mapData.mapSettings.lng" },
          {
            path: "infoSections.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSections.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSections.description.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "infoSections.description.nodes.appEmbedData.image.duration"
          },
          { path: "infoSections.description.nodes.videoData.video.duration" },
          {
            path: "infoSections.description.nodes.videoData.thumbnail.duration"
          },
          { path: "infoSections.description.nodes.audioData.audio.duration" },
          {
            path: "infoSections.description.nodes.audioData.coverImage.duration"
          }
        ]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSections.description.metadata.createdTimestamp" },
          { path: "infoSections.description.metadata.updatedTimestamp" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkGetOrCreateInfoSections",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/bulk/info-sections/get-or-create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" },
            { path: "results.item.description.metadata.createdTimestamp" },
            { path: "results.item.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "results.item.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "results.item.description.nodes.imageData.image.duration"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lat"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lng"
            },
            {
              path: "results.item.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "results.item.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "results.item.description.nodes.videoData.video.duration"
            },
            {
              path: "results.item.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.audioData.audio.duration"
            },
            {
              path: "results.item.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkGetOrCreateInfoSections;
}
function updateInfoSection(payload) {
  function __updateInfoSection({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSection.createdDate" },
          { path: "infoSection.updatedDate" },
          { path: "infoSection.description.metadata.createdTimestamp" },
          { path: "infoSection.description.metadata.updatedTimestamp" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSection.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSection.description.nodes.galleryData.options.item.ratio"
          },
          { path: "infoSection.description.nodes.imageData.image.duration" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
          { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
          {
            path: "infoSection.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
          },
          { path: "infoSection.description.nodes.appEmbedData.image.duration" },
          { path: "infoSection.description.nodes.videoData.video.duration" },
          {
            path: "infoSection.description.nodes.videoData.thumbnail.duration"
          },
          { path: "infoSection.description.nodes.audioData.audio.duration" },
          {
            path: "infoSection.description.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "PATCH",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.UpdateInfoSection",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections/{infoSection.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "infoSection.createdDate" },
            { path: "infoSection.updatedDate" },
            { path: "infoSection.description.metadata.createdTimestamp" },
            { path: "infoSection.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "infoSection.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "infoSection.description.nodes.imageData.image.duration"
            },
            { path: "infoSection.description.nodes.mapData.mapSettings.lat" },
            { path: "infoSection.description.nodes.mapData.mapSettings.lng" },
            {
              path: "infoSection.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "infoSection.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "infoSection.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.video.duration"
            },
            {
              path: "infoSection.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.audio.duration"
            },
            {
              path: "infoSection.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateInfoSection;
}
function deleteInfoSection(payload) {
  function __deleteInfoSection({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "DELETE",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.DeleteInfoSection",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections/{infoSectionId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteInfoSection;
}
function queryInfoSections(payload) {
  function __queryInfoSections({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.QueryInfoSections",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/info-sections/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "infoSections.createdDate" },
            { path: "infoSections.updatedDate" },
            { path: "infoSections.description.metadata.createdTimestamp" },
            { path: "infoSections.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "infoSections.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "infoSections.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "infoSections.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "infoSections.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "infoSections.description.nodes.imageData.image.duration"
            },
            {
              path: "infoSections.description.nodes.mapData.mapSettings.lat"
            },
            {
              path: "infoSections.description.nodes.mapData.mapSettings.lng"
            },
            {
              path: "infoSections.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "infoSections.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "infoSections.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "infoSections.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "infoSections.description.nodes.videoData.video.duration"
            },
            {
              path: "infoSections.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "infoSections.description.nodes.audioData.audio.duration"
            },
            {
              path: "infoSections.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryInfoSections;
}
function bulkCreateInfoSections(payload) {
  function __bulkCreateInfoSections({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSections.createdDate" },
          { path: "infoSections.updatedDate" },
          { path: "infoSections.description.metadata.createdTimestamp" },
          { path: "infoSections.description.metadata.updatedTimestamp" }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSections.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSections.description.nodes.galleryData.options.item.ratio"
          },
          { path: "infoSections.description.nodes.imageData.image.duration" },
          { path: "infoSections.description.nodes.mapData.mapSettings.lat" },
          { path: "infoSections.description.nodes.mapData.mapSettings.lng" },
          {
            path: "infoSections.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSections.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSections.description.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "infoSections.description.nodes.appEmbedData.image.duration"
          },
          { path: "infoSections.description.nodes.videoData.video.duration" },
          {
            path: "infoSections.description.nodes.videoData.thumbnail.duration"
          },
          { path: "infoSections.description.nodes.audioData.audio.duration" },
          {
            path: "infoSections.description.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkCreateInfoSections",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/bulk/info-sections/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" },
            { path: "results.item.description.metadata.createdTimestamp" },
            { path: "results.item.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "results.item.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "results.item.description.nodes.imageData.image.duration"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lat"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lng"
            },
            {
              path: "results.item.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "results.item.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "results.item.description.nodes.videoData.video.duration"
            },
            {
              path: "results.item.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.audioData.audio.duration"
            },
            {
              path: "results.item.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateInfoSections;
}
function bulkUpdateInfoSections(payload) {
  function __bulkUpdateInfoSections({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "infoSections.fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "infoSections.infoSection.createdDate" },
          { path: "infoSections.infoSection.updatedDate" },
          {
            path: "infoSections.infoSection.description.metadata.createdTimestamp"
          },
          {
            path: "infoSections.infoSection.description.metadata.updatedTimestamp"
          }
        ]
      },
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          {
            path: "infoSections.infoSection.description.nodes.galleryData.items.image.media.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.galleryData.items.video.media.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.galleryData.items.video.thumbnail.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.galleryData.options.item.ratio"
          },
          {
            path: "infoSections.infoSection.description.nodes.imageData.image.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.mapData.mapSettings.lat"
          },
          {
            path: "infoSections.infoSection.description.nodes.mapData.mapSettings.lng"
          },
          {
            path: "infoSections.infoSection.description.nodes.pollData.poll.image.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.pollData.poll.options.image.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.pollData.design.poll.background.image.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.appEmbedData.image.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.videoData.video.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.videoData.thumbnail.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.audioData.audio.duration"
          },
          {
            path: "infoSections.infoSection.description.nodes.audioData.coverImage.duration"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkUpdateInfoSections",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/bulk/info-sections/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" },
            { path: "results.item.description.metadata.createdTimestamp" },
            { path: "results.item.description.metadata.updatedTimestamp" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            {
              path: "results.item.description.nodes.galleryData.items.image.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.media.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.items.video.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.galleryData.options.item.ratio"
            },
            {
              path: "results.item.description.nodes.imageData.image.duration"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lat"
            },
            {
              path: "results.item.description.nodes.mapData.mapSettings.lng"
            },
            {
              path: "results.item.description.nodes.pollData.poll.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.poll.options.image.duration"
            },
            {
              path: "results.item.description.nodes.pollData.design.poll.background.image.duration"
            },
            {
              path: "results.item.description.nodes.appEmbedData.image.duration"
            },
            {
              path: "results.item.description.nodes.videoData.video.duration"
            },
            {
              path: "results.item.description.nodes.videoData.thumbnail.duration"
            },
            {
              path: "results.item.description.nodes.audioData.audio.duration"
            },
            {
              path: "results.item.description.nodes.audioData.coverImage.duration"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateInfoSections;
}
function bulkDeleteInfoSections(payload) {
  function __bulkDeleteInfoSections({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.info_section",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkDeleteInfoSections",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({
        protoPath: "/v3/bulk/info-sections/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteInfoSections;
}

// src/stores-catalog-v3-info-section-info-sections-v-3.meta.ts
function createInfoSection2() {
  const payload = {};
  const getRequestOptions = createInfoSection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/info-sections",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getInfoSection2() {
  const payload = { infoSectionId: ":infoSectionId" };
  const getRequestOptions = getInfoSection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/info-sections/{infoSectionId}",
    pathParams: { infoSectionId: "infoSectionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrCreateInfoSection2() {
  const payload = {};
  const getRequestOptions = getOrCreateInfoSection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/info-sections/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkGetOrCreateInfoSections2() {
  const payload = {};
  const getRequestOptions = bulkGetOrCreateInfoSections(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/info-sections/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateInfoSection2() {
  const payload = { infoSection: { id: ":infoSectionId" } };
  const getRequestOptions = updateInfoSection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/info-sections/{infoSection.id}",
    pathParams: { infoSectionId: "infoSectionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteInfoSection2() {
  const payload = { infoSectionId: ":infoSectionId" };
  const getRequestOptions = deleteInfoSection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/info-sections/{infoSectionId}",
    pathParams: { infoSectionId: "infoSectionId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryInfoSections2() {
  const payload = {};
  const getRequestOptions = queryInfoSections(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/info-sections/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateInfoSections2() {
  const payload = {};
  const getRequestOptions = bulkCreateInfoSections(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/info-sections/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateInfoSections2() {
  const payload = {};
  const getRequestOptions = bulkUpdateInfoSections(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/info-sections/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteInfoSections2() {
  const payload = {};
  const getRequestOptions = bulkDeleteInfoSections(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/info-sections/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bulkCreateInfoSections,
  bulkDeleteInfoSections,
  bulkGetOrCreateInfoSections,
  bulkUpdateInfoSections,
  createInfoSection,
  deleteInfoSection,
  getInfoSection,
  getOrCreateInfoSection,
  queryInfoSections,
  updateInfoSection
});
//# sourceMappingURL=meta.js.map