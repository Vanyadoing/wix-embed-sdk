{"version":3,"sources":["../../index.ts","../../src/stores-catalog-v3-info-section-info-sections-v-3.public.ts","../../src/stores-catalog-v3-info-section-info-sections-v-3.universal.ts","../../src/stores-catalog-v3-info-section-info-sections-v-3.http.ts","../../src/stores-catalog-v3-info-section-info-sections-v-3.context.ts"],"sourcesContent":["export * from './src/stores-catalog-v3-info-section-info-sections-v-3.context.js';\n","import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  BulkCreateInfoSectionsOptions,\n  BulkCreateInfoSectionsResponse,\n  BulkDeleteInfoSectionsResponse,\n  BulkGetOrCreateInfoSectionsOptions,\n  BulkGetOrCreateInfoSectionsResponse,\n  BulkUpdateInfoSectionsOptions,\n  BulkUpdateInfoSectionsResponse,\n  GetInfoSectionOptions,\n  GetOrCreateInfoSectionOptions,\n  GetOrCreateInfoSectionResponse,\n  InfoSection,\n  InfoSectionCreatedEnvelope,\n  InfoSectionDeletedEnvelope,\n  InfoSectionUpdatedEnvelope,\n  InfoSectionsQueryBuilder,\n  MaskedInfoSection,\n  QueryInfoSectionsOptions,\n  UpdateInfoSection,\n  UpdateInfoSectionOptions,\n  bulkCreateInfoSections as universalBulkCreateInfoSections,\n  bulkDeleteInfoSections as universalBulkDeleteInfoSections,\n  bulkGetOrCreateInfoSections as universalBulkGetOrCreateInfoSections,\n  bulkUpdateInfoSections as universalBulkUpdateInfoSections,\n  createInfoSection as universalCreateInfoSection,\n  deleteInfoSection as universalDeleteInfoSection,\n  getInfoSection as universalGetInfoSection,\n  getOrCreateInfoSection as universalGetOrCreateInfoSection,\n  queryInfoSections as universalQueryInfoSections,\n  updateInfoSection as universalUpdateInfoSection,\n} from './stores-catalog-v3-info-section-info-sections-v-3.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/stores' };\n\nexport function createInfoSection(\n  httpClient: HttpClient\n): CreateInfoSectionSignature {\n  return (infoSection: NonNullablePaths<InfoSection, `title` | `uniqueName`>) =>\n    universalCreateInfoSection(\n      infoSection,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateInfoSectionSignature {\n  /**\n   * Creates an info section.\n   *\n   * To assign the info section to a product, include the `infoSection.id` or `infoSection.uniqueName`\n   * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or\n   * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.\n   * @param - Info section to create.\n   * @returns Created info section.\n   */\n  (infoSection: InfoSection): Promise<InfoSection>;\n}\n\nexport function getInfoSection(\n  httpClient: HttpClient\n): GetInfoSectionSignature {\n  return (infoSectionId: string, options?: GetInfoSectionOptions) =>\n    universalGetInfoSection(\n      infoSectionId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetInfoSectionSignature {\n  /**\n   * Retrieves an info section.\n   * @param - Info section ID.\n   * @returns Info section.\n   */\n  (\n    infoSectionId: string,\n    options?: GetInfoSectionOptions | undefined\n  ): Promise<InfoSection>;\n}\n\nexport function getOrCreateInfoSection(\n  httpClient: HttpClient\n): GetOrCreateInfoSectionSignature {\n  return (options?: GetOrCreateInfoSectionOptions) =>\n    universalGetOrCreateInfoSection(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetOrCreateInfoSectionSignature {\n  /**\n   * Retrieves an info section by ID or `uniqueName`, or creates an info section if one with the passed `uniqueName` doesn't exist.\n   *\n   * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n   */\n  (\n    options?: GetOrCreateInfoSectionOptions | undefined\n  ): Promise<GetOrCreateInfoSectionResponse>;\n}\n\nexport function bulkGetOrCreateInfoSections(\n  httpClient: HttpClient\n): BulkGetOrCreateInfoSectionsSignature {\n  return (options?: BulkGetOrCreateInfoSectionsOptions) =>\n    universalBulkGetOrCreateInfoSections(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkGetOrCreateInfoSectionsSignature {\n  /**\n   * Retrieves multiple info sections by ID or `uniqueName`, or creates multiple info sections if those with the passed `uniqueName` don't exist.\n   *\n   * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n   */\n  (\n    options?: BulkGetOrCreateInfoSectionsOptions | undefined\n  ): Promise<BulkGetOrCreateInfoSectionsResponse>;\n}\n\nexport function updateInfoSection(\n  httpClient: HttpClient\n): UpdateInfoSectionSignature {\n  return (\n    _id: string,\n    infoSection: NonNullablePaths<UpdateInfoSection, `revision`>,\n    options?: UpdateInfoSectionOptions\n  ) =>\n    universalUpdateInfoSection(\n      _id,\n      infoSection,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateInfoSectionSignature {\n  /**\n   * Updates an info section.\n   *\n   *\n   * Each time the info section is updated, `revision` increments by 1.\n   * The current `revision` must be passed when updating the info section.\n   * This ensures you're working with the latest info section and prevents unintended overwrites.\n   * @param - Info section ID.\n   * @returns Updated info section.\n   */\n  (\n    _id: string,\n    infoSection: UpdateInfoSection,\n    options?: UpdateInfoSectionOptions | undefined\n  ): Promise<InfoSection>;\n}\n\nexport function deleteInfoSection(\n  httpClient: HttpClient\n): DeleteInfoSectionSignature {\n  return (infoSectionId: string) =>\n    universalDeleteInfoSection(\n      infoSectionId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteInfoSectionSignature {\n  /**\n   * Deletes an info section.\n   *\n   * > **Note:** Deleting an info section will also remove it from all products it is assigned to.\n   * @param - Info section ID\n   */\n  (infoSectionId: string): Promise<void>;\n}\n\nexport function queryInfoSections(\n  httpClient: HttpClient\n): QueryInfoSectionsSignature {\n  return (options?: QueryInfoSectionsOptions) =>\n    universalQueryInfoSections(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryInfoSectionsSignature {\n  /**\n   * Retrieves a list of up to 100 info sections, given the provided filtering, sorting, and cursor paging.\n   * Pass supported values to the `fields` array in the request to include those fields in the response.\n   *\n   *\n   * Query Info Sections runs with these defaults, which you can override:\n   *\n   * - `createdDate` is sorted in `DESC` order\n   * - `cursorPaging.limit` is `100`\n   *\n   * For field support for filters and sorting,\n   * see [Info Sections: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/info-sections-v3/supported-filters-and-sorting).\n   *\n   * To learn about working with _Query_ endpoints, see\n   * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n   * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  (options?: QueryInfoSectionsOptions | undefined): InfoSectionsQueryBuilder;\n}\n\nexport function bulkCreateInfoSections(\n  httpClient: HttpClient\n): BulkCreateInfoSectionsSignature {\n  return (\n    infoSections: NonNullablePaths<InfoSection, `title` | `uniqueName`>[],\n    options?: BulkCreateInfoSectionsOptions\n  ) =>\n    universalBulkCreateInfoSections(\n      infoSections,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkCreateInfoSectionsSignature {\n  /**\n   * Creates multiple info sections.\n   * @param - Info sections to create.\n   */\n  (\n    infoSections: InfoSection[],\n    options?: BulkCreateInfoSectionsOptions | undefined\n  ): Promise<BulkCreateInfoSectionsResponse>;\n}\n\nexport function bulkUpdateInfoSections(\n  httpClient: HttpClient\n): BulkUpdateInfoSectionsSignature {\n  return (\n    infoSections: NonNullablePaths<\n      MaskedInfoSection,\n      `infoSection._id` | `infoSection.revision`\n    >[],\n    options?: BulkUpdateInfoSectionsOptions\n  ) =>\n    universalBulkUpdateInfoSections(\n      infoSections,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkUpdateInfoSectionsSignature {\n  /**\n   * Updates multiple info sections.\n   *\n   * Each time an info section is updated, `revision` increments by 1.\n   * The current `revision` must be passed when updating an info section.\n   * This ensures you're working with the latest info section and prevents unintended overwrites.\n   * @param - List of info sections to update.\n   */\n  (\n    infoSections: MaskedInfoSection[],\n    options?: BulkUpdateInfoSectionsOptions | undefined\n  ): Promise<BulkUpdateInfoSectionsResponse>;\n}\n\nexport function bulkDeleteInfoSections(\n  httpClient: HttpClient\n): BulkDeleteInfoSectionsSignature {\n  return (infoSectionIds: string[]) =>\n    universalBulkDeleteInfoSections(\n      infoSectionIds,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkDeleteInfoSectionsSignature {\n  /**\n   * Deletes multiple info sections.\n   * @param - IDs of info sections to delete.\n   */\n  (infoSectionIds: string[]): Promise<BulkDeleteInfoSectionsResponse>;\n}\n\nexport const onInfoSectionCreated = EventDefinition(\n  'wix.stores.catalog.v3.info_section_created',\n  true,\n  (event: InfoSectionCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'entity.description.metadata.createdTimestamp' },\n            { path: 'entity.description.metadata.updatedTimestamp' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'entity.description.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'entity.description.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'entity.description.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            { path: 'entity.description.nodes.galleryData.options.item.ratio' },\n            { path: 'entity.description.nodes.imageData.image.duration' },\n            { path: 'entity.description.nodes.mapData.mapSettings.lat' },\n            { path: 'entity.description.nodes.mapData.mapSettings.lng' },\n            { path: 'entity.description.nodes.pollData.poll.image.duration' },\n            {\n              path: 'entity.description.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'entity.description.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'entity.description.nodes.appEmbedData.image.duration' },\n            { path: 'entity.description.nodes.videoData.video.duration' },\n            { path: 'entity.description.nodes.videoData.thumbnail.duration' },\n            { path: 'entity.description.nodes.audioData.audio.duration' },\n            { path: 'entity.description.nodes.audioData.coverImage.duration' },\n          ],\n        },\n      ])\n    )\n)<InfoSectionCreatedEnvelope>();\nexport const onInfoSectionDeleted = EventDefinition(\n  'wix.stores.catalog.v3.info_section_deleted',\n  true,\n  (event: InfoSectionDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'undefined.createdDate' },\n            { path: 'undefined.updatedDate' },\n            { path: 'undefined.description.metadata.createdTimestamp' },\n            { path: 'undefined.description.metadata.updatedTimestamp' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'undefined.description.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'undefined.description.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'undefined.description.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            {\n              path: 'undefined.description.nodes.galleryData.options.item.ratio',\n            },\n            { path: 'undefined.description.nodes.imageData.image.duration' },\n            { path: 'undefined.description.nodes.mapData.mapSettings.lat' },\n            { path: 'undefined.description.nodes.mapData.mapSettings.lng' },\n            {\n              path: 'undefined.description.nodes.pollData.poll.image.duration',\n            },\n            {\n              path: 'undefined.description.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'undefined.description.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'undefined.description.nodes.appEmbedData.image.duration' },\n            { path: 'undefined.description.nodes.videoData.video.duration' },\n            {\n              path: 'undefined.description.nodes.videoData.thumbnail.duration',\n            },\n            { path: 'undefined.description.nodes.audioData.audio.duration' },\n            {\n              path: 'undefined.description.nodes.audioData.coverImage.duration',\n            },\n          ],\n        },\n      ])\n    )\n)<InfoSectionDeletedEnvelope>();\nexport const onInfoSectionUpdated = EventDefinition(\n  'wix.stores.catalog.v3.info_section_updated',\n  true,\n  (event: InfoSectionUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'entity.description.metadata.createdTimestamp' },\n            { path: 'entity.description.metadata.updatedTimestamp' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTFloatToSDKFloat,\n          paths: [\n            {\n              path: 'entity.description.nodes.galleryData.items.image.media.duration',\n            },\n            {\n              path: 'entity.description.nodes.galleryData.items.video.media.duration',\n            },\n            {\n              path: 'entity.description.nodes.galleryData.items.video.thumbnail.duration',\n            },\n            { path: 'entity.description.nodes.galleryData.options.item.ratio' },\n            { path: 'entity.description.nodes.imageData.image.duration' },\n            { path: 'entity.description.nodes.mapData.mapSettings.lat' },\n            { path: 'entity.description.nodes.mapData.mapSettings.lng' },\n            { path: 'entity.description.nodes.pollData.poll.image.duration' },\n            {\n              path: 'entity.description.nodes.pollData.poll.options.image.duration',\n            },\n            {\n              path: 'entity.description.nodes.pollData.design.poll.background.image.duration',\n            },\n            { path: 'entity.description.nodes.appEmbedData.image.duration' },\n            { path: 'entity.description.nodes.videoData.video.duration' },\n            { path: 'entity.description.nodes.videoData.thumbnail.duration' },\n            { path: 'entity.description.nodes.audioData.audio.duration' },\n            { path: 'entity.description.nodes.audioData.coverImage.duration' },\n          ],\n        },\n      ])\n    )\n)<InfoSectionUpdatedEnvelope>();\n\nexport {\n  ActionEvent,\n  Alignment,\n  AnchorData,\n  App,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  AppType,\n  ApplicationError,\n  AudioData,\n  Background,\n  BackgroundBackgroundOneOf,\n  BackgroundType,\n  BaseEventMetadata,\n  BlockquoteData,\n  BookingData,\n  Border,\n  BorderColors,\n  BulkActionMetadata,\n  BulkCreateInfoSectionsOptions,\n  BulkCreateInfoSectionsRequest,\n  BulkCreateInfoSectionsResponse,\n  BulkDeleteInfoSectionsRequest,\n  BulkDeleteInfoSectionsResponse,\n  BulkGetOrCreateInfoSectionsOptions,\n  BulkGetOrCreateInfoSectionsRequest,\n  BulkGetOrCreateInfoSectionsResponse,\n  BulkInfoSectionItemResult,\n  BulkInfoSectionResult,\n  BulkUpdateInfoSectionsOptions,\n  BulkUpdateInfoSectionsRequest,\n  BulkUpdateInfoSectionsResponse,\n  BulletedListData,\n  ButtonData,\n  CaptionData,\n  CellStyle,\n  CodeBlockData,\n  CollapsibleListData,\n  ColorData,\n  Colors,\n  CreateInfoSectionRequest,\n  CreateInfoSectionResponse,\n  Crop,\n  CursorPaging,\n  CursorPagingMetadata,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Cursors,\n  CustomTag,\n  Decoration,\n  DecorationDataOneOf,\n  DecorationType,\n  DeleteInfoSectionRequest,\n  DeleteInfoSectionResponse,\n  Design,\n  Dimensions,\n  Direction,\n  DividerData,\n  DocumentStyle,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EmbedData,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventData,\n  EventMetadata,\n  File,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  FontSizeData,\n  FontType,\n  GIF,\n  GIFData,\n  GIFType,\n  GalleryData,\n  GalleryOptions,\n  GetInfoSectionOptions,\n  GetInfoSectionRequest,\n  GetInfoSectionResponse,\n  GetOrCreateInfoSectionOptions,\n  GetOrCreateInfoSectionRequest,\n  GetOrCreateInfoSectionResponse,\n  Gradient,\n  HTMLData,\n  HTMLDataDataOneOf,\n  HeadingData,\n  Height,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  Image,\n  ImageData,\n  ImageDataStyles,\n  InfoSection,\n  InfoSectionCreatedEnvelope,\n  InfoSectionDeletedEnvelope,\n  InfoSectionForGetOrCreate,\n  InfoSectionUpdatedEnvelope,\n  InfoSectionsQueryBuilder,\n  InfoSectionsQueryResult,\n  InitialExpandedItems,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  Item,\n  ItemDataOneOf,\n  ItemMetadata,\n  ItemStyle,\n  Layout,\n  LayoutCellData,\n  LayoutType,\n  LineStyle,\n  Link,\n  LinkData,\n  LinkDataOneOf,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  ListValue,\n  MapData,\n  MapSettings,\n  MapType,\n  MaskedInfoSection,\n  Media,\n  MentionData,\n  MessageEnvelope,\n  Metadata,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  NodeType,\n  NullValue,\n  Oembed,\n  Option,\n  OptionDesign,\n  OptionLayout,\n  OrderedListData,\n  Orientation,\n  PDFSettings,\n  Page,\n  ParagraphData,\n  Permissions,\n  PlaybackOptions,\n  PluginContainerData,\n  PluginContainerDataAlignment,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Poll,\n  PollData,\n  PollDataLayout,\n  PollDesign,\n  PollLayout,\n  PollLayoutDirection,\n  PollLayoutType,\n  Position,\n  QueryInfoSectionsOptions,\n  QueryInfoSectionsRequest,\n  QueryInfoSectionsResponse,\n  Rel,\n  RequestedFields,\n  RestoreInfo,\n  RichContent,\n  Settings,\n  SortOrder,\n  Sorting,\n  Source,\n  Spoiler,\n  SpoilerData,\n  Styles,\n  StylesBorder,\n  TableCellData,\n  TableData,\n  Target,\n  TextAlignment,\n  TextData,\n  TextNodeStyle,\n  TextStyle,\n  Thumbnails,\n  ThumbnailsAlignment,\n  Type,\n  URI,\n  UpdateInfoSection,\n  UpdateInfoSectionOptions,\n  UpdateInfoSectionRequest,\n  UpdateInfoSectionResponse,\n  VerticalAlignment,\n  Video,\n  VideoData,\n  ViewMode,\n  ViewRole,\n  VoteRole,\n  WebhookIdentityType,\n  Width,\n  WidthType,\n} from './stores-catalog-v3-info-section-info-sections-v-3.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixStoresCatalogV3InfoSection from './stores-catalog-v3-info-section-info-sections-v-3.http.js';\n// @ts-ignore\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\n/**\n * An info section is a visible property of a product\n * Add info sections to a product to provide all the explanations your customers need.\n */\nexport interface InfoSection {\n  /**\n   * Info section ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Revision number, which increments by 1 each time the info section is updated.\n   * To prevent conflicting changes,\n   * the current revision must be passed when updating the info section.\n   *\n   * Ignored when creating an info section.\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Date and time the info section was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the info section was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Unique name. Used as an identifier.\n   * @maxLength 100\n   */\n  uniqueName?: string;\n  /**\n   * Info section title.\n   * @minLength 1\n   * @maxLength 50\n   */\n  title?: string;\n  /**\n   * Info section description using rich content.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"indent.emoji.divider.codeBlock.file.gallery.giphy.image.table.link.textHighlight.textColor\" exampleid=\"7dc9240e-d548-417a-abcf-0291b68b4303\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   */\n  description?: RichContent;\n  /**\n   * Info section description in HTML.\n   *\n   * When provided on create/update, this string must be a valid HTML. It will then be converted to rich content.\n   * `plainDescription` is ignored when value is also passed to the `description` field.\n   * @maxLength 16000\n   */\n  plainDescription?: string | null;\n  /**\n   * Number of products this info section is assigned to.\n   * > **Note:** Returned only when you pass `\"ASSIGNED_PRODUCTS_COUNT\"` to the `fields` array in Info Sections API requests.\n   * @readonly\n   */\n  assignedProductsCount?: number | null;\n}\n\nexport interface RichContent {\n  /** Node objects representing a rich content document. */\n  nodes?: Node[];\n  /** Object metadata. */\n  metadata?: Metadata;\n  /** Global styling for header, paragraph, block quote, and code block nodes in the object. */\n  documentStyle?: DocumentStyle;\n}\n\nexport interface Node extends NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n  /** Node type. Use `APP_EMBED` for nodes that embed content from other Wix apps. Use `EMBED` to embed content in [oEmbed](https://oembed.com/) format. */\n  type?: NodeTypeWithLiterals;\n  /** Node ID. */\n  id?: string;\n  /** A list of child nodes. */\n  nodes?: Node[];\n  /** Padding and background color styling for the node. */\n  style?: NodeStyle;\n}\n\n/** @oneof */\nexport interface NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n}\n\nexport enum NodeType {\n  PARAGRAPH = 'PARAGRAPH',\n  TEXT = 'TEXT',\n  HEADING = 'HEADING',\n  BULLETED_LIST = 'BULLETED_LIST',\n  ORDERED_LIST = 'ORDERED_LIST',\n  LIST_ITEM = 'LIST_ITEM',\n  BLOCKQUOTE = 'BLOCKQUOTE',\n  CODE_BLOCK = 'CODE_BLOCK',\n  VIDEO = 'VIDEO',\n  DIVIDER = 'DIVIDER',\n  FILE = 'FILE',\n  GALLERY = 'GALLERY',\n  GIF = 'GIF',\n  HTML = 'HTML',\n  IMAGE = 'IMAGE',\n  LINK_PREVIEW = 'LINK_PREVIEW',\n  /** @deprecated */\n  MAP = 'MAP',\n  POLL = 'POLL',\n  APP_EMBED = 'APP_EMBED',\n  BUTTON = 'BUTTON',\n  COLLAPSIBLE_LIST = 'COLLAPSIBLE_LIST',\n  TABLE = 'TABLE',\n  EMBED = 'EMBED',\n  COLLAPSIBLE_ITEM = 'COLLAPSIBLE_ITEM',\n  COLLAPSIBLE_ITEM_TITLE = 'COLLAPSIBLE_ITEM_TITLE',\n  COLLAPSIBLE_ITEM_BODY = 'COLLAPSIBLE_ITEM_BODY',\n  TABLE_CELL = 'TABLE_CELL',\n  TABLE_ROW = 'TABLE_ROW',\n  EXTERNAL = 'EXTERNAL',\n  AUDIO = 'AUDIO',\n  CAPTION = 'CAPTION',\n  LAYOUT = 'LAYOUT',\n  LAYOUT_CELL = 'LAYOUT_CELL',\n}\n\n/** @enumType */\nexport type NodeTypeWithLiterals =\n  | NodeType\n  | 'PARAGRAPH'\n  | 'TEXT'\n  | 'HEADING'\n  | 'BULLETED_LIST'\n  | 'ORDERED_LIST'\n  | 'LIST_ITEM'\n  | 'BLOCKQUOTE'\n  | 'CODE_BLOCK'\n  | 'VIDEO'\n  | 'DIVIDER'\n  | 'FILE'\n  | 'GALLERY'\n  | 'GIF'\n  | 'HTML'\n  | 'IMAGE'\n  | 'LINK_PREVIEW'\n  | 'MAP'\n  | 'POLL'\n  | 'APP_EMBED'\n  | 'BUTTON'\n  | 'COLLAPSIBLE_LIST'\n  | 'TABLE'\n  | 'EMBED'\n  | 'COLLAPSIBLE_ITEM'\n  | 'COLLAPSIBLE_ITEM_TITLE'\n  | 'COLLAPSIBLE_ITEM_BODY'\n  | 'TABLE_CELL'\n  | 'TABLE_ROW'\n  | 'EXTERNAL'\n  | 'AUDIO'\n  | 'CAPTION'\n  | 'LAYOUT'\n  | 'LAYOUT_CELL';\n\nexport interface NodeStyle {\n  /** The top padding value in pixels. */\n  paddingTop?: string | null;\n  /** The bottom padding value in pixels. */\n  paddingBottom?: string | null;\n  /** The background color as a hexadecimal value. */\n  backgroundColor?: string | null;\n}\n\nexport interface ButtonData {\n  /** Styling for the button's container. */\n  containerData?: PluginContainerData;\n  /** The button type. */\n  type?: TypeWithLiterals;\n  /** Styling for the button. */\n  styles?: Styles;\n  /** The text to display on the button. */\n  text?: string | null;\n  /** Button link details. */\n  link?: Link;\n}\n\nexport interface Border {\n  /**\n   * Deprecated: Use `borderWidth` in `styles` instead.\n   * @deprecated\n   */\n  width?: number | null;\n  /**\n   * Deprecated: Use `borderRadius` in `styles` instead.\n   * @deprecated\n   */\n  radius?: number | null;\n}\n\nexport interface Colors {\n  /**\n   * Deprecated: Use `textColor` in `styles` instead.\n   * @deprecated\n   */\n  text?: string | null;\n  /**\n   * Deprecated: Use `borderColor` in `styles` instead.\n   * @deprecated\n   */\n  border?: string | null;\n  /**\n   * Deprecated: Use `backgroundColor` in `styles` instead.\n   * @deprecated\n   */\n  background?: string | null;\n}\n\nexport interface PluginContainerData {\n  /** The width of the node when it's displayed. */\n  width?: PluginContainerDataWidth;\n  /** The node's alignment within its container. */\n  alignment?: PluginContainerDataAlignmentWithLiterals;\n  /** Spoiler cover settings for the node. */\n  spoiler?: Spoiler;\n  /** The height of the node when it's displayed. */\n  height?: Height;\n  /** Sets whether text should wrap around this node when it's displayed. If `textWrap` is `false`, the node takes up the width of its container. Defaults to `true` for all node types except 'DIVIVDER' where it defaults to `false`. */\n  textWrap?: boolean | null;\n}\n\nexport enum WidthType {\n  /** Width matches the content width */\n  CONTENT = 'CONTENT',\n  /** Small Width */\n  SMALL = 'SMALL',\n  /** Width will match the original asset width */\n  ORIGINAL = 'ORIGINAL',\n  /** coast-to-coast display */\n  FULL_WIDTH = 'FULL_WIDTH',\n}\n\n/** @enumType */\nexport type WidthTypeWithLiterals =\n  | WidthType\n  | 'CONTENT'\n  | 'SMALL'\n  | 'ORIGINAL'\n  | 'FULL_WIDTH';\n\nexport interface PluginContainerDataWidth\n  extends PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\n/** @oneof */\nexport interface PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\nexport enum PluginContainerDataAlignment {\n  /** Center Alignment */\n  CENTER = 'CENTER',\n  /** Left Alignment */\n  LEFT = 'LEFT',\n  /** Right Alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type PluginContainerDataAlignmentWithLiterals =\n  | PluginContainerDataAlignment\n  | 'CENTER'\n  | 'LEFT'\n  | 'RIGHT';\n\nexport interface Spoiler {\n  /** Sets whether the spoiler cover is enabled for this node. Defaults to `false`. */\n  enabled?: boolean | null;\n  /** The description displayed on top of the spoiler cover. */\n  description?: string | null;\n  /** The text for the button used to remove the spoiler cover. */\n  buttonText?: string | null;\n}\n\nexport interface Height {\n  /** A custom height value in pixels. */\n  custom?: string | null;\n}\n\nexport enum Type {\n  /** Regular link button */\n  LINK = 'LINK',\n  /** Triggers custom action that is defined in plugin configuration by the consumer */\n  ACTION = 'ACTION',\n}\n\n/** @enumType */\nexport type TypeWithLiterals = Type | 'LINK' | 'ACTION';\n\nexport interface Styles {\n  /**\n   * Deprecated: Use `borderWidth` and `borderRadius` instead.\n   * @deprecated\n   */\n  border?: Border;\n  /**\n   * Deprecated: Use `textColor`, `borderColor` and `backgroundColor` instead.\n   * @deprecated\n   */\n  colors?: Colors;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /**\n   * Deprecated: Use `borderWidth` for normal/hover states instead.\n   * @deprecated\n   */\n  borderWidthHover?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /**\n   * Border color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  borderColorHover?: string | null;\n  /**\n   * Text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n  /**\n   * Text color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  textColorHover?: string | null;\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Background color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  backgroundColorHover?: string | null;\n  /** Button size option, one of `SMALL`, `MEDIUM` or `LARGE`. Defaults to `MEDIUM`. */\n  buttonSize?: string | null;\n}\n\nexport interface Link extends LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n  /**\n   * he HTML `target` attribute value for the link. This property defines where the linked document opens as follows:\n   * `SELF` - Default. Opens the linked document in the same frame as the link.\n   * `BLANK` - Opens the linked document in a new browser tab or window.\n   * `PARENT` - Opens the linked document in the link's parent frame.\n   * `TOP` - Opens the linked document in the full body of the link's browser tab or window.\n   */\n  target?: TargetWithLiterals;\n  /** The HTML `rel` attribute value for the link. This object specifies the relationship between the current document and the linked document. */\n  rel?: Rel;\n  /** A serialized object used for a custom or external link panel. */\n  customData?: string | null;\n}\n\n/** @oneof */\nexport interface LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n}\n\nexport enum Target {\n  /** Opens the linked document in the same frame as it was clicked (this is default) */\n  SELF = 'SELF',\n  /** Opens the linked document in a new window or tab */\n  BLANK = 'BLANK',\n  /** Opens the linked document in the parent frame */\n  PARENT = 'PARENT',\n  /** Opens the linked document in the full body of the window */\n  TOP = 'TOP',\n}\n\n/** @enumType */\nexport type TargetWithLiterals = Target | 'SELF' | 'BLANK' | 'PARENT' | 'TOP';\n\nexport interface Rel {\n  /** Indicates to search engine crawlers not to follow the link. Defaults to `false`. */\n  nofollow?: boolean | null;\n  /** Indicates to search engine crawlers that the link is a paid placement such as sponsored content or an advertisement. Defaults to `false`. */\n  sponsored?: boolean | null;\n  /** Indicates that this link is user-generated content and isn't necessarily trusted or endorsed by the page’s author. For example, a link in a fourm post. Defaults to `false`. */\n  ugc?: boolean | null;\n  /** Indicates that this link protect referral information from being passed to the target website. */\n  noreferrer?: boolean | null;\n}\n\nexport interface CodeBlockData {\n  /** Styling for the code block's text. */\n  textStyle?: TextStyle;\n}\n\nexport interface TextStyle {\n  /** Text alignment. Defaults to `AUTO`. */\n  textAlignment?: TextAlignmentWithLiterals;\n  /** A CSS `line-height` value for the text expressed as a ratio relative to the font size. For example, if the font size is 20px, a `lineHeight` value of `'1.5'`` results in a line height of 30px. */\n  lineHeight?: string | null;\n}\n\nexport enum TextAlignment {\n  /** browser default, eqivalent to `initial` */\n  AUTO = 'AUTO',\n  /** Left align */\n  LEFT = 'LEFT',\n  /** Right align */\n  RIGHT = 'RIGHT',\n  /** Center align */\n  CENTER = 'CENTER',\n  /** Text is spaced to line up its left and right edges to the left and right edges of the line box, except for the last line */\n  JUSTIFY = 'JUSTIFY',\n}\n\n/** @enumType */\nexport type TextAlignmentWithLiterals =\n  | TextAlignment\n  | 'AUTO'\n  | 'LEFT'\n  | 'RIGHT'\n  | 'CENTER'\n  | 'JUSTIFY';\n\nexport interface DividerData {\n  /** Styling for the divider's container. */\n  containerData?: PluginContainerData;\n  /** Divider line style. */\n  lineStyle?: LineStyleWithLiterals;\n  /** Divider width. */\n  width?: WidthWithLiterals;\n  /** Divider alignment. */\n  alignment?: AlignmentWithLiterals;\n}\n\nexport enum LineStyle {\n  /** Single Line */\n  SINGLE = 'SINGLE',\n  /** Double Line */\n  DOUBLE = 'DOUBLE',\n  /** Dashed Line */\n  DASHED = 'DASHED',\n  /** Dotted Line */\n  DOTTED = 'DOTTED',\n}\n\n/** @enumType */\nexport type LineStyleWithLiterals =\n  | LineStyle\n  | 'SINGLE'\n  | 'DOUBLE'\n  | 'DASHED'\n  | 'DOTTED';\n\nexport enum Width {\n  /** Large line */\n  LARGE = 'LARGE',\n  /** Medium line */\n  MEDIUM = 'MEDIUM',\n  /** Small line */\n  SMALL = 'SMALL',\n}\n\n/** @enumType */\nexport type WidthWithLiterals = Width | 'LARGE' | 'MEDIUM' | 'SMALL';\n\nexport enum Alignment {\n  /** Center alignment */\n  CENTER = 'CENTER',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type AlignmentWithLiterals = Alignment | 'CENTER' | 'LEFT' | 'RIGHT';\n\nexport interface FileData {\n  /** Styling for the file's container. */\n  containerData?: PluginContainerData;\n  /** The source for the file's data. */\n  src?: FileSource;\n  /** File name. */\n  name?: string | null;\n  /** File type. */\n  type?: string | null;\n  /**\n   * Use `sizeInKb` instead.\n   * @deprecated\n   */\n  size?: number | null;\n  /** Settings for PDF files. */\n  pdfSettings?: PDFSettings;\n  /** File MIME type. */\n  mimeType?: string | null;\n  /** File path. */\n  path?: string | null;\n  /** File size in KB. */\n  sizeInKb?: string | null;\n}\n\nexport enum ViewMode {\n  /** No PDF view */\n  NONE = 'NONE',\n  /** Full PDF view */\n  FULL = 'FULL',\n  /** Mini PDF view */\n  MINI = 'MINI',\n}\n\n/** @enumType */\nexport type ViewModeWithLiterals = ViewMode | 'NONE' | 'FULL' | 'MINI';\n\nexport interface FileSource extends FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n  /** Indicates whether the file's source is private. Defaults to `false`. */\n  private?: boolean | null;\n}\n\n/** @oneof */\nexport interface FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n}\n\nexport interface PDFSettings {\n  /**\n   * PDF view mode. One of the following:\n   * `NONE` : The PDF isn't displayed.\n   * `FULL` : A full page view of the PDF is displayed.\n   * `MINI` : A mini view of the PDF is displayed.\n   */\n  viewMode?: ViewModeWithLiterals;\n  /** Sets whether the PDF download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the PDF print button is disabled. Defaults to `false`. */\n  disablePrint?: boolean | null;\n}\n\nexport interface GalleryData {\n  /** Styling for the gallery's container. */\n  containerData?: PluginContainerData;\n  /** The items in the gallery. */\n  items?: Item[];\n  /** Options for defining the gallery's appearance. */\n  options?: GalleryOptions;\n  /** Sets whether the gallery's expand button is disabled. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Sets whether the gallery's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n}\n\nexport interface Media {\n  /** The source for the media's data. */\n  src?: FileSource;\n  /** Media width in pixels. */\n  width?: number | null;\n  /** Media height in pixels. */\n  height?: number | null;\n  /** Media duration in seconds. Only relevant for audio and video files. */\n  duration?: number | null;\n}\n\nexport interface Image {\n  /** Image file details. */\n  media?: Media;\n  /** Link details for images that are links. */\n  link?: Link;\n}\n\nexport interface Video {\n  /** Video file details. */\n  media?: Media;\n  /** Video thumbnail file details. */\n  thumbnail?: Media;\n}\n\nexport interface Item extends ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n  /** Item title. */\n  title?: string | null;\n  /** Item's alternative text. */\n  altText?: string | null;\n}\n\n/** @oneof */\nexport interface ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n}\n\nexport interface GalleryOptions {\n  /** Gallery layout. */\n  layout?: Layout;\n  /** Styling for gallery items. */\n  item?: ItemStyle;\n  /** Styling for gallery thumbnail images. */\n  thumbnails?: Thumbnails;\n}\n\nexport enum LayoutType {\n  /** Collage type */\n  COLLAGE = 'COLLAGE',\n  /** Masonry type */\n  MASONRY = 'MASONRY',\n  /** Grid type */\n  GRID = 'GRID',\n  /** Thumbnail type */\n  THUMBNAIL = 'THUMBNAIL',\n  /** Slider type */\n  SLIDER = 'SLIDER',\n  /** Slideshow type */\n  SLIDESHOW = 'SLIDESHOW',\n  /** Panorama type */\n  PANORAMA = 'PANORAMA',\n  /** Column type */\n  COLUMN = 'COLUMN',\n  /** Magic type */\n  MAGIC = 'MAGIC',\n  /** Fullsize images type */\n  FULLSIZE = 'FULLSIZE',\n}\n\n/** @enumType */\nexport type LayoutTypeWithLiterals =\n  | LayoutType\n  | 'COLLAGE'\n  | 'MASONRY'\n  | 'GRID'\n  | 'THUMBNAIL'\n  | 'SLIDER'\n  | 'SLIDESHOW'\n  | 'PANORAMA'\n  | 'COLUMN'\n  | 'MAGIC'\n  | 'FULLSIZE';\n\nexport enum Orientation {\n  /** Rows Orientation */\n  ROWS = 'ROWS',\n  /** Columns Orientation */\n  COLUMNS = 'COLUMNS',\n}\n\n/** @enumType */\nexport type OrientationWithLiterals = Orientation | 'ROWS' | 'COLUMNS';\n\nexport enum Crop {\n  /** Crop to fill */\n  FILL = 'FILL',\n  /** Crop to fit */\n  FIT = 'FIT',\n}\n\n/** @enumType */\nexport type CropWithLiterals = Crop | 'FILL' | 'FIT';\n\nexport enum ThumbnailsAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** No thumbnail */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type ThumbnailsAlignmentWithLiterals =\n  | ThumbnailsAlignment\n  | 'TOP'\n  | 'RIGHT'\n  | 'BOTTOM'\n  | 'LEFT'\n  | 'NONE';\n\nexport interface Layout {\n  /** Gallery layout type. */\n  type?: LayoutTypeWithLiterals;\n  /** Sets whether horizontal scroll is enabled. Defaults to `true` unless the layout `type` is set to `GRID` or `COLLAGE`. */\n  horizontalScroll?: boolean | null;\n  /** Gallery orientation. */\n  orientation?: OrientationWithLiterals;\n  /** The number of columns to display on full size screens. */\n  numberOfColumns?: number | null;\n  /** The number of columns to display on mobile screens. */\n  mobileNumberOfColumns?: number | null;\n}\n\nexport interface ItemStyle {\n  /** Desirable dimension for each item in pixels (behvaior changes according to gallery type) */\n  targetSize?: number | null;\n  /** Item ratio */\n  ratio?: number | null;\n  /** Sets how item images are cropped. */\n  crop?: CropWithLiterals;\n  /** The spacing between items in pixels. */\n  spacing?: number | null;\n}\n\nexport interface Thumbnails {\n  /** Thumbnail alignment. */\n  placement?: ThumbnailsAlignmentWithLiterals;\n  /** Spacing between thumbnails in pixels. */\n  spacing?: number | null;\n}\n\nexport interface GIFData {\n  /** Styling for the GIF's container. */\n  containerData?: PluginContainerData;\n  /** The source of the full size GIF. */\n  original?: GIF;\n  /** The source of the downsized GIF. */\n  downsized?: GIF;\n  /** Height in pixels. */\n  height?: number;\n  /** Width in pixels. */\n  width?: number;\n  /** Type of GIF (Sticker or NORMAL). Defaults to `NORMAL`. */\n  gifType?: GIFTypeWithLiterals;\n}\n\nexport interface GIF {\n  /**\n   * GIF format URL.\n   * @format WEB_URL\n   */\n  gif?: string | null;\n  /**\n   * MP4 format URL.\n   * @format WEB_URL\n   */\n  mp4?: string | null;\n  /**\n   * Thumbnail URL.\n   * @format WEB_URL\n   */\n  still?: string | null;\n}\n\nexport enum GIFType {\n  NORMAL = 'NORMAL',\n  STICKER = 'STICKER',\n}\n\n/** @enumType */\nexport type GIFTypeWithLiterals = GIFType | 'NORMAL' | 'STICKER';\n\nexport interface HeadingData {\n  /** Heading level from 1-6. */\n  level?: number;\n  /** Styling for the heading text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n}\n\nexport interface HTMLData extends HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n  /** Styling for the HTML node's container. Height property is irrelevant for HTML embeds when autoHeight is set to `true`. */\n  containerData?: PluginContainerData;\n  /** The type of HTML code. */\n  source?: SourceWithLiterals;\n  /** If container height is aligned with its content height. Defaults to `true`. */\n  autoHeight?: boolean | null;\n}\n\n/** @oneof */\nexport interface HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n}\n\nexport enum Source {\n  HTML = 'HTML',\n  ADSENSE = 'ADSENSE',\n}\n\n/** @enumType */\nexport type SourceWithLiterals = Source | 'HTML' | 'ADSENSE';\n\nexport interface ImageData {\n  /** Styling for the image's container. */\n  containerData?: PluginContainerData;\n  /** Image file details. */\n  image?: Media;\n  /** Link details for images that are links. */\n  link?: Link;\n  /** Sets whether the image expands to full screen when clicked. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Image's alternative text. */\n  altText?: string | null;\n  /**\n   * Deprecated: use Caption node instead.\n   * @deprecated\n   */\n  caption?: string | null;\n  /** Sets whether the image's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the image is decorative and does not need an explanation. Defaults to `false`. */\n  decorative?: boolean | null;\n  /** Styling for the image. */\n  styles?: ImageDataStyles;\n}\n\nexport interface StylesBorder {\n  /** Border width in pixels. */\n  width?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** Border radius in pixels. */\n  radius?: number | null;\n}\n\nexport interface ImageDataStyles {\n  /** Border attributes. */\n  border?: StylesBorder;\n}\n\nexport interface LinkPreviewData {\n  /** Styling for the link preview's container. */\n  containerData?: PluginContainerData;\n  /** Link details. */\n  link?: Link;\n  /** Preview title. */\n  title?: string | null;\n  /** Preview thumbnail URL. */\n  thumbnailUrl?: string | null;\n  /** Preview description. */\n  description?: string | null;\n  /** The preview content as HTML. */\n  html?: string | null;\n  /** Styling for the link preview. */\n  styles?: LinkPreviewDataStyles;\n}\n\nexport enum Position {\n  /** Thumbnail positioned at the start (left in LTR layouts, right in RTL layouts) */\n  START = 'START',\n  /** Thumbnail positioned at the end (right in LTR layouts, left in RTL layouts) */\n  END = 'END',\n  /** Thumbnail positioned at the top */\n  TOP = 'TOP',\n  /** Thumbnail hidden and not displayed */\n  HIDDEN = 'HIDDEN',\n}\n\n/** @enumType */\nexport type PositionWithLiterals =\n  | Position\n  | 'START'\n  | 'END'\n  | 'TOP'\n  | 'HIDDEN';\n\nexport interface LinkPreviewDataStyles {\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Title color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  titleColor?: string | null;\n  /**\n   * Subtitle color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  subtitleColor?: string | null;\n  /**\n   * Link color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  linkColor?: string | null;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Position of thumbnail. Defaults to `START`. */\n  thumbnailPosition?: PositionWithLiterals;\n}\n\nexport interface MapData {\n  /** Styling for the map's container. */\n  containerData?: PluginContainerData;\n  /** Map settings. */\n  mapSettings?: MapSettings;\n}\n\nexport interface MapSettings {\n  /** The address to display on the map. */\n  address?: string | null;\n  /** Sets whether the map is draggable. */\n  draggable?: boolean | null;\n  /** Sets whether the location marker is visible. */\n  marker?: boolean | null;\n  /** Sets whether street view control is enabled. */\n  streetViewControl?: boolean | null;\n  /** Sets whether zoom control is enabled. */\n  zoomControl?: boolean | null;\n  /** Location latitude. */\n  lat?: number | null;\n  /** Location longitude. */\n  lng?: number | null;\n  /** Location name. */\n  locationName?: string | null;\n  /** Sets whether view mode control is enabled. */\n  viewModeControl?: boolean | null;\n  /** Initial zoom value. */\n  initialZoom?: number | null;\n  /** Map type. `HYBRID` is a combination of the `ROADMAP` and `SATELLITE` map types. */\n  mapType?: MapTypeWithLiterals;\n}\n\nexport enum MapType {\n  /** Roadmap map type */\n  ROADMAP = 'ROADMAP',\n  /** Satellite map type */\n  SATELITE = 'SATELITE',\n  /** Hybrid map type */\n  HYBRID = 'HYBRID',\n  /** Terrain map type */\n  TERRAIN = 'TERRAIN',\n}\n\n/** @enumType */\nexport type MapTypeWithLiterals =\n  | MapType\n  | 'ROADMAP'\n  | 'SATELITE'\n  | 'HYBRID'\n  | 'TERRAIN';\n\nexport interface ParagraphData {\n  /** Styling for the paragraph text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n  /** Paragraph level */\n  level?: number | null;\n}\n\nexport interface PollData {\n  /** Styling for the poll's container. */\n  containerData?: PluginContainerData;\n  /** Poll data. */\n  poll?: Poll;\n  /** Layout settings for the poll and voting options. */\n  layout?: PollDataLayout;\n  /** Styling for the poll and voting options. */\n  design?: Design;\n}\n\nexport enum ViewRole {\n  /** Only Poll creator can view the results */\n  CREATOR = 'CREATOR',\n  /** Anyone who voted can see the results */\n  VOTERS = 'VOTERS',\n  /** Anyone can see the results, even if one didn't vote */\n  EVERYONE = 'EVERYONE',\n}\n\n/** @enumType */\nexport type ViewRoleWithLiterals = ViewRole | 'CREATOR' | 'VOTERS' | 'EVERYONE';\n\nexport enum VoteRole {\n  /** Logged in member */\n  SITE_MEMBERS = 'SITE_MEMBERS',\n  /** Anyone */\n  ALL = 'ALL',\n}\n\n/** @enumType */\nexport type VoteRoleWithLiterals = VoteRole | 'SITE_MEMBERS' | 'ALL';\n\nexport interface Permissions {\n  /** Sets who can view the poll results. */\n  view?: ViewRoleWithLiterals;\n  /** Sets who can vote. */\n  vote?: VoteRoleWithLiterals;\n  /** Sets whether one voter can vote multiple times. Defaults to `false`. */\n  allowMultipleVotes?: boolean | null;\n}\n\nexport interface Option {\n  /** Option ID. */\n  id?: string | null;\n  /** Option title. */\n  title?: string | null;\n  /** The image displayed with the option. */\n  image?: Media;\n}\n\nexport interface Settings {\n  /** Permissions settings for voting. */\n  permissions?: Permissions;\n  /** Sets whether voters are displayed in the vote results. Defaults to `true`. */\n  showVoters?: boolean | null;\n  /** Sets whether the vote count is displayed. Defaults to `true`. */\n  showVotesCount?: boolean | null;\n}\n\nexport enum PollLayoutType {\n  /** List */\n  LIST = 'LIST',\n  /** Grid */\n  GRID = 'GRID',\n}\n\n/** @enumType */\nexport type PollLayoutTypeWithLiterals = PollLayoutType | 'LIST' | 'GRID';\n\nexport enum PollLayoutDirection {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type PollLayoutDirectionWithLiterals =\n  | PollLayoutDirection\n  | 'LTR'\n  | 'RTL';\n\nexport interface PollLayout {\n  /** The layout for displaying the voting options. */\n  type?: PollLayoutTypeWithLiterals;\n  /** The direction of the text displayed in the voting options. Text can be displayed either right-to-left or left-to-right. */\n  direction?: PollLayoutDirectionWithLiterals;\n  /** Sets whether to display the main poll image. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport interface OptionLayout {\n  /** Sets whether to display option images. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport enum BackgroundType {\n  /** Color background type */\n  COLOR = 'COLOR',\n  /** Image background type */\n  IMAGE = 'IMAGE',\n  /** Gradiant background type */\n  GRADIENT = 'GRADIENT',\n}\n\n/** @enumType */\nexport type BackgroundTypeWithLiterals =\n  | BackgroundType\n  | 'COLOR'\n  | 'IMAGE'\n  | 'GRADIENT';\n\nexport interface Gradient {\n  /** The gradient angle in degrees. */\n  angle?: number | null;\n  /**\n   * The start color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  startColor?: string | null;\n  /**\n   * The end color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  lastColor?: string | null;\n}\n\nexport interface Background extends BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n  /** Background type. For each option, include the relevant details. */\n  type?: BackgroundTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n}\n\nexport interface PollDesign {\n  /** Background styling. */\n  background?: Background;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface OptionDesign {\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface Poll {\n  /** Poll ID. */\n  id?: string | null;\n  /** Poll title. */\n  title?: string | null;\n  /** Poll creator ID. */\n  creatorId?: string | null;\n  /** Main poll image. */\n  image?: Media;\n  /** Voting options. */\n  options?: Option[];\n  /** The poll's permissions and display settings. */\n  settings?: Settings;\n}\n\nexport interface PollDataLayout {\n  /** Poll layout settings. */\n  poll?: PollLayout;\n  /** Voting otpions layout settings. */\n  options?: OptionLayout;\n}\n\nexport interface Design {\n  /** Styling for the poll. */\n  poll?: PollDesign;\n  /** Styling for voting options. */\n  options?: OptionDesign;\n}\n\nexport interface TextData {\n  /** The text to apply decorations to. */\n  text?: string;\n  /** The decorations to apply. */\n  decorations?: Decoration[];\n}\n\n/** Adds appearence changes to text */\nexport interface Decoration extends DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n  /** The type of decoration to apply. */\n  type?: DecorationTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n}\n\nexport enum DecorationType {\n  BOLD = 'BOLD',\n  ITALIC = 'ITALIC',\n  UNDERLINE = 'UNDERLINE',\n  SPOILER = 'SPOILER',\n  ANCHOR = 'ANCHOR',\n  MENTION = 'MENTION',\n  LINK = 'LINK',\n  COLOR = 'COLOR',\n  FONT_SIZE = 'FONT_SIZE',\n  EXTERNAL = 'EXTERNAL',\n  STRIKETHROUGH = 'STRIKETHROUGH',\n  SUPERSCRIPT = 'SUPERSCRIPT',\n  SUBSCRIPT = 'SUBSCRIPT',\n}\n\n/** @enumType */\nexport type DecorationTypeWithLiterals =\n  | DecorationType\n  | 'BOLD'\n  | 'ITALIC'\n  | 'UNDERLINE'\n  | 'SPOILER'\n  | 'ANCHOR'\n  | 'MENTION'\n  | 'LINK'\n  | 'COLOR'\n  | 'FONT_SIZE'\n  | 'EXTERNAL'\n  | 'STRIKETHROUGH'\n  | 'SUPERSCRIPT'\n  | 'SUBSCRIPT';\n\nexport interface AnchorData {\n  /** The target node's ID. */\n  anchor?: string;\n}\n\nexport interface ColorData {\n  /** The text's background color as a hexadecimal value. */\n  background?: string | null;\n  /** The text's foreground color as a hexadecimal value. */\n  foreground?: string | null;\n}\n\nexport interface LinkData {\n  /** Link details. */\n  link?: Link;\n}\n\nexport interface MentionData {\n  /** The mentioned user's name. */\n  name?: string;\n  /** The version of the user's name that appears after the `@` character in the mention. */\n  slug?: string;\n  /** Mentioned user's ID. */\n  id?: string | null;\n}\n\nexport interface FontSizeData {\n  /** The units used for the font size. */\n  unit?: FontTypeWithLiterals;\n  /** Font size value. */\n  value?: number | null;\n}\n\nexport enum FontType {\n  PX = 'PX',\n  EM = 'EM',\n}\n\n/** @enumType */\nexport type FontTypeWithLiterals = FontType | 'PX' | 'EM';\n\nexport interface SpoilerData {\n  /** Spoiler ID. */\n  id?: string | null;\n}\n\nexport interface AppEmbedData extends AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n  /** The type of Wix App content being embedded. */\n  type?: AppTypeWithLiterals;\n  /** The ID of the embedded content. */\n  itemId?: string | null;\n  /** The name of the embedded content. */\n  name?: string | null;\n  /**\n   * Deprecated: Use `image` instead.\n   * @deprecated\n   */\n  imageSrc?: string | null;\n  /** The URL for the embedded content. */\n  url?: string | null;\n  /** An image for the embedded content. */\n  image?: Media;\n}\n\n/** @oneof */\nexport interface AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n}\n\nexport enum AppType {\n  PRODUCT = 'PRODUCT',\n  EVENT = 'EVENT',\n  BOOKING = 'BOOKING',\n}\n\n/** @enumType */\nexport type AppTypeWithLiterals = AppType | 'PRODUCT' | 'EVENT' | 'BOOKING';\n\nexport interface BookingData {\n  /** Booking duration in minutes. */\n  durations?: string | null;\n}\n\nexport interface EventData {\n  /** Event schedule. */\n  scheduling?: string | null;\n  /** Event location. */\n  location?: string | null;\n}\n\nexport interface VideoData {\n  /** Styling for the video's container. */\n  containerData?: PluginContainerData;\n  /** Video details. */\n  video?: Media;\n  /** Video thumbnail details. */\n  thumbnail?: Media;\n  /** Sets whether the video's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Video title. */\n  title?: string | null;\n  /** Video options. */\n  options?: PlaybackOptions;\n}\n\nexport interface PlaybackOptions {\n  /** Sets whether the media will automatically start playing. */\n  autoPlay?: boolean | null;\n  /** Sets whether media's will be looped. */\n  playInLoop?: boolean | null;\n  /** Sets whether media's controls will be shown. */\n  showControls?: boolean | null;\n}\n\nexport interface EmbedData {\n  /** Styling for the oEmbed node's container. */\n  containerData?: PluginContainerData;\n  /** An [oEmbed](https://www.oembed.com) object. */\n  oembed?: Oembed;\n  /** Origin asset source. */\n  src?: string | null;\n}\n\nexport interface Oembed {\n  /** The resource type. */\n  type?: string | null;\n  /** The width of the resource specified in the `url` property in pixels. */\n  width?: number | null;\n  /** The height of the resource specified in the `url` property in pixels. */\n  height?: number | null;\n  /** Resource title. */\n  title?: string | null;\n  /** The source URL for the resource. */\n  url?: string | null;\n  /** HTML for embedding a video player. The HTML should have no padding or margins. */\n  html?: string | null;\n  /** The name of the author or owner of the resource. */\n  authorName?: string | null;\n  /** The URL for the author or owner of the resource. */\n  authorUrl?: string | null;\n  /** The name of the resource provider. */\n  providerName?: string | null;\n  /** The URL for the resource provider. */\n  providerUrl?: string | null;\n  /** The URL for a thumbnail image for the resource. If this property is defined, `thumbnailWidth` and `thumbnailHeight` must also be defined. */\n  thumbnailUrl?: string | null;\n  /** The width of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailHeight` must also be defined. */\n  thumbnailWidth?: string | null;\n  /** The height of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailWidth`must also be defined. */\n  thumbnailHeight?: string | null;\n  /** The URL for an embedded viedo. */\n  videoUrl?: string | null;\n  /** The oEmbed version number.  This value must be `1.0`. */\n  version?: string | null;\n}\n\nexport interface CollapsibleListData {\n  /** Styling for the collapsible list's container. */\n  containerData?: PluginContainerData;\n  /** If `true`, only one item can be expanded at a time. Defaults to `false`. */\n  expandOnlyOne?: boolean | null;\n  /** Sets which items are expanded when the page loads. */\n  initialExpandedItems?: InitialExpandedItemsWithLiterals;\n  /** The direction of the text in the list. Either left-to-right or right-to-left. */\n  direction?: DirectionWithLiterals;\n  /** If `true`, The collapsible item will appear in search results as an FAQ. */\n  isQapageData?: boolean | null;\n}\n\nexport enum InitialExpandedItems {\n  /** First item will be expended initally */\n  FIRST = 'FIRST',\n  /** All items will expended initally */\n  ALL = 'ALL',\n  /** All items collapsed initally */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type InitialExpandedItemsWithLiterals =\n  | InitialExpandedItems\n  | 'FIRST'\n  | 'ALL'\n  | 'NONE';\n\nexport enum Direction {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type DirectionWithLiterals = Direction | 'LTR' | 'RTL';\n\nexport interface TableData {\n  /** Styling for the table's container. */\n  containerData?: PluginContainerData;\n  /** The table's dimensions. */\n  dimensions?: Dimensions;\n  /**\n   * Deprecated: Use `rowHeader` and `columnHeader` instead.\n   * @deprecated\n   */\n  header?: boolean | null;\n  /** Sets whether the table's first row is a header. Defaults to `false`. */\n  rowHeader?: boolean | null;\n  /** Sets whether the table's first column is a header. Defaults to `false`. */\n  columnHeader?: boolean | null;\n}\n\nexport interface Dimensions {\n  /** An array representing relative width of each column in relation to the other columns. */\n  colsWidthRatio?: number[];\n  /** An array representing the height of each row in pixels. */\n  rowsHeight?: number[];\n  /** An array representing the minimum width of each column in pixels. */\n  colsMinWidth?: number[];\n}\n\nexport interface TableCellData {\n  /** Styling for the cell's background color and text alignment. */\n  cellStyle?: CellStyle;\n  /** The cell's border colors. */\n  borderColors?: BorderColors;\n}\n\nexport enum VerticalAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Middle alignment */\n  MIDDLE = 'MIDDLE',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n}\n\n/** @enumType */\nexport type VerticalAlignmentWithLiterals =\n  | VerticalAlignment\n  | 'TOP'\n  | 'MIDDLE'\n  | 'BOTTOM';\n\nexport interface CellStyle {\n  /** Vertical alignment for the cell's text. */\n  verticalAlignment?: VerticalAlignmentWithLiterals;\n  /**\n   * Cell background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n}\n\nexport interface BorderColors {\n  /**\n   * Left border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  left?: string | null;\n  /**\n   * Right border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  right?: string | null;\n  /**\n   * Top border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  top?: string | null;\n  /**\n   * Bottom border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  bottom?: string | null;\n}\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n */\nexport enum NullValue {\n  /** Null value. */\n  NULL_VALUE = 'NULL_VALUE',\n}\n\n/** @enumType */\nexport type NullValueWithLiterals = NullValue | 'NULL_VALUE';\n\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n */\nexport interface ListValue {\n  /** Repeated field of dynamically typed values. */\n  values?: any[];\n}\n\nexport interface AudioData {\n  /** Styling for the audio node's container. */\n  containerData?: PluginContainerData;\n  /** Audio file details. */\n  audio?: Media;\n  /** Sets whether the audio node's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Cover image. */\n  coverImage?: Media;\n  /** Track name. */\n  name?: string | null;\n  /** Author name. */\n  authorName?: string | null;\n  /** An HTML version of the audio node. */\n  html?: string | null;\n}\n\nexport interface OrderedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n  /** List start number. */\n  start?: number | null;\n}\n\nexport interface BulletedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n}\n\nexport interface BlockquoteData {\n  /** Indentation level from 1-4. */\n  indentation?: number;\n}\n\nexport interface CaptionData {\n  textStyle?: TextStyle;\n}\n\nexport interface LayoutCellData {\n  /** Size of the cell in 12 columns grid. */\n  colSpan?: number | null;\n}\n\nexport interface Metadata {\n  /** Schema version. */\n  version?: number;\n  /**\n   * When the object was created.\n   * @readonly\n   * @deprecated\n   */\n  createdTimestamp?: Date | null;\n  /**\n   * When the object was most recently updated.\n   * @deprecated\n   */\n  updatedTimestamp?: Date | null;\n  /** Object ID. */\n  _id?: string | null;\n}\n\nexport interface DocumentStyle {\n  /** Styling for H1 nodes. */\n  headerOne?: TextNodeStyle;\n  /** Styling for H2 nodes. */\n  headerTwo?: TextNodeStyle;\n  /** Styling for H3 nodes. */\n  headerThree?: TextNodeStyle;\n  /** Styling for H4 nodes. */\n  headerFour?: TextNodeStyle;\n  /** Styling for H5 nodes. */\n  headerFive?: TextNodeStyle;\n  /** Styling for H6 nodes. */\n  headerSix?: TextNodeStyle;\n  /** Styling for paragraph nodes. */\n  paragraph?: TextNodeStyle;\n  /** Styling for block quote nodes. */\n  blockquote?: TextNodeStyle;\n  /** Styling for code block nodes. */\n  codeBlock?: TextNodeStyle;\n}\n\nexport interface TextNodeStyle {\n  /** The decorations to apply to the node. */\n  decorations?: Decoration[];\n  /** Padding and background color for the node. */\n  nodeStyle?: NodeStyle;\n  /** Line height for text in the node. */\n  lineHeight?: string | null;\n}\n\nexport interface InvalidateCache extends InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n  /** Invalidate by custom tag. Tags used in BO invalidation are disabled for this endpoint (more info: https://wix-bo.com/dev/clear-ssr-cache) */\n  customTag?: CustomTag;\n  /**\n   * tell us why you're invalidating the cache. You don't need to add your app name\n   * @maxLength 256\n   */\n  reason?: string | null;\n  /** Is local DS */\n  localDc?: boolean;\n  hardPurge?: boolean;\n}\n\n/** @oneof */\nexport interface InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n  /** Invalidate by custom tag. Tags used in BO invalidation are disabled for this endpoint (more info: https://wix-bo.com/dev/clear-ssr-cache) */\n  customTag?: CustomTag;\n}\n\nexport interface App {\n  /**\n   * The AppDefId\n   * @minLength 1\n   */\n  appDefId?: string;\n  /**\n   * The instance Id\n   * @format GUID\n   */\n  instanceId?: string;\n}\n\nexport interface Page {\n  /**\n   * the msid the page is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Page ID\n   * @minLength 1\n   */\n  pageId?: string;\n}\n\nexport interface URI {\n  /**\n   * the msid the URI is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes\n   * @minLength 1\n   */\n  uriPath?: string;\n}\n\nexport interface File {\n  /**\n   * the msid the file is related to\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by filename (for media files such as PDFs)\n   * @minLength 1\n   * @maxLength 256\n   */\n  fileName?: string;\n}\n\nexport interface CustomTag {\n  /**\n   * the msid the tag is related to\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Tag to invalidate by\n   * @minLength 1\n   * @maxLength 256\n   */\n  tag?: string;\n}\n\nexport interface CreateInfoSectionRequest {\n  /** Info section to create. */\n  infoSection: InfoSection;\n}\n\nexport interface CreateInfoSectionResponse {\n  /** Created info section. */\n  infoSection?: InfoSection;\n}\n\nexport interface GetInfoSectionRequest {\n  /**\n   * Info section ID.\n   * @format GUID\n   */\n  infoSectionId: string;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport enum RequestedFields {\n  UNKNOWN_REQUESTED_FIELD = 'UNKNOWN_REQUESTED_FIELD',\n  ASSIGNED_PRODUCTS_COUNT = 'ASSIGNED_PRODUCTS_COUNT',\n}\n\n/** @enumType */\nexport type RequestedFieldsWithLiterals =\n  | RequestedFields\n  | 'UNKNOWN_REQUESTED_FIELD'\n  | 'ASSIGNED_PRODUCTS_COUNT';\n\nexport interface GetInfoSectionResponse {\n  /** Info section. */\n  infoSection?: InfoSection;\n}\n\nexport interface GetOrCreateInfoSectionRequest {\n  /** Info section to retrieve or create. */\n  infoSection?: InfoSectionForGetOrCreate;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface InfoSectionForGetOrCreate {\n  /**\n   * Info section ID.\n   * Pass an ID to retrieve an existing info section.\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * Info section unique name.\n   *\n   * > **Note:**\n   * > + Pass the `uniqueName` of an existing info section to return it.\n   * > + If no such info section exists - pass `uniqueName` and `title` to create an info section.\n   * @maxLength 100\n   */\n  uniqueName?: string | null;\n  /**\n   * Info section title.\n   *\n   * Required when passing `uniqueName` to create a new info section.\n   * @minLength 1\n   * @maxLength 50\n   */\n  title?: string | null;\n  /**\n   * Info section description using rich content.\n   *\n   * Learn more about [Working with Rich Content](https://dev.wix.com/docs/go-headless/tutorials-templates/other-tutorials/working-with-rich-content).\n   */\n  description?: RichContent;\n  /**\n   * Info section description in HTML.\n   *\n   * When provided on create/update, this string must be a valid HTML. It will then be converted to rich content.\n   * `plainDescription` is ignored when value is also passed to the `description` field.\n   * @maxLength 16000\n   */\n  plainDescription?: string | null;\n}\n\nexport interface GetOrCreateInfoSectionResponse {\n  /** Info section. */\n  infoSection?: InfoSection;\n}\n\nexport interface BulkGetOrCreateInfoSectionsRequest {\n  /**\n   * Info sections to retrieve or create.\n   * @minSize 1\n   * @maxSize 100\n   */\n  infoSections?: InfoSectionForGetOrCreate[];\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface BulkGetOrCreateInfoSectionsResponse {\n  /**\n   * Info sections retrieved or created by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkInfoSectionItemResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkInfoSectionItemResult {\n  /** Bulk action metadata for inventory item. */\n  itemMetadata?: ItemMetadata;\n  /**\n   * Full inventory item entity.\n   *\n   * Returned only if `returnEntity: true` is passed in the request.\n   */\n  item?: InfoSection;\n}\n\nexport interface ItemMetadata {\n  /**\n   * Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n   * @format GUID\n   */\n  _id?: string | null;\n  /** Index of the item within the request array. Allows for correlation between request and response items. */\n  originalIndex?: number;\n  /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */\n  success?: boolean;\n  /** Details about the error in case of failure. */\n  error?: ApplicationError;\n}\n\nexport interface ApplicationError {\n  /** Error code. */\n  code?: string;\n  /** Description of the error. */\n  description?: string;\n  /** Data related to the error. */\n  data?: Record<string, any> | null;\n}\n\nexport interface BulkActionMetadata {\n  /** Number of items that were successfully processed. */\n  totalSuccesses?: number;\n  /** Number of items that couldn't be processed. */\n  totalFailures?: number;\n  /** Number of failures without details because detailed failure threshold was exceeded. */\n  undetailedFailures?: number;\n}\n\nexport interface UpdateInfoSectionRequest {\n  /** Info section to update. */\n  infoSection: InfoSection;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface UpdateInfoSectionResponse {\n  /** Updated info section. */\n  infoSection?: InfoSection;\n}\n\nexport interface DeleteInfoSectionRequest {\n  /**\n   * Info section ID\n   * @format GUID\n   */\n  infoSectionId: string;\n}\n\nexport interface DeleteInfoSectionResponse {}\n\nexport interface QueryInfoSectionsRequest {\n  /** Query options. */\n  query?: CursorQuery;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface CursorQuery extends CursorQueryPagingMethodOneOf {\n  /**\n   * Cursor paging options.\n   *\n   * Learn more about [cursor paging](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#cursor-paging).\n   */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object.\n   *\n   * Learn more about the [filter section](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#the-filter-section).\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object.\n   *\n   * Learn more about the [sort section](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#the-sort-section).\n   * @maxSize 5\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface CursorQueryPagingMethodOneOf {\n  /**\n   * Cursor paging options.\n   *\n   * Learn more about [cursor paging](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language#cursor-paging).\n   */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryInfoSectionsResponse {\n  /** List of info sections. */\n  infoSections?: InfoSection[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in current page. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface BulkCreateInfoSectionsRequest {\n  /**\n   * Info sections to create.\n   * @minSize 1\n   * @maxSize 100\n   */\n  infoSections: InfoSection[];\n  /**\n   * Whether to return the full created info section entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n}\n\nexport interface BulkCreateInfoSectionsResponse {\n  /**\n   * Info sections created by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkInfoSectionItemResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkUpdateInfoSectionsRequest {\n  /**\n   * List of info sections to update.\n   * @minSize 1\n   * @maxSize 100\n   */\n  infoSections: MaskedInfoSection[];\n  /**\n   * Whether to return the full updated info sections entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface MaskedInfoSection {\n  /** Info section to update. */\n  infoSection?: InfoSection;\n  /** Explicit list of fields to update. */\n  fieldMask?: string[];\n}\n\nexport interface BulkUpdateInfoSectionsResponse {\n  /**\n   * Info sections updated by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkInfoSectionItemResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkDeleteInfoSectionsRequest {\n  /**\n   * IDs of info sections to delete.\n   * @format GUID\n   * @minSize 1\n   * @maxSize 100\n   */\n  infoSectionIds: string[];\n}\n\nexport interface BulkDeleteInfoSectionsResponse {\n  /** Info sections deleted by bulk action */\n  results?: BulkInfoSectionResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkInfoSectionResult {\n  /** Bulk action metadata for info section. */\n  itemMetadata?: ItemMetadata;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface InfoSectionCreatedEnvelope {\n  entity: InfoSection;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an info section is created.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read info sections in v3 catalog\n * @permissionScopeId SCOPE.STORES.INFO_SECTION_READ\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.INFO_SECTION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.info_section_created\n * @serviceIdentifier com.wix.stores.catalog.info.section.v3.InfoSectionsService\n * @slug created\n * @documentationMaturity preview\n */\nexport declare function onInfoSectionCreated(\n  handler: (event: InfoSectionCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface InfoSectionDeletedEnvelope {\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an info section is deleted.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read info sections in v3 catalog\n * @permissionScopeId SCOPE.STORES.INFO_SECTION_READ\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.INFO_SECTION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.info_section_deleted\n * @serviceIdentifier com.wix.stores.catalog.info.section.v3.InfoSectionsService\n * @slug deleted\n * @documentationMaturity preview\n */\nexport declare function onInfoSectionDeleted(\n  handler: (event: InfoSectionDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface InfoSectionUpdatedEnvelope {\n  entity: InfoSection;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when an info section is updated.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read info sections in v3 catalog\n * @permissionScopeId SCOPE.STORES.INFO_SECTION_READ\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.INFO_SECTION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.info_section_updated\n * @serviceIdentifier com.wix.stores.catalog.info.section.v3.InfoSectionsService\n * @slug updated\n * @documentationMaturity preview\n */\nexport declare function onInfoSectionUpdated(\n  handler: (event: InfoSectionUpdatedEnvelope) => void | Promise<void>\n): void;\n\ntype InfoSectionNonNullablePaths = `uniqueName` | `title`;\n\n/**\n * Creates an info section.\n *\n * To assign the info section to a product, include the `infoSection.id` or `infoSection.uniqueName`\n * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or\n * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.\n * @param infoSection - Info section to create.\n * @public\n * @documentationMaturity preview\n * @requiredField infoSection\n * @requiredField infoSection.title\n * @requiredField infoSection.uniqueName\n * @permissionId WIX_STORES.INFO_SECTION_CREATE\n * @applicableIdentity APP\n * @returns Created info section.\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.CreateInfoSection\n */\nexport async function createInfoSection(\n  infoSection: NonNullablePaths<InfoSection, `title` | `uniqueName`>\n): Promise<NonNullablePaths<InfoSection, InfoSectionNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSection: infoSection },\n    ['infoSection.description']\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.createInfoSection(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'infoSection.description',\n    ])?.infoSection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { infoSection: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSection']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves an info section.\n * @param infoSectionId - Info section ID.\n * @public\n * @documentationMaturity preview\n * @requiredField infoSectionId\n * @permissionId WIX_STORES.INFO_SECTION_READ\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @returns Info section.\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetInfoSection\n */\nexport async function getInfoSection(\n  infoSectionId: string,\n  options?: GetInfoSectionOptions\n): Promise<NonNullablePaths<InfoSection, InfoSectionNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSectionId: infoSectionId, fields: options?.fields },\n    []\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.getInfoSection(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'infoSection.description',\n    ])?.infoSection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          infoSectionId: '$[0]',\n          fields: '$[1].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSectionId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetInfoSectionOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Retrieves an info section by ID or `uniqueName`, or creates an info section if one with the passed `uniqueName` doesn't exist.\n *\n * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n * @public\n * @documentationMaturity preview\n * @permissionId WIX_STORES.INFO_SECTION_GET_OR_CREATE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetOrCreateInfoSection\n */\nexport async function getOrCreateInfoSection(\n  options?: GetOrCreateInfoSectionOptions\n): Promise<\n  NonNullablePaths<\n    GetOrCreateInfoSectionResponse,\n    {\n      [P in InfoSectionNonNullablePaths]: `infoSection.${P}`;\n    }[InfoSectionNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSection: options?.infoSection, fields: options?.fields },\n    []\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.getOrCreateInfoSection(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'infoSection.description',\n    ])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          infoSection: '$[0].infoSection',\n          fields: '$[0].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetOrCreateInfoSectionOptions {\n  /** Info section to retrieve or create. */\n  infoSection?: InfoSectionForGetOrCreate;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Retrieves multiple info sections by ID or `uniqueName`, or creates multiple info sections if those with the passed `uniqueName` don't exist.\n *\n * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n * @public\n * @documentationMaturity preview\n * @permissionId WIX_STORES.INFO_SECTION_GET_OR_CREATE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkGetOrCreateInfoSections\n */\nexport async function bulkGetOrCreateInfoSections(\n  options?: BulkGetOrCreateInfoSectionsOptions\n): Promise<\n  NonNullablePaths<\n    BulkGetOrCreateInfoSectionsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in InfoSectionNonNullablePaths]: `results.${number}.item.${P}`;\n      }[InfoSectionNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSections: options?.infoSections, fields: options?.fields },\n    []\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.bulkGetOrCreateInfoSections(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'results.item.description',\n    ])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          infoSections: '$[0].infoSections',\n          fields: '$[0].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkGetOrCreateInfoSectionsOptions {\n  /**\n   * Info sections to retrieve or create.\n   * @minSize 1\n   * @maxSize 100\n   */\n  infoSections?: InfoSectionForGetOrCreate[];\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Updates an info section.\n *\n *\n * Each time the info section is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the info section.\n * This ensures you're working with the latest info section and prevents unintended overwrites.\n * @param _id - Info section ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField infoSection\n * @requiredField infoSection.revision\n * @permissionId WIX_STORES.INFO_SECTION_UPDATE\n * @applicableIdentity APP\n * @returns Updated info section.\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.UpdateInfoSection\n */\nexport async function updateInfoSection(\n  _id: string,\n  infoSection: NonNullablePaths<UpdateInfoSection, `revision`>,\n  options?: UpdateInfoSectionOptions\n): Promise<NonNullablePaths<InfoSection, InfoSectionNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSection: { ...infoSection, id: _id }, fields: options?.fields },\n    ['infoSection.description']\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.updateInfoSection(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'infoSection.description',\n    ])?.infoSection!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { infoSection: '$[1]' },\n        explicitPathsToArguments: {\n          'infoSection.id': '$[0]',\n          fields: '$[2].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'infoSection', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateInfoSection {\n  /**\n   * Info section ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Revision number, which increments by 1 each time the info section is updated.\n   * To prevent conflicting changes,\n   * the current revision must be passed when updating the info section.\n   *\n   * Ignored when creating an info section.\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Date and time the info section was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the info section was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Unique name. Used as an identifier.\n   * @maxLength 100\n   */\n  uniqueName?: string;\n  /**\n   * Info section title.\n   * @minLength 1\n   * @maxLength 50\n   */\n  title?: string;\n  /**\n   * Info section description using rich content.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"indent.emoji.divider.codeBlock.file.gallery.giphy.image.table.link.textHighlight.textColor\" exampleid=\"7dc9240e-d548-417a-abcf-0291b68b4303\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   */\n  description?: RichContent;\n  /**\n   * Info section description in HTML.\n   *\n   * When provided on create/update, this string must be a valid HTML. It will then be converted to rich content.\n   * `plainDescription` is ignored when value is also passed to the `description` field.\n   * @maxLength 16000\n   */\n  plainDescription?: string | null;\n  /**\n   * Number of products this info section is assigned to.\n   * > **Note:** Returned only when you pass `\"ASSIGNED_PRODUCTS_COUNT\"` to the `fields` array in Info Sections API requests.\n   * @readonly\n   */\n  assignedProductsCount?: number | null;\n}\n\nexport interface UpdateInfoSectionOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Deletes an info section.\n *\n * > **Note:** Deleting an info section will also remove it from all products it is assigned to.\n * @param infoSectionId - Info section ID\n * @public\n * @documentationMaturity preview\n * @requiredField infoSectionId\n * @permissionId WIX_STORES.INFO_SECTION_DELETE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.DeleteInfoSection\n */\nexport async function deleteInfoSection(infoSectionId: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSectionId: infoSectionId },\n    []\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.deleteInfoSection(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { infoSectionId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSectionId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of up to 100 info sections, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Info Sections runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Info Sections: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/info-sections-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n * @public\n * @documentationMaturity preview\n * @permissionId WIX_STORES.INFO_SECTION_READ\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.QueryInfoSections\n */\nexport function queryInfoSections(\n  options?: QueryInfoSectionsOptions\n): InfoSectionsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    InfoSection,\n    'CURSOR',\n    QueryInfoSectionsRequest,\n    QueryInfoSectionsResponse\n  >({\n    func: async (payload: QueryInfoSectionsRequest) => {\n      const reqOpts = ambassadorWixStoresCatalogV3InfoSection.queryInfoSections(\n        { ...payload, ...(options ?? {}) }\n      );\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryInfoSectionsRequest['query']) => {\n      const args = [query, options] as [\n        QueryInfoSectionsRequest['query'],\n        QueryInfoSectionsOptions\n      ];\n      return renameKeysFromSDKRequestToRESTRequest(\n        { ...args?.[1], query: args?.[0] },\n        []\n      );\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryInfoSectionsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, []),\n        ['infoSections.description']\n      );\n\n      return {\n        items: transformedData?.infoSections,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\nexport interface QueryInfoSectionsOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[] | undefined;\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface InfoSectionsQueryResult extends QueryCursorResult {\n  items: InfoSection[];\n  query: InfoSectionsQueryBuilder;\n  next: () => Promise<InfoSectionsQueryResult>;\n  prev: () => Promise<InfoSectionsQueryResult>;\n}\n\nexport interface InfoSectionsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName: '_id' | 'uniqueName' | 'title',\n    value: string\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any[]\n  ) => InfoSectionsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: any\n  ) => InfoSectionsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'uniqueName'\n      | 'title',\n    value: boolean\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  ascending: (\n    ...propertyNames: Array<\n      '_createdDate' | '_updatedDate' | 'uniqueName' | 'title'\n    >\n  ) => InfoSectionsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  descending: (\n    ...propertyNames: Array<\n      '_createdDate' | '_updatedDate' | 'uniqueName' | 'title'\n    >\n  ) => InfoSectionsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => InfoSectionsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => InfoSectionsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<InfoSectionsQueryResult>;\n}\n\n/**\n * Creates multiple info sections.\n * @param infoSections - Info sections to create.\n * @public\n * @documentationMaturity preview\n * @requiredField infoSections\n * @requiredField infoSections.title\n * @requiredField infoSections.uniqueName\n * @permissionId WIX_STORES.INFO_SECTION_CREATE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkCreateInfoSections\n */\nexport async function bulkCreateInfoSections(\n  infoSections: NonNullablePaths<InfoSection, `title` | `uniqueName`>[],\n  options?: BulkCreateInfoSectionsOptions\n): Promise<\n  NonNullablePaths<\n    BulkCreateInfoSectionsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in InfoSectionNonNullablePaths]: `results.${number}.item.${P}`;\n      }[InfoSectionNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSections: infoSections, returnEntity: options?.returnEntity },\n    ['infoSections.description']\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.bulkCreateInfoSections(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'results.item.description',\n    ])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          infoSections: '$[0]',\n          returnEntity: '$[1].returnEntity',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSections', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkCreateInfoSectionsOptions {\n  /**\n   * Whether to return the full created info section entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n}\n\n/**\n * Updates multiple info sections.\n *\n * Each time an info section is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating an info section.\n * This ensures you're working with the latest info section and prevents unintended overwrites.\n * @param infoSections - List of info sections to update.\n * @public\n * @documentationMaturity preview\n * @requiredField infoSections\n * @requiredField infoSections.infoSection._id\n * @requiredField infoSections.infoSection.revision\n * @permissionId WIX_STORES.INFO_SECTION_UPDATE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkUpdateInfoSections\n */\nexport async function bulkUpdateInfoSections(\n  infoSections: NonNullablePaths<\n    MaskedInfoSection,\n    `infoSection._id` | `infoSection.revision`\n  >[],\n  options?: BulkUpdateInfoSectionsOptions\n): Promise<\n  NonNullablePaths<\n    BulkUpdateInfoSectionsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in InfoSectionNonNullablePaths]: `results.${number}.item.${P}`;\n      }[InfoSectionNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    {\n      infoSections: infoSections,\n      returnEntity: options?.returnEntity,\n      fields: options?.fields,\n    },\n    ['infoSections.infoSection.description']\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.bulkUpdateInfoSections(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [\n      'results.item.description',\n    ])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          infoSections: '$[0]',\n          returnEntity: '$[1].returnEntity',\n          fields: '$[1].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSections', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkUpdateInfoSectionsOptions {\n  /**\n   * Whether to return the full updated info sections entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Deletes multiple info sections.\n * @param infoSectionIds - IDs of info sections to delete.\n * @public\n * @documentationMaturity preview\n * @requiredField infoSectionIds\n * @permissionId WIX_STORES.INFO_SECTION_DELETE\n * @applicableIdentity APP\n * @fqn com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkDeleteInfoSections\n */\nexport async function bulkDeleteInfoSections(\n  infoSectionIds: string[]\n): Promise<\n  NonNullablePaths<\n    BulkDeleteInfoSectionsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest(\n    { infoSectionIds: infoSectionIds },\n    []\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3InfoSection.bulkDeleteInfoSections(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data, [])!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { infoSectionIds: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['infoSectionIds']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/info-sections',\n        destPath: '/v3/info-sections',\n      },\n      {\n        srcPath: '/stores/v3/bulk/info-sections',\n        destPath: '/v3/bulk/info-sections',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/info-sections',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/info-section',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/info-section',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/info-section',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/info-section',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/info-section',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_info-sections-v-3';\n\n/**\n * Creates an info section.\n *\n * To assign the info section to a product, include the `infoSection.id` or `infoSection.uniqueName`\n * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or\n * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.\n */\nexport function createInfoSection(payload: object): RequestOptionsFactory<any> {\n  function __createInfoSection({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSection.createdDate' },\n          { path: 'infoSection.updatedDate' },\n          { path: 'infoSection.description.metadata.createdTimestamp' },\n          { path: 'infoSection.description.metadata.updatedTimestamp' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'infoSection.description.nodes.imageData.image.duration' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'infoSection.description.nodes.appEmbedData.image.duration' },\n          { path: 'infoSection.description.nodes.videoData.video.duration' },\n          {\n            path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n          },\n          { path: 'infoSection.description.nodes.audioData.audio.duration' },\n          {\n            path: 'infoSection.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.CreateInfoSection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'infoSection.createdDate' },\n              { path: 'infoSection.updatedDate' },\n              { path: 'infoSection.description.metadata.createdTimestamp' },\n              { path: 'infoSection.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'infoSection.description.nodes.imageData.image.duration',\n              },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createInfoSection;\n}\n\n/** Retrieves an info section. */\nexport function getInfoSection(payload: object): RequestOptionsFactory<any> {\n  function __getInfoSection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetInfoSection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections/{infoSectionId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'infoSection.createdDate' },\n              { path: 'infoSection.updatedDate' },\n              { path: 'infoSection.description.metadata.createdTimestamp' },\n              { path: 'infoSection.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'infoSection.description.nodes.imageData.image.duration',\n              },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getInfoSection;\n}\n\n/**\n * Retrieves an info section by ID or `uniqueName`, or creates an info section if one with the passed `uniqueName` doesn't exist.\n *\n * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n */\nexport function getOrCreateInfoSection(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getOrCreateInfoSection({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'infoSection.description.nodes.imageData.image.duration' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'infoSection.description.nodes.appEmbedData.image.duration' },\n          { path: 'infoSection.description.nodes.videoData.video.duration' },\n          {\n            path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n          },\n          { path: 'infoSection.description.nodes.audioData.audio.duration' },\n          {\n            path: 'infoSection.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSection.description.metadata.createdTimestamp' },\n          { path: 'infoSection.description.metadata.updatedTimestamp' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.GetOrCreateInfoSection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections/get-or-create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'infoSection.createdDate' },\n              { path: 'infoSection.updatedDate' },\n              { path: 'infoSection.description.metadata.createdTimestamp' },\n              { path: 'infoSection.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'infoSection.description.nodes.imageData.image.duration',\n              },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrCreateInfoSection;\n}\n\n/**\n * Retrieves multiple info sections by ID or `uniqueName`, or creates multiple info sections if those with the passed `uniqueName` don't exist.\n *\n * > **Note:** If an info section with the passed `uniqueName` doesn't exist, the `uniqueName` and `title` fields are required to create a new info section.\n */\nexport function bulkGetOrCreateInfoSections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkGetOrCreateInfoSections({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSections.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'infoSections.description.nodes.imageData.image.duration' },\n          { path: 'infoSections.description.nodes.mapData.mapSettings.lat' },\n          { path: 'infoSections.description.nodes.mapData.mapSettings.lng' },\n          {\n            path: 'infoSections.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.appEmbedData.image.duration',\n          },\n          { path: 'infoSections.description.nodes.videoData.video.duration' },\n          {\n            path: 'infoSections.description.nodes.videoData.thumbnail.duration',\n          },\n          { path: 'infoSections.description.nodes.audioData.audio.duration' },\n          {\n            path: 'infoSections.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSections.description.metadata.createdTimestamp' },\n          { path: 'infoSections.description.metadata.updatedTimestamp' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkGetOrCreateInfoSections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/bulk/info-sections/get-or-create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n              { path: 'results.item.description.metadata.createdTimestamp' },\n              { path: 'results.item.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.item.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.description.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkGetOrCreateInfoSections;\n}\n\n/**\n * Updates an info section.\n *\n *\n * Each time the info section is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the info section.\n * This ensures you're working with the latest info section and prevents unintended overwrites.\n */\nexport function updateInfoSection(payload: object): RequestOptionsFactory<any> {\n  function __updateInfoSection({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSection.createdDate' },\n          { path: 'infoSection.updatedDate' },\n          { path: 'infoSection.description.metadata.createdTimestamp' },\n          { path: 'infoSection.description.metadata.updatedTimestamp' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'infoSection.description.nodes.imageData.image.duration' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n          { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          { path: 'infoSection.description.nodes.appEmbedData.image.duration' },\n          { path: 'infoSection.description.nodes.videoData.video.duration' },\n          {\n            path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n          },\n          { path: 'infoSection.description.nodes.audioData.audio.duration' },\n          {\n            path: 'infoSection.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'PATCH' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.UpdateInfoSection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections/{infoSection.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'infoSection.createdDate' },\n              { path: 'infoSection.updatedDate' },\n              { path: 'infoSection.description.metadata.createdTimestamp' },\n              { path: 'infoSection.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'infoSection.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'infoSection.description.nodes.imageData.image.duration',\n              },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lat' },\n              { path: 'infoSection.description.nodes.mapData.mapSettings.lng' },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'infoSection.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateInfoSection;\n}\n\n/**\n * Deletes an info section.\n *\n * > **Note:** Deleting an info section will also remove it from all products it is assigned to.\n */\nexport function deleteInfoSection(payload: object): RequestOptionsFactory<any> {\n  function __deleteInfoSection({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.DeleteInfoSection',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections/{infoSectionId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteInfoSection;\n}\n\n/**\n * Retrieves a list of up to 100 info sections, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Info Sections runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Info Sections: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/info-sections-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryInfoSections(payload: object): RequestOptionsFactory<any> {\n  function __queryInfoSections({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.QueryInfoSections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/info-sections/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'infoSections.createdDate' },\n              { path: 'infoSections.updatedDate' },\n              { path: 'infoSections.description.metadata.createdTimestamp' },\n              { path: 'infoSections.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'infoSections.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'infoSections.description.nodes.imageData.image.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'infoSections.description.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'infoSections.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'infoSections.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryInfoSections;\n}\n\n/** Creates multiple info sections. */\nexport function bulkCreateInfoSections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreateInfoSections({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSections.createdDate' },\n          { path: 'infoSections.updatedDate' },\n          { path: 'infoSections.description.metadata.createdTimestamp' },\n          { path: 'infoSections.description.metadata.updatedTimestamp' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSections.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.galleryData.options.item.ratio',\n          },\n          { path: 'infoSections.description.nodes.imageData.image.duration' },\n          { path: 'infoSections.description.nodes.mapData.mapSettings.lat' },\n          { path: 'infoSections.description.nodes.mapData.mapSettings.lng' },\n          {\n            path: 'infoSections.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          {\n            path: 'infoSections.description.nodes.appEmbedData.image.duration',\n          },\n          { path: 'infoSections.description.nodes.videoData.video.duration' },\n          {\n            path: 'infoSections.description.nodes.videoData.thumbnail.duration',\n          },\n          { path: 'infoSections.description.nodes.audioData.audio.duration' },\n          {\n            path: 'infoSections.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkCreateInfoSections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/bulk/info-sections/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n              { path: 'results.item.description.metadata.createdTimestamp' },\n              { path: 'results.item.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.item.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.description.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateInfoSections;\n}\n\n/**\n * Updates multiple info sections.\n *\n * Each time an info section is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating an info section.\n * This ensures you're working with the latest info section and prevents unintended overwrites.\n */\nexport function bulkUpdateInfoSections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateInfoSections({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'infoSections.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'infoSections.infoSection.createdDate' },\n          { path: 'infoSections.infoSection.updatedDate' },\n          {\n            path: 'infoSections.infoSection.description.metadata.createdTimestamp',\n          },\n          {\n            path: 'infoSections.infoSection.description.metadata.updatedTimestamp',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'infoSections.infoSection.description.nodes.galleryData.items.image.media.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.galleryData.items.video.media.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.galleryData.items.video.thumbnail.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.galleryData.options.item.ratio',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.imageData.image.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.mapData.mapSettings.lat',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.mapData.mapSettings.lng',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.pollData.poll.image.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.pollData.poll.options.image.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.pollData.design.poll.background.image.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.appEmbedData.image.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.videoData.video.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.videoData.thumbnail.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.audioData.audio.duration',\n          },\n          {\n            path: 'infoSections.infoSection.description.nodes.audioData.coverImage.duration',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkUpdateInfoSections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/bulk/info-sections/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n              { path: 'results.item.description.metadata.createdTimestamp' },\n              { path: 'results.item.description.metadata.updatedTimestamp' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.item.description.nodes.galleryData.items.image.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.media.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.items.video.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.galleryData.options.item.ratio',\n              },\n              {\n                path: 'results.item.description.nodes.imageData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lat',\n              },\n              {\n                path: 'results.item.description.nodes.mapData.mapSettings.lng',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.poll.options.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.pollData.design.poll.background.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.appEmbedData.image.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.video.duration',\n              },\n              {\n                path: 'results.item.description.nodes.videoData.thumbnail.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.audio.duration',\n              },\n              {\n                path: 'results.item.description.nodes.audioData.coverImage.duration',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateInfoSections;\n}\n\n/** Deletes multiple info sections. */\nexport function bulkDeleteInfoSections(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeleteInfoSections({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.info_section',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.info.section.v3.InfoSectionsService.BulkDeleteInfoSections',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInfoSectionV3InfoSectionsServiceUrl({\n        protoPath: '/v3/bulk/info-sections/delete',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteInfoSections;\n}\n","import {\n  createInfoSection as publicCreateInfoSection,\n  getInfoSection as publicGetInfoSection,\n  getOrCreateInfoSection as publicGetOrCreateInfoSection,\n  bulkGetOrCreateInfoSections as publicBulkGetOrCreateInfoSections,\n  updateInfoSection as publicUpdateInfoSection,\n  deleteInfoSection as publicDeleteInfoSection,\n  queryInfoSections as publicQueryInfoSections,\n  bulkCreateInfoSections as publicBulkCreateInfoSections,\n  bulkUpdateInfoSections as publicBulkUpdateInfoSections,\n  bulkDeleteInfoSections as publicBulkDeleteInfoSections,\n} from './stores-catalog-v3-info-section-info-sections-v-3.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onInfoSectionCreated as publicOnInfoSectionCreated } from './stores-catalog-v3-info-section-info-sections-v-3.public.js';\nimport { onInfoSectionDeleted as publicOnInfoSectionDeleted } from './stores-catalog-v3-info-section-info-sections-v-3.public.js';\nimport { onInfoSectionUpdated as publicOnInfoSectionUpdated } from './stores-catalog-v3-info-section-info-sections-v-3.public.js';\n\nexport const createInfoSection: MaybeContext<\n  BuildRESTFunction<typeof publicCreateInfoSection> &\n    typeof publicCreateInfoSection\n> = /*#__PURE__*/ createRESTModule(publicCreateInfoSection);\nexport const getInfoSection: MaybeContext<\n  BuildRESTFunction<typeof publicGetInfoSection> & typeof publicGetInfoSection\n> = /*#__PURE__*/ createRESTModule(publicGetInfoSection);\nexport const getOrCreateInfoSection: MaybeContext<\n  BuildRESTFunction<typeof publicGetOrCreateInfoSection> &\n    typeof publicGetOrCreateInfoSection\n> = /*#__PURE__*/ createRESTModule(publicGetOrCreateInfoSection);\nexport const bulkGetOrCreateInfoSections: MaybeContext<\n  BuildRESTFunction<typeof publicBulkGetOrCreateInfoSections> &\n    typeof publicBulkGetOrCreateInfoSections\n> = /*#__PURE__*/ createRESTModule(publicBulkGetOrCreateInfoSections);\nexport const updateInfoSection: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateInfoSection> &\n    typeof publicUpdateInfoSection\n> = /*#__PURE__*/ createRESTModule(publicUpdateInfoSection);\nexport const deleteInfoSection: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteInfoSection> &\n    typeof publicDeleteInfoSection\n> = /*#__PURE__*/ createRESTModule(publicDeleteInfoSection);\nexport const queryInfoSections: MaybeContext<\n  BuildRESTFunction<typeof publicQueryInfoSections> &\n    typeof publicQueryInfoSections\n> = /*#__PURE__*/ createRESTModule(publicQueryInfoSections);\nexport const bulkCreateInfoSections: MaybeContext<\n  BuildRESTFunction<typeof publicBulkCreateInfoSections> &\n    typeof publicBulkCreateInfoSections\n> = /*#__PURE__*/ createRESTModule(publicBulkCreateInfoSections);\nexport const bulkUpdateInfoSections: MaybeContext<\n  BuildRESTFunction<typeof publicBulkUpdateInfoSections> &\n    typeof publicBulkUpdateInfoSections\n> = /*#__PURE__*/ createRESTModule(publicBulkUpdateInfoSections);\nexport const bulkDeleteInfoSections: MaybeContext<\n  BuildRESTFunction<typeof publicBulkDeleteInfoSections> &\n    typeof publicBulkDeleteInfoSections\n> = /*#__PURE__*/ createRESTModule(publicBulkDeleteInfoSections);\n/**\n * Triggered when an info section is created.\n */\nexport const onInfoSectionCreated: BuildEventDefinition<\n  typeof publicOnInfoSectionCreated\n> = createEventModule(publicOnInfoSectionCreated);\n/**\n * Triggered when an info section is deleted.\n */\nexport const onInfoSectionDeleted: BuildEventDefinition<\n  typeof publicOnInfoSectionDeleted\n> = createEventModule(publicOnInfoSectionDeleted);\n/**\n * Triggered when an info section is updated.\n */\nexport const onInfoSectionUpdated: BuildEventDefinition<\n  typeof publicOnInfoSectionUpdated\n> = createEventModule(publicOnInfoSectionUpdated);\n\nexport {\n  NodeType,\n  WidthType,\n  PluginContainerDataAlignment,\n  Type,\n  Target,\n  TextAlignment,\n  LineStyle,\n  Width,\n  Alignment,\n  ViewMode,\n  LayoutType,\n  Orientation,\n  Crop,\n  ThumbnailsAlignment,\n  GIFType,\n  Source,\n  Position,\n  MapType,\n  ViewRole,\n  VoteRole,\n  PollLayoutType,\n  PollLayoutDirection,\n  BackgroundType,\n  DecorationType,\n  FontType,\n  AppType,\n  InitialExpandedItems,\n  Direction,\n  VerticalAlignment,\n  NullValue,\n  RequestedFields,\n  SortOrder,\n  WebhookIdentityType,\n} from './stores-catalog-v3-info-section-info-sections-v-3.universal.js';\nexport {\n  InfoSection,\n  RichContent,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  ButtonData,\n  Border,\n  Colors,\n  PluginContainerData,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Spoiler,\n  Height,\n  Styles,\n  Link,\n  LinkDataOneOf,\n  Rel,\n  CodeBlockData,\n  TextStyle,\n  DividerData,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  PDFSettings,\n  GalleryData,\n  Media,\n  Image,\n  Video,\n  Item,\n  ItemDataOneOf,\n  GalleryOptions,\n  Layout,\n  ItemStyle,\n  Thumbnails,\n  GIFData,\n  GIF,\n  HeadingData,\n  HTMLData,\n  HTMLDataDataOneOf,\n  ImageData,\n  StylesBorder,\n  ImageDataStyles,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  MapData,\n  MapSettings,\n  ParagraphData,\n  PollData,\n  Permissions,\n  Option,\n  Settings,\n  PollLayout,\n  OptionLayout,\n  Gradient,\n  Background,\n  BackgroundBackgroundOneOf,\n  PollDesign,\n  OptionDesign,\n  Poll,\n  PollDataLayout,\n  Design,\n  TextData,\n  Decoration,\n  DecorationDataOneOf,\n  AnchorData,\n  ColorData,\n  LinkData,\n  MentionData,\n  FontSizeData,\n  SpoilerData,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  BookingData,\n  EventData,\n  VideoData,\n  PlaybackOptions,\n  EmbedData,\n  Oembed,\n  CollapsibleListData,\n  TableData,\n  Dimensions,\n  TableCellData,\n  CellStyle,\n  BorderColors,\n  ListValue,\n  AudioData,\n  OrderedListData,\n  BulletedListData,\n  BlockquoteData,\n  CaptionData,\n  LayoutCellData,\n  Metadata,\n  DocumentStyle,\n  TextNodeStyle,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  App,\n  Page,\n  URI,\n  File,\n  CustomTag,\n  CreateInfoSectionRequest,\n  CreateInfoSectionResponse,\n  GetInfoSectionRequest,\n  GetInfoSectionResponse,\n  GetOrCreateInfoSectionRequest,\n  InfoSectionForGetOrCreate,\n  GetOrCreateInfoSectionResponse,\n  BulkGetOrCreateInfoSectionsRequest,\n  BulkGetOrCreateInfoSectionsResponse,\n  BulkInfoSectionItemResult,\n  ItemMetadata,\n  ApplicationError,\n  BulkActionMetadata,\n  UpdateInfoSectionRequest,\n  UpdateInfoSectionResponse,\n  DeleteInfoSectionRequest,\n  DeleteInfoSectionResponse,\n  QueryInfoSectionsRequest,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Sorting,\n  CursorPaging,\n  QueryInfoSectionsResponse,\n  CursorPagingMetadata,\n  Cursors,\n  BulkCreateInfoSectionsRequest,\n  BulkCreateInfoSectionsResponse,\n  BulkUpdateInfoSectionsRequest,\n  MaskedInfoSection,\n  BulkUpdateInfoSectionsResponse,\n  BulkDeleteInfoSectionsRequest,\n  BulkDeleteInfoSectionsResponse,\n  BulkInfoSectionResult,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  InfoSectionCreatedEnvelope,\n  InfoSectionDeletedEnvelope,\n  InfoSectionUpdatedEnvelope,\n  GetInfoSectionOptions,\n  GetOrCreateInfoSectionOptions,\n  BulkGetOrCreateInfoSectionsOptions,\n  UpdateInfoSection,\n  UpdateInfoSectionOptions,\n  QueryInfoSectionsOptions,\n  InfoSectionsQueryResult,\n  InfoSectionsQueryBuilder,\n  BulkCreateInfoSectionsOptions,\n  BulkUpdateInfoSectionsOptions,\n} from './stores-catalog-v3-info-section-info-sections-v-3.universal.js';\n"],"mappings":"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","names":["bulkCreateInfoSections","bulkDeleteInfoSections","bulkGetOrCreateInfoSections","bulkUpdateInfoSections","createInfoSection","deleteInfoSection","getInfoSection","getOrCreateInfoSection","onInfoSectionCreated","onInfoSectionDeleted","onInfoSectionUpdated","queryInfoSections","updateInfoSection","import_rename_all_nested_keys","import_float","import_timestamp","import_transform_paths","import_float","import_timestamp","import_rest_modules","payload","import_transform_paths","NodeType","WidthType","PluginContainerDataAlignment","Type","Target","TextAlignment","LineStyle","Width","Alignment","ViewMode","LayoutType","Orientation","Crop","ThumbnailsAlignment","GIFType","Source","Position","MapType","ViewRole","VoteRole","PollLayoutType","PollLayoutDirection","BackgroundType","DecorationType","FontType","AppType","InitialExpandedItems","Direction","VerticalAlignment","NullValue","RequestedFields","SortOrder","WebhookIdentityType","createInfoSection","sdkTransformError","getInfoSection","getOrCreateInfoSection","bulkGetOrCreateInfoSections","updateInfoSection","deleteInfoSection","queryInfoSections","bulkCreateInfoSections","bulkUpdateInfoSections","bulkDeleteInfoSections","createInfoSection","getInfoSection","getOrCreateInfoSection","bulkGetOrCreateInfoSections","updateInfoSection","deleteInfoSection","queryInfoSections","bulkCreateInfoSections","bulkUpdateInfoSections","bulkDeleteInfoSections","import_rest_modules","createInfoSection","getInfoSection","getOrCreateInfoSection","bulkGetOrCreateInfoSections","updateInfoSection","deleteInfoSection","queryInfoSections","bulkCreateInfoSections","bulkUpdateInfoSections","bulkDeleteInfoSections","onInfoSectionCreated","onInfoSectionDeleted","onInfoSectionUpdated"]}