import { HttpClient, MaybeContext, BuildRESTFunction } from '@wix/sdk-types';
import { C as CollectionsQueryBuilder, a as Collection, G as GetCollectionBySlugResponse } from './stores-catalog-v1-collection-collections.universal-DXVGSHC4.mjs';
export { s as CollectionsQueryResult, l as CursorPaging, o as Cursors, r as GetCollectionBySlugRequest, p as GetCollectionRequest, q as GetCollectionResponse, K as Keyword, b as Media, c as MediaItem, d as MediaItemItemOneOf, M as MediaItemType, e as MediaItemUrlAndSize, f as MediaItemVideo, k as PlatformPaging, n as PlatformPagingMetadata, P as PlatformQuery, i as PlatformQueryPagingMethodOneOf, Q as QueryCollectionsRequest, m as QueryCollectionsResponse, g as SeoSchema, h as Settings, S as SortOrder, j as Sorting, T as Tag } from './stores-catalog-v1-collection-collections.universal-DXVGSHC4.mjs';

declare function queryCollections$1(httpClient: HttpClient): QueryCollectionsSignature;
interface QueryCollectionsSignature {
    /**
     * Retrieves a list of up to 100 collections, given the provided paging, sorting and filtering.
     * See [Stores Pagination](https://dev.wix.com/api/rest/wix-stores/pagination) for more information.
     */
    (): CollectionsQueryBuilder;
}
declare function getCollection$1(httpClient: HttpClient): GetCollectionSignature;
interface GetCollectionSignature {
    /**
     * Retrieves a collection with the provided ID.
     * @param - Requested collection ID.
     */
    (_id: string): Promise<Collection>;
}
declare function getCollectionBySlug$1(httpClient: HttpClient): GetCollectionBySlugSignature;
interface GetCollectionBySlugSignature {
    /**
     * Retrieves a collection with the provided slug.
     * @param - Slug of the collection to retrieve.
     */
    (slug: string): Promise<GetCollectionBySlugResponse>;
}

declare const queryCollections: MaybeContext<BuildRESTFunction<typeof queryCollections$1> & typeof queryCollections$1>;
declare const getCollection: MaybeContext<BuildRESTFunction<typeof getCollection$1> & typeof getCollection$1>;
declare const getCollectionBySlug: MaybeContext<BuildRESTFunction<typeof getCollectionBySlug$1> & typeof getCollectionBySlug$1>;

export { Collection, CollectionsQueryBuilder, GetCollectionBySlugResponse, getCollection, getCollectionBySlug, queryCollections };
