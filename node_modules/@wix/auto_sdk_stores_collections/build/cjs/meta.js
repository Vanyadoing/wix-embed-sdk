"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  getCollection: () => getCollection2,
  getCollectionBySlug: () => getCollectionBySlug2,
  queryCollections: () => queryCollections2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-catalog-v1-collection-collections.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixCatalogApiV2CollectionReadApiUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores-reader/v2/collections",
        destPath: "/v2/collections"
      },
      {
        srcPath: "/stores-reader/v2/inventoryItems",
        destPath: "/v2/inventoryItems"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/stores-reader/v2/inventoryItems",
        destPath: "/v2/inventoryItems"
      },
      {
        srcPath: "/stores-reader/v2/collections",
        destPath: "/v2/collections"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_collections";
function queryCollections(payload) {
  function __queryCollections({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v1.collection",
      method: "POST",
      methodFqn: "wix.catalog.api.v2.CollectionReadApi.QueryCollections",
      packageName: PACKAGE_NAME,
      url: resolveWixCatalogApiV2CollectionReadApiUrl({
        protoPath: "/v2/collections/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "collections.lastUpdated" }]
        }
      ]),
      fallback: [
        {
          method: "POST",
          url: resolveWixCatalogApiV2CollectionReadApiUrl({
            protoPath: "/v2/collections/query",
            data: payload,
            host
          }),
          data: payload
        }
      ]
    };
    return metadata;
  }
  return __queryCollections;
}
function getCollection(payload) {
  function __getCollection({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v1.collection",
      method: "GET",
      methodFqn: "wix.catalog.api.v2.CollectionReadApi.GetCollection",
      packageName: PACKAGE_NAME,
      url: resolveWixCatalogApiV2CollectionReadApiUrl({
        protoPath: "/v2/collections/{id}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "collection.lastUpdated" }]
        }
      ])
    };
    return metadata;
  }
  return __getCollection;
}
function getCollectionBySlug(payload) {
  function __getCollectionBySlug({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v1.collection",
      method: "GET",
      methodFqn: "wix.catalog.api.v2.CollectionReadApi.GetCollectionBySlug",
      packageName: PACKAGE_NAME,
      url: resolveWixCatalogApiV2CollectionReadApiUrl({
        protoPath: "/v2/collections/slug/{slug}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "collection.lastUpdated" }]
        }
      ])
    };
    return metadata;
  }
  return __getCollectionBySlug;
}

// src/stores-catalog-v1-collection-collections.meta.ts
function queryCollections2() {
  const payload = {};
  const getRequestOptions = queryCollections(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/collections/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCollection2() {
  const payload = { id: ":id" };
  const getRequestOptions = getCollection(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/collections/{id}",
    pathParams: { id: "id" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getCollectionBySlug2() {
  const payload = { slug: ":slug" };
  const getRequestOptions = getCollectionBySlug(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v2/collections/slug/{slug}",
    pathParams: { slug: "slug" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getCollection,
  getCollectionBySlug,
  queryCollections
});
//# sourceMappingURL=meta.js.map