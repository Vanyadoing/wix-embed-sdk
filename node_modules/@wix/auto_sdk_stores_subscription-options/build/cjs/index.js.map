{"version":3,"sources":["../../index.ts","../../src/stores-v1-subscription-option-subscription-options.universal.ts","../../src/stores-v1-subscription-option-subscription-options.http.ts","../../src/stores-v1-subscription-option-subscription-options.public.ts","../../src/stores-v1-subscription-option-subscription-options.context.ts"],"sourcesContent":["export * from './src/stores-v1-subscription-option-subscription-options.context.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixStoresV1SubscriptionOption from './stores-v1-subscription-option-subscription-options.http.js';\n\nexport interface SubscriptionOption {\n  /**\n   * Subscription option ID (auto-generated upon subscription option creation).\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * Subscription option title.\n   * @minLength 1\n   * @maxLength 20\n   */\n  title?: string | null;\n  /**\n   * Subscription option description (optional).\n   * @maxLength 60\n   */\n  description?: string | null;\n  /** Subscription charge times. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months. */\n  subscriptionSettings?: SubscriptionSettings;\n  /**\n   * Discount info (optional).\n   * For example, a $20 discount would be `value: 20`, `type: AMOUNT`.\n   */\n  discount?: Discount;\n}\n\nexport interface SubscriptionSettings {\n  /** Frequency of recurring payment. */\n  frequency?: SubscriptionFrequencyWithLiterals;\n  /** Whether subscription is renewed automatically at the end of each period. */\n  autoRenewal?: boolean;\n  /**\n   * Number of billing cycles before subscription ends. Ignored if `autoRenewal: true`.\n   * @min 2\n   * @max 999\n   */\n  billingCycles?: number | null;\n}\n\n/** Frequency unit of recurring payment */\nexport enum SubscriptionFrequency {\n  UNDEFINED = 'UNDEFINED',\n  DAY = 'DAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH',\n  YEAR = 'YEAR',\n}\n\n/** @enumType */\nexport type SubscriptionFrequencyWithLiterals =\n  | SubscriptionFrequency\n  | 'UNDEFINED'\n  | 'DAY'\n  | 'WEEK'\n  | 'MONTH'\n  | 'YEAR';\n\nexport interface Discount {\n  /** Discount type. */\n  type?: DiscountTypeWithLiterals;\n  /** Discount value. */\n  value?: number;\n}\n\nexport enum DiscountType {\n  UNDEFINED = 'UNDEFINED',\n  /** No discount */\n  AMOUNT = 'AMOUNT',\n  PERCENT = 'PERCENT',\n}\n\n/** @enumType */\nexport type DiscountTypeWithLiterals =\n  | DiscountType\n  | 'UNDEFINED'\n  | 'AMOUNT'\n  | 'PERCENT';\n\nexport interface GetSubscriptionOptionRequest {\n  /**\n   * Subscription option ID.\n   * @minLength 1\n   * @format GUID\n   */\n  _id: string;\n}\n\nexport interface GetSubscriptionOptionResponse {\n  /** Subscription option. */\n  subscriptionOption?: SubscriptionOption;\n}\n\nexport interface GetSubscriptionOptionsForProductRequest {\n  /**\n   * Product ID.\n   * @minLength 1\n   */\n  productId: string;\n  /** Whether to include hidden subscription options in the results. */\n  includeHiddenSubscriptionOptions?: boolean;\n}\n\nexport interface GetSubscriptionOptionsForProductResponse {\n  /** Subscription options. */\n  subscriptionOptions?: SubscriptionOptionInProduct[];\n}\n\nexport interface SubscriptionOptionInProduct {\n  /**\n   * Subscription option ID.\n   * @format GUID\n   */\n  _id?: string;\n  /** Whether the subscription option is hidden for the product (the default is false). */\n  hidden?: boolean;\n  /**\n   * Subscription option title.\n   * @minLength 1\n   * @maxLength 20\n   * @readonly\n   */\n  title?: string | null;\n  /**\n   * Subscription option description (optional).\n   * @maxLength 60\n   * @readonly\n   */\n  description?: string | null;\n  /**\n   * Subscription payment settings. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months.\n   * @readonly\n   */\n  subscriptionSettings?: SubscriptionSettings;\n  /**\n   * Discount info (optional).\n   * @readonly\n   */\n  discount?: Discount;\n}\n\nexport interface ListSubscriptionOptionsRequest {\n  /**\n   * Subscription option IDs.\n   * @format GUID\n   * @maxSize 100\n   */\n  ids?: string[];\n}\n\nexport interface ListSubscriptionOptionsResponse {\n  /** Subscription options. */\n  subscriptionOptions?: SubscriptionOption[];\n}\n\nexport interface CalculatePricesRequest {\n  /** original price to which subscription options discount will be applied */\n  price?: number;\n  /**\n   * ids of subscription options which will be applied to original price\n   * @format GUID\n   * @maxSize 100\n   */\n  ids?: string[];\n}\n\nexport interface CalculatePricesResponse {\n  /** array of calculated prices */\n  prices?: SubscriptionOptionPrices[];\n  /** price to which subscription options discount applied */\n  originalPrice?: number;\n}\n\nexport interface SubscriptionOptionPrices {\n  /** Subscription option id */\n  _id?: string;\n  /** Price data calculated for subscription option */\n  priceData?: SubscriptionOptionPriceData;\n  /** Price data calculated for subscription option, converted to the currency requested in request header */\n  convertedPriceData?: SubscriptionOptionPriceData;\n}\n\nexport interface SubscriptionOptionPriceData {\n  /** Subscription option price currency */\n  currency?: string;\n  /** Price calculated after subscription option discount applied */\n  discountedPrice?: number;\n  /** Price calculated after subscription option discount applied, formatted with the currency */\n  formattedDiscountedPrice?: string;\n}\n\nexport interface BulkCalculatePricesRequest {\n  /**\n   * Original prices to which subscription options discount will be applied.\n   * Key is identifier unique per price that can be used to match calculated prices with original price\n   * @maxSize 1001\n   */\n  prices?: Record<string, number>;\n  /**\n   * ids of subscription options which will be applied to original price\n   * @format GUID\n   * @maxSize 100\n   */\n  ids?: string[];\n}\n\nexport interface BulkCalculatePricesResponse {\n  /**\n   * Key is identifier unique per price that can be used to match calculated prices with original price\n   * Value is response with calculated prices for each subscription option\n   */\n  calculatedPrices?: Record<string, CalculatePricesResponse>;\n}\n\nexport interface BulkCalculatePricesRequestV2 {\n  /**\n   * Original prices to be calculated for each corresponding product id with related subscription plan ids\n   * @maxSize 100\n   */\n  items?: BulkCalculatePricesRequestItem[];\n}\n\nexport interface BulkCalculatePricesRequestItem {\n  /**\n   * Calculation id (product id)\n   * @minLength 1\n   * @maxLength 36\n   */\n  _id?: string;\n  /**\n   * Original prices to which subscription options discount will be applied.\n   * Key is identifier unique per price that can be used to match calculated prices with original price\n   * @maxSize 1001\n   */\n  prices?: Record<string, number>;\n  /**\n   * ids of subscription options which will be applied to original price.\n   * @format GUID\n   * @maxSize 100\n   */\n  subscriptionOptionIds?: string[];\n}\n\nexport interface BulkCalculatePricesResponseV2 {\n  /**\n   * Key is identifier unique per price that can be used to match calculated prices with original price\n   * Value is response with calculated prices for each subscription option for each product\n   */\n  calculatedPricesPerProduct?: BulkCalculatePricesResponseItem[];\n}\n\nexport interface BulkCalculatePricesResponseItem {\n  /**\n   * Calculation id (product id)\n   * @minLength 1\n   */\n  _id?: string;\n  /**\n   * Key is identifier unique per price that can be used to match calculated prices with original price\n   * Value is response with calculated prices for each subscription option\n   */\n  calculatedPrices?: Record<string, CalculatePricesResponse>;\n}\n\nexport interface GetProductIdsForSubscriptionOptionRequest {\n  /**\n   * Subscription option ID.\n   * @minLength 1\n   * @format GUID\n   */\n  _id: string;\n  /** Whether to include hidden products in the returned results. */\n  includeHiddenProducts?: boolean;\n  /** Optional pagination parameters */\n  paging?: Paging;\n}\n\nexport interface Paging {\n  /**\n   * Amount of items to load per page.\n   * @max 100\n   */\n  limit?: number | null;\n  /** Number of items to skip in the display (relevant for all pages after the first). */\n  offset?: number | null;\n}\n\nexport interface GetProductIdsForSubscriptionOptionResponse {\n  /** IDs of products associated with the specified subscription option. */\n  productIds?: string[];\n  /** Paging metadata. */\n  metadata?: PagingMetadata;\n  /** Number of total results. */\n  totalResults?: number;\n}\n\nexport interface PagingMetadata {\n  /** Amount of items to load per page. */\n  items?: number;\n  /** Number of items to skip in the display (relevant for all pages after the first). */\n  offset?: number;\n}\n\nexport interface GetOneTimePurchasesStatusRequest {\n  /**\n   * Product ID.\n   * @minLength 1\n   */\n  productId: string;\n}\n\nexport interface GetOneTimePurchasesStatusResponse {\n  /** Whether the specified product is available for one-time purchase */\n  allowed?: boolean;\n}\n\nexport interface CreateSubscriptionOptionRequest {\n  /** Subscription option info. */\n  subscriptionOption: SubscriptionOption;\n}\n\nexport interface CreateSubscriptionOptionResponse {\n  /** Newly created subscription option. */\n  subscriptionOption?: SubscriptionOption;\n}\n\nexport interface UpdateSubscriptionOptionRequest {\n  /** Subscription option info. Only the passed parameters will be updated. */\n  subscriptionOption: SubscriptionOption;\n}\n\nexport interface UpdateSubscriptionOptionResponse {\n  /** Updated subscription option. */\n  subscriptionOption?: SubscriptionOption;\n}\n\nexport interface DeleteSubscriptionOptionRequest {\n  /**\n   * ID of the subscription option to delete.\n   * @minLength 1\n   * @format GUID\n   */\n  _id: string;\n}\n\nexport interface DeleteSubscriptionOptionResponse {}\n\nexport interface BulkCreateSubscriptionOptionsRequest {\n  /**\n   * Subscription options info.\n   * @maxSize 100\n   */\n  subscriptionOptions: SubscriptionOption[];\n}\n\nexport interface BulkCreateSubscriptionOptionsResponse {\n  /** Newly created subscription options. */\n  subscriptionOptions?: SubscriptionOption[];\n}\n\nexport interface BulkUpdateSubscriptionOptionsRequest {\n  /**\n   * Subscription options info. Only the passed parameters in each subscription option will be updated.\n   * @maxSize 100\n   */\n  subscriptionOptions: SubscriptionOption[];\n}\n\nexport interface BulkUpdateSubscriptionOptionsResponse {\n  /** Updated subscription options. */\n  subscriptionOptions?: SubscriptionOption[];\n}\n\nexport interface BulkDeleteSubscriptionOptionsRequest {\n  /**\n   * IDs of the subscription options to delete.\n   * @maxSize 100\n   * @format GUID\n   */\n  ids: string[];\n}\n\nexport interface BulkDeleteSubscriptionOptionsResponse {}\n\nexport interface AssignSubscriptionOptionsToProductRequest {\n  /**\n   * Product ID.\n   * @minLength 1\n   */\n  productId: string;\n  /**\n   * Ordered array of subscription options that will be assigned to the product. Pass an empty array to remove all subscription options from the product.\n   * @maxSize 6\n   */\n  assignedSubscriptionOptions?: SubscriptionOptionInProduct[];\n}\n\nexport interface AssignSubscriptionOptionsToProductResponse {}\n\nexport interface AllowOneTimePurchasesRequest {\n  /**\n   * Product ID.\n   * @minLength 1\n   */\n  productId: string;\n  /** Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only. */\n  allowed: boolean | null;\n}\n\nexport interface AllowOneTimePurchasesResponse {}\n\ntype SubscriptionOptionNonNullablePaths =\n  | `subscriptionSettings.frequency`\n  | `subscriptionSettings.autoRenewal`\n  | `discount.type`\n  | `discount.value`;\n\n/**\n * Retrieves a subscription option by ID.\n * @param _id - Subscription option ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @returns Subscription option.\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOption\n * @deprecated\n */\nexport async function getSubscriptionOption(\n  _id: string\n): Promise<\n  NonNullablePaths<SubscriptionOption, SubscriptionOptionNonNullablePaths>\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.getSubscriptionOption(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.subscriptionOption!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { id: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves all subscription options assigned to a specified product.\n * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.\n * @param productId - Product ID.\n * @public\n * @documentationMaturity preview\n * @requiredField productId\n * @param options - Options.\n * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOptionsForProduct\n * @deprecated\n */\nexport async function getSubscriptionOptionsForProduct(\n  productId: string,\n  options?: GetSubscriptionOptionsForProductOptions\n): Promise<\n  NonNullablePaths<\n    GetSubscriptionOptionsForProductResponse,\n    | `subscriptionOptions`\n    | `subscriptionOptions.${number}._id`\n    | `subscriptionOptions.${number}.hidden`\n    | `subscriptionOptions.${number}.subscriptionSettings.frequency`\n    | `subscriptionOptions.${number}.subscriptionSettings.autoRenewal`\n    | `subscriptionOptions.${number}.discount.type`\n    | `subscriptionOptions.${number}.discount.value`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    productId: productId,\n    includeHiddenSubscriptionOptions: options?.includeHiddenSubscriptionOptions,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.getSubscriptionOptionsForProduct(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          productId: '$[0]',\n          includeHiddenSubscriptionOptions:\n            '$[1].includeHiddenSubscriptionOptions',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['productId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetSubscriptionOptionsForProductOptions {\n  /** Whether to include hidden subscription options in the results. */\n  includeHiddenSubscriptionOptions?: boolean;\n}\n\n/**\n * Retrieves the IDs of products associated with a specified subscription option.\n * @param _id - Subscription option ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @param options - Paging and other options.\n * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetProductIdsForSubscriptionOption\n * @deprecated\n */\nexport async function getProductIdsForSubscriptionOption(\n  _id: string,\n  options?: GetProductIdsForSubscriptionOptionOptions\n): Promise<\n  NonNullablePaths<\n    GetProductIdsForSubscriptionOptionResponse,\n    `productIds` | `metadata.items` | `metadata.offset` | `totalResults`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    id: _id,\n    includeHiddenProducts: options?.includeHiddenProducts,\n    paging: options?.paging,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.getProductIdsForSubscriptionOption(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          id: '$[0]',\n          includeHiddenProducts: '$[1].includeHiddenProducts',\n          paging: '$[1].paging',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetProductIdsForSubscriptionOptionOptions {\n  /** Whether to include hidden products in the returned results. */\n  includeHiddenProducts?: boolean;\n  /** Optional pagination parameters */\n  paging?: Paging;\n}\n\n/**\n * Checks whether a specified product (associated with subscription options) is available for one-time purchase.\n * @param productId - Product ID.\n * @public\n * @documentationMaturity preview\n * @requiredField productId\n * @permissionId WIX_STORES.READ_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetOneTimePurchasesStatus\n * @deprecated\n */\nexport async function getOneTimePurchasesStatus(\n  productId: string\n): Promise<NonNullablePaths<GetOneTimePurchasesStatusResponse, `allowed`>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    productId: productId,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.getOneTimePurchasesStatus(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { productId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['productId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates a subscription option.\n * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n * @param subscriptionOption - Subscription option info.\n * @public\n * @documentationMaturity preview\n * @requiredField subscriptionOption\n * @requiredField subscriptionOption.subscriptionSettings\n * @requiredField subscriptionOption.title\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @returns Newly created subscription option.\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.CreateSubscriptionOption\n * @deprecated\n */\nexport async function createSubscriptionOption(\n  subscriptionOption: NonNullablePaths<\n    SubscriptionOption,\n    `subscriptionSettings` | `title`\n  >\n): Promise<\n  NonNullablePaths<SubscriptionOption, SubscriptionOptionNonNullablePaths>\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    subscriptionOption: subscriptionOption,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.createSubscriptionOption(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.subscriptionOption!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { subscriptionOption: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['subscriptionOption']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates a subscription option.\n * Only parameters passed will be updated.\n * @param _id - Subscription option ID (auto-generated upon subscription option creation).\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField subscriptionOption\n * @param subscriptionOption - Subscription option update options.\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @returns Updated subscription option.\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.UpdateSubscriptionOption\n * @deprecated\n */\nexport async function updateSubscriptionOption(\n  _id: string,\n  subscriptionOption: UpdateSubscriptionOption\n): Promise<\n  NonNullablePaths<SubscriptionOption, SubscriptionOptionNonNullablePaths>\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    subscriptionOption: { ...subscriptionOption, id: _id },\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.updateSubscriptionOption(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)\n      ?.subscriptionOption!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { subscriptionOption: '$[1]' },\n        explicitPathsToArguments: { 'subscriptionOption.id': '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'subscriptionOption']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateSubscriptionOption {\n  /**\n   * Subscription option ID (auto-generated upon subscription option creation).\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * Subscription option title.\n   * @minLength 1\n   * @maxLength 20\n   */\n  title?: string | null;\n  /**\n   * Subscription option description (optional).\n   * @maxLength 60\n   */\n  description?: string | null;\n  /** Subscription charge times. For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months. */\n  subscriptionSettings?: SubscriptionSettings;\n  /**\n   * Discount info (optional).\n   * For example, a $20 discount would be `value: 20`, `type: AMOUNT`.\n   */\n  discount?: Discount;\n}\n\n/**\n * Deletes a subscription option.\n * @param _id - ID of the subscription option to delete.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.DeleteSubscriptionOption\n * @deprecated\n */\nexport async function deleteSubscriptionOption(_id: string): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ id: _id });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.deleteSubscriptionOption(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { id: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['_id']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Creates multiple subscription options (up to 100).\n * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n * @param subscriptionOptions - Subscription options info.\n * @public\n * @documentationMaturity preview\n * @requiredField subscriptionOptions\n * @requiredField subscriptionOptions.subscriptionSettings\n * @requiredField subscriptionOptions.title\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkCreateSubscriptionOptions\n * @deprecated\n */\nexport async function bulkCreateSubscriptionOptions(\n  subscriptionOptions: NonNullablePaths<\n    SubscriptionOption,\n    `subscriptionSettings` | `title`\n  >[]\n): Promise<\n  NonNullablePaths<\n    BulkCreateSubscriptionOptionsResponse,\n    {\n      [P in SubscriptionOptionNonNullablePaths]: `subscriptionOptions.${number}.${P}`;\n    }[SubscriptionOptionNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    subscriptionOptions: subscriptionOptions,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.bulkCreateSubscriptionOptions(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { subscriptionOptions: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['subscriptionOptions']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Updates multiple subscription options.\n * Only parameters passed will be updated.\n * @param subscriptionOptions - Subscription options info. Only the passed parameters in each subscription option will be updated.\n * @public\n * @documentationMaturity preview\n * @requiredField subscriptionOptions\n * @requiredField subscriptionOptions._id\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkUpdateSubscriptionOptions\n * @deprecated\n */\nexport async function bulkUpdateSubscriptionOptions(\n  subscriptionOptions: NonNullablePaths<SubscriptionOption, `_id`>[]\n): Promise<\n  NonNullablePaths<\n    BulkUpdateSubscriptionOptionsResponse,\n    {\n      [P in SubscriptionOptionNonNullablePaths]: `subscriptionOptions.${number}.${P}`;\n    }[SubscriptionOptionNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    subscriptionOptions: subscriptionOptions,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.bulkUpdateSubscriptionOptions(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(result.data)!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { subscriptionOptions: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['subscriptionOptions']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Deletes multiple subscription options.\n * @param ids - IDs of the subscription options to delete.\n * @public\n * @documentationMaturity preview\n * @requiredField ids\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkDeleteSubscriptionOptions\n * @deprecated\n */\nexport async function bulkDeleteSubscriptionOptions(\n  ids: string[]\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({ ids: ids });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.bulkDeleteSubscriptionOptions(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { ids: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['ids']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Assign up to 6 subscription options to a specified product.\n * Pass an empty array to remove all subscription options assigned to a product.\n * @param productId - Product ID.\n * @public\n * @documentationMaturity preview\n * @requiredField productId\n * @param options - Subscription option assignment options.\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AssignSubscriptionOptionsToProduct\n * @deprecated\n */\nexport async function assignSubscriptionOptionsToProduct(\n  productId: string,\n  options?: AssignSubscriptionOptionsToProductOptions\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    productId: productId,\n    assignedSubscriptionOptions: options?.assignedSubscriptionOptions,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.assignSubscriptionOptionsToProduct(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          productId: '$[0]',\n          assignedSubscriptionOptions: '$[1].assignedSubscriptionOptions',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['productId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AssignSubscriptionOptionsToProductOptions {\n  /**\n   * Ordered array of subscription options that will be assigned to the product. Pass an empty array to remove all subscription options from the product.\n   * @maxSize 6\n   */\n  assignedSubscriptionOptions?: SubscriptionOptionInProduct[];\n}\n\n/**\n * Allow for one-time purchase of a product.\n * By default, product can be sold only as part of a subscription, not as a one-time purchase.\n * @param productId - Product ID.\n * @param allowed - Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only.\n * @public\n * @documentationMaturity preview\n * @requiredField allowed\n * @requiredField productId\n * @permissionId WIX_STORES.MODIFY_SUBSCRIPTION_OPTIONS\n * @applicableIdentity APP\n * @fqn wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AllowOneTimePurchases\n * @deprecated\n */\nexport async function allowOneTimePurchases(\n  productId: string,\n  allowed: boolean\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    productId: productId,\n    allowed: allowed,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresV1SubscriptionOption.allowOneTimePurchases(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { productId: '$[0]', allowed: '$[1]' },\n        singleArgumentUnchanged: false,\n      },\n      ['productId', 'allowed']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/wix-ecommerce-plans',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v1/subscription-options',\n        destPath: '/v1/subscription-options',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/subscription-options-server',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/subscription-options-server',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/subscription-options-server',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/subscription-options-server',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/subscription-options-server',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nfunction resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/wix-ecommerce-plans-reader',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/wix-ecommerce-plans-reader',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/subscription-options-reader-server',\n        destPath: '',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/_api/subscription-options-reader-server',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_subscription-options';\n\n/**\n * Retrieves a subscription option by ID.\n * @deprecated\n */\nexport function getSubscriptionOption(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getSubscriptionOption({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOption',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(\n        { protoPath: '/v1/subscription-options/{id}', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOption.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getSubscriptionOption;\n}\n\n/**\n * Retrieves all subscription options assigned to a specified product.\n * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.\n * @deprecated\n */\nexport function getSubscriptionOptionsForProduct(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getSubscriptionOptionsForProduct({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetSubscriptionOptionsForProduct',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(\n        {\n          protoPath: '/v1/subscription-options/byProduct/{productId}',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOptions.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getSubscriptionOptionsForProduct;\n}\n\n/**\n * Retrieves the IDs of products associated with a specified subscription option.\n * @deprecated\n */\nexport function getProductIdsForSubscriptionOption(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getProductIdsForSubscriptionOption({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetProductIdsForSubscriptionOption',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(\n        {\n          protoPath: '/v1/subscription-options/{id}/productIds',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getProductIdsForSubscriptionOption;\n}\n\n/**\n * Checks whether a specified product (associated with subscription options) is available for one-time purchase.\n * @deprecated\n */\nexport function getOneTimePurchasesStatus(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __getOneTimePurchasesStatus({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsReadApi.GetOneTimePurchasesStatus',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsReadApiUrl(\n        {\n          protoPath:\n            '/v1/subscription-options/product/{productId}/oneTimePurchasesStatus',\n          data: payload,\n          host,\n        }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __getOneTimePurchasesStatus;\n}\n\n/**\n * Creates a subscription option.\n * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n * @deprecated\n */\nexport function createSubscriptionOption(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createSubscriptionOption({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [{ path: 'subscriptionOption.discount.value' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.CreateSubscriptionOption',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        { protoPath: '/v1/subscription-options', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOption.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createSubscriptionOption;\n}\n\n/**\n * Updates a subscription option.\n * Only parameters passed will be updated.\n * @deprecated\n */\nexport function updateSubscriptionOption(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateSubscriptionOption({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [{ path: 'subscriptionOption.discount.value' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.UpdateSubscriptionOption',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        {\n          protoPath: '/v1/subscription-options/{subscriptionOption.id}',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOption.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateSubscriptionOption;\n}\n\n/**\n * Deletes a subscription option.\n * @deprecated\n */\nexport function deleteSubscriptionOption(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteSubscriptionOption({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'DELETE' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.DeleteSubscriptionOption',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        { protoPath: '/v1/subscription-options/{id}', data: payload, host }\n      ),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteSubscriptionOption;\n}\n\n/**\n * Creates multiple subscription options (up to 100).\n * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n * @deprecated\n */\nexport function bulkCreateSubscriptionOptions(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreateSubscriptionOptions({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [{ path: 'subscriptionOptions.discount.value' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkCreateSubscriptionOptions',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        {\n          protoPath: '/v1/subscription-options/createBulk',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOptions.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateSubscriptionOptions;\n}\n\n/**\n * Updates multiple subscription options.\n * Only parameters passed will be updated.\n * @deprecated\n */\nexport function bulkUpdateSubscriptionOptions(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateSubscriptionOptions({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [{ path: 'subscriptionOptions.discount.value' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkUpdateSubscriptionOptions',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        { protoPath: '/v1/subscription-options', data: serializedData, host }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [{ path: 'subscriptionOptions.discount.value' }],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateSubscriptionOptions;\n}\n\n/**\n * Deletes multiple subscription options.\n * @deprecated\n */\nexport function bulkDeleteSubscriptionOptions(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeleteSubscriptionOptions({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.BulkDeleteSubscriptionOptions',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        {\n          protoPath: '/v1/subscription-options/deleteBulk',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteSubscriptionOptions;\n}\n\n/**\n * Assign up to 6 subscription options to a specified product.\n * Pass an empty array to remove all subscription options assigned to a product.\n * @deprecated\n */\nexport function assignSubscriptionOptionsToProduct(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __assignSubscriptionOptionsToProduct({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [{ path: 'assignedSubscriptionOptions.discount.value' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AssignSubscriptionOptionsToProduct',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        {\n          protoPath: '/v1/subscription-options/product/{productId}/assign',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __assignSubscriptionOptionsToProduct;\n}\n\n/**\n * Allow for one-time purchase of a product.\n * By default, product can be sold only as part of a subscription, not as a one-time purchase.\n * @deprecated\n */\nexport function allowOneTimePurchases(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __allowOneTimePurchases({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.v1.subscription_option',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.ecommerce.subscription.option.api.v1.SubscriptionOptionsWriteApi.AllowOneTimePurchases',\n      packageName: PACKAGE_NAME,\n      url: resolveWixEcommerceSubscriptionOptionApiV1SubscriptionOptionsWriteApiUrl(\n        {\n          protoPath:\n            '/v1/subscription-options/product/{productId}/allowOneTimePurchase',\n          data: payload,\n          host,\n        }\n      ),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __allowOneTimePurchases;\n}\n","import { HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  AssignSubscriptionOptionsToProductOptions,\n  BulkCreateSubscriptionOptionsResponse,\n  BulkUpdateSubscriptionOptionsResponse,\n  GetOneTimePurchasesStatusResponse,\n  GetProductIdsForSubscriptionOptionOptions,\n  GetProductIdsForSubscriptionOptionResponse,\n  GetSubscriptionOptionsForProductOptions,\n  GetSubscriptionOptionsForProductResponse,\n  SubscriptionOption,\n  UpdateSubscriptionOption,\n  allowOneTimePurchases as universalAllowOneTimePurchases,\n  assignSubscriptionOptionsToProduct as universalAssignSubscriptionOptionsToProduct,\n  bulkCreateSubscriptionOptions as universalBulkCreateSubscriptionOptions,\n  bulkDeleteSubscriptionOptions as universalBulkDeleteSubscriptionOptions,\n  bulkUpdateSubscriptionOptions as universalBulkUpdateSubscriptionOptions,\n  createSubscriptionOption as universalCreateSubscriptionOption,\n  deleteSubscriptionOption as universalDeleteSubscriptionOption,\n  getOneTimePurchasesStatus as universalGetOneTimePurchasesStatus,\n  getProductIdsForSubscriptionOption as universalGetProductIdsForSubscriptionOption,\n  getSubscriptionOption as universalGetSubscriptionOption,\n  getSubscriptionOptionsForProduct as universalGetSubscriptionOptionsForProduct,\n  updateSubscriptionOption as universalUpdateSubscriptionOption,\n} from './stores-v1-subscription-option-subscription-options.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/stores' };\n\nexport function getSubscriptionOption(\n  httpClient: HttpClient\n): GetSubscriptionOptionSignature {\n  return (_id: string) =>\n    universalGetSubscriptionOption(\n      _id,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetSubscriptionOptionSignature {\n  /**\n   * Retrieves a subscription option by ID.\n   * @param - Subscription option ID.\n   * @returns Subscription option.\n   * @deprecated\n   */\n  (_id: string): Promise<SubscriptionOption>;\n}\n\nexport function getSubscriptionOptionsForProduct(\n  httpClient: HttpClient\n): GetSubscriptionOptionsForProductSignature {\n  return (\n    productId: string,\n    options?: GetSubscriptionOptionsForProductOptions\n  ) =>\n    universalGetSubscriptionOptionsForProduct(\n      productId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetSubscriptionOptionsForProductSignature {\n  /**\n   * Retrieves all subscription options assigned to a specified product.\n   * By default, hidden subscription options are not returned. To retrieve all subscription options you must pass `includeHiddenSubscriptionOptions = true`.\n   * @param - Product ID.\n   * @param - Options.\n   * @deprecated\n   */\n  (\n    productId: string,\n    options?: GetSubscriptionOptionsForProductOptions | undefined\n  ): Promise<GetSubscriptionOptionsForProductResponse>;\n}\n\nexport function getProductIdsForSubscriptionOption(\n  httpClient: HttpClient\n): GetProductIdsForSubscriptionOptionSignature {\n  return (_id: string, options?: GetProductIdsForSubscriptionOptionOptions) =>\n    universalGetProductIdsForSubscriptionOption(\n      _id,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetProductIdsForSubscriptionOptionSignature {\n  /**\n   * Retrieves the IDs of products associated with a specified subscription option.\n   * @param - Subscription option ID.\n   * @param - Paging and other options.\n   * @deprecated\n   */\n  (\n    _id: string,\n    options?: GetProductIdsForSubscriptionOptionOptions | undefined\n  ): Promise<GetProductIdsForSubscriptionOptionResponse>;\n}\n\nexport function getOneTimePurchasesStatus(\n  httpClient: HttpClient\n): GetOneTimePurchasesStatusSignature {\n  return (productId: string) =>\n    universalGetOneTimePurchasesStatus(\n      productId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetOneTimePurchasesStatusSignature {\n  /**\n   * Checks whether a specified product (associated with subscription options) is available for one-time purchase.\n   * @param - Product ID.\n   * @deprecated\n   */\n  (productId: string): Promise<GetOneTimePurchasesStatusResponse>;\n}\n\nexport function createSubscriptionOption(\n  httpClient: HttpClient\n): CreateSubscriptionOptionSignature {\n  return (\n    subscriptionOption: NonNullablePaths<\n      SubscriptionOption,\n      `subscriptionSettings` | `title`\n    >\n  ) =>\n    universalCreateSubscriptionOption(\n      subscriptionOption,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateSubscriptionOptionSignature {\n  /**\n   * Creates a subscription option.\n   * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n   * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n   * @param - Subscription option info.\n   * @returns Newly created subscription option.\n   * @deprecated\n   */\n  (subscriptionOption: SubscriptionOption): Promise<SubscriptionOption>;\n}\n\nexport function updateSubscriptionOption(\n  httpClient: HttpClient\n): UpdateSubscriptionOptionSignature {\n  return (_id: string, subscriptionOption: UpdateSubscriptionOption) =>\n    universalUpdateSubscriptionOption(\n      _id,\n      subscriptionOption,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateSubscriptionOptionSignature {\n  /**\n   * Updates a subscription option.\n   * Only parameters passed will be updated.\n   * @param - Subscription option ID (auto-generated upon subscription option creation).\n   * @param - Subscription option update options.\n   * @returns Updated subscription option.\n   * @deprecated\n   */\n  (\n    _id: string,\n    subscriptionOption: UpdateSubscriptionOption\n  ): Promise<SubscriptionOption>;\n}\n\nexport function deleteSubscriptionOption(\n  httpClient: HttpClient\n): DeleteSubscriptionOptionSignature {\n  return (_id: string) =>\n    universalDeleteSubscriptionOption(\n      _id,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteSubscriptionOptionSignature {\n  /**\n   * Deletes a subscription option.\n   * @param - ID of the subscription option to delete.\n   * @deprecated\n   */\n  (_id: string): Promise<void>;\n}\n\nexport function bulkCreateSubscriptionOptions(\n  httpClient: HttpClient\n): BulkCreateSubscriptionOptionsSignature {\n  return (\n    subscriptionOptions: NonNullablePaths<\n      SubscriptionOption,\n      `subscriptionSettings` | `title`\n    >[]\n  ) =>\n    universalBulkCreateSubscriptionOptions(\n      subscriptionOptions,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkCreateSubscriptionOptionsSignature {\n  /**\n   * Creates multiple subscription options (up to 100).\n   * To assign to a product, call [`assignSubscriptionOptionsToProduct()`](https://www.wix.com/velo/reference/wix-stores-v2/subscriptionoptions/assign-subscription-options-to-product).\n   * Subscription options that are not assigned to a product will not be visible in the Wix business manager.\n   * @param - Subscription options info.\n   * @deprecated\n   */\n  (\n    subscriptionOptions: SubscriptionOption[]\n  ): Promise<BulkCreateSubscriptionOptionsResponse>;\n}\n\nexport function bulkUpdateSubscriptionOptions(\n  httpClient: HttpClient\n): BulkUpdateSubscriptionOptionsSignature {\n  return (subscriptionOptions: NonNullablePaths<SubscriptionOption, `_id`>[]) =>\n    universalBulkUpdateSubscriptionOptions(\n      subscriptionOptions,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkUpdateSubscriptionOptionsSignature {\n  /**\n   * Updates multiple subscription options.\n   * Only parameters passed will be updated.\n   * @param - Subscription options info. Only the passed parameters in each subscription option will be updated.\n   * @deprecated\n   */\n  (\n    subscriptionOptions: SubscriptionOption[]\n  ): Promise<BulkUpdateSubscriptionOptionsResponse>;\n}\n\nexport function bulkDeleteSubscriptionOptions(\n  httpClient: HttpClient\n): BulkDeleteSubscriptionOptionsSignature {\n  return (ids: string[]) =>\n    universalBulkDeleteSubscriptionOptions(\n      ids,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkDeleteSubscriptionOptionsSignature {\n  /**\n   * Deletes multiple subscription options.\n   * @param - IDs of the subscription options to delete.\n   * @deprecated\n   */\n  (ids: string[]): Promise<void>;\n}\n\nexport function assignSubscriptionOptionsToProduct(\n  httpClient: HttpClient\n): AssignSubscriptionOptionsToProductSignature {\n  return (\n    productId: string,\n    options?: AssignSubscriptionOptionsToProductOptions\n  ) =>\n    universalAssignSubscriptionOptionsToProduct(\n      productId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AssignSubscriptionOptionsToProductSignature {\n  /**\n   * Assign up to 6 subscription options to a specified product.\n   * Pass an empty array to remove all subscription options assigned to a product.\n   * @param - Product ID.\n   * @param - Subscription option assignment options.\n   * @deprecated\n   */\n  (\n    productId: string,\n    options?: AssignSubscriptionOptionsToProductOptions | undefined\n  ): Promise<void>;\n}\n\nexport function allowOneTimePurchases(\n  httpClient: HttpClient\n): AllowOneTimePurchasesSignature {\n  return (productId: string, allowed: boolean) =>\n    universalAllowOneTimePurchases(\n      productId,\n      allowed,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AllowOneTimePurchasesSignature {\n  /**\n   * Allow for one-time purchase of a product.\n   * By default, product can be sold only as part of a subscription, not as a one-time purchase.\n   * @param - Product ID.\n   * @param - Pass `true` to offer product by subscription and as one-time purchase. Pass `false` to offer product as subscription only.\n   * @deprecated\n   */\n  (productId: string, allowed: boolean): Promise<void>;\n}\n\nexport {\n  AllowOneTimePurchasesRequest,\n  AllowOneTimePurchasesResponse,\n  AssignSubscriptionOptionsToProductOptions,\n  AssignSubscriptionOptionsToProductRequest,\n  AssignSubscriptionOptionsToProductResponse,\n  BulkCalculatePricesRequest,\n  BulkCalculatePricesRequestItem,\n  BulkCalculatePricesRequestV2,\n  BulkCalculatePricesResponse,\n  BulkCalculatePricesResponseItem,\n  BulkCalculatePricesResponseV2,\n  BulkCreateSubscriptionOptionsRequest,\n  BulkCreateSubscriptionOptionsResponse,\n  BulkDeleteSubscriptionOptionsRequest,\n  BulkDeleteSubscriptionOptionsResponse,\n  BulkUpdateSubscriptionOptionsRequest,\n  BulkUpdateSubscriptionOptionsResponse,\n  CalculatePricesRequest,\n  CalculatePricesResponse,\n  CreateSubscriptionOptionRequest,\n  CreateSubscriptionOptionResponse,\n  DeleteSubscriptionOptionRequest,\n  DeleteSubscriptionOptionResponse,\n  Discount,\n  DiscountType,\n  GetOneTimePurchasesStatusRequest,\n  GetOneTimePurchasesStatusResponse,\n  GetProductIdsForSubscriptionOptionOptions,\n  GetProductIdsForSubscriptionOptionRequest,\n  GetProductIdsForSubscriptionOptionResponse,\n  GetSubscriptionOptionRequest,\n  GetSubscriptionOptionResponse,\n  GetSubscriptionOptionsForProductOptions,\n  GetSubscriptionOptionsForProductRequest,\n  GetSubscriptionOptionsForProductResponse,\n  ListSubscriptionOptionsRequest,\n  ListSubscriptionOptionsResponse,\n  Paging,\n  PagingMetadata,\n  SubscriptionFrequency,\n  SubscriptionOption,\n  SubscriptionOptionInProduct,\n  SubscriptionOptionPriceData,\n  SubscriptionOptionPrices,\n  SubscriptionSettings,\n  UpdateSubscriptionOption,\n  UpdateSubscriptionOptionRequest,\n  UpdateSubscriptionOptionResponse,\n} from './stores-v1-subscription-option-subscription-options.universal.js';\n","import {\n  getSubscriptionOption as publicGetSubscriptionOption,\n  getSubscriptionOptionsForProduct as publicGetSubscriptionOptionsForProduct,\n  getProductIdsForSubscriptionOption as publicGetProductIdsForSubscriptionOption,\n  getOneTimePurchasesStatus as publicGetOneTimePurchasesStatus,\n  createSubscriptionOption as publicCreateSubscriptionOption,\n  updateSubscriptionOption as publicUpdateSubscriptionOption,\n  deleteSubscriptionOption as publicDeleteSubscriptionOption,\n  bulkCreateSubscriptionOptions as publicBulkCreateSubscriptionOptions,\n  bulkUpdateSubscriptionOptions as publicBulkUpdateSubscriptionOptions,\n  bulkDeleteSubscriptionOptions as publicBulkDeleteSubscriptionOptions,\n  assignSubscriptionOptionsToProduct as publicAssignSubscriptionOptionsToProduct,\n  allowOneTimePurchases as publicAllowOneTimePurchases,\n} from './stores-v1-subscription-option-subscription-options.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\n\nexport const getSubscriptionOption: MaybeContext<\n  BuildRESTFunction<typeof publicGetSubscriptionOption> &\n    typeof publicGetSubscriptionOption\n> = /*#__PURE__*/ createRESTModule(publicGetSubscriptionOption);\nexport const getSubscriptionOptionsForProduct: MaybeContext<\n  BuildRESTFunction<typeof publicGetSubscriptionOptionsForProduct> &\n    typeof publicGetSubscriptionOptionsForProduct\n> = /*#__PURE__*/ createRESTModule(publicGetSubscriptionOptionsForProduct);\nexport const getProductIdsForSubscriptionOption: MaybeContext<\n  BuildRESTFunction<typeof publicGetProductIdsForSubscriptionOption> &\n    typeof publicGetProductIdsForSubscriptionOption\n> = /*#__PURE__*/ createRESTModule(publicGetProductIdsForSubscriptionOption);\nexport const getOneTimePurchasesStatus: MaybeContext<\n  BuildRESTFunction<typeof publicGetOneTimePurchasesStatus> &\n    typeof publicGetOneTimePurchasesStatus\n> = /*#__PURE__*/ createRESTModule(publicGetOneTimePurchasesStatus);\nexport const createSubscriptionOption: MaybeContext<\n  BuildRESTFunction<typeof publicCreateSubscriptionOption> &\n    typeof publicCreateSubscriptionOption\n> = /*#__PURE__*/ createRESTModule(publicCreateSubscriptionOption);\nexport const updateSubscriptionOption: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateSubscriptionOption> &\n    typeof publicUpdateSubscriptionOption\n> = /*#__PURE__*/ createRESTModule(publicUpdateSubscriptionOption);\nexport const deleteSubscriptionOption: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteSubscriptionOption> &\n    typeof publicDeleteSubscriptionOption\n> = /*#__PURE__*/ createRESTModule(publicDeleteSubscriptionOption);\nexport const bulkCreateSubscriptionOptions: MaybeContext<\n  BuildRESTFunction<typeof publicBulkCreateSubscriptionOptions> &\n    typeof publicBulkCreateSubscriptionOptions\n> = /*#__PURE__*/ createRESTModule(publicBulkCreateSubscriptionOptions);\nexport const bulkUpdateSubscriptionOptions: MaybeContext<\n  BuildRESTFunction<typeof publicBulkUpdateSubscriptionOptions> &\n    typeof publicBulkUpdateSubscriptionOptions\n> = /*#__PURE__*/ createRESTModule(publicBulkUpdateSubscriptionOptions);\nexport const bulkDeleteSubscriptionOptions: MaybeContext<\n  BuildRESTFunction<typeof publicBulkDeleteSubscriptionOptions> &\n    typeof publicBulkDeleteSubscriptionOptions\n> = /*#__PURE__*/ createRESTModule(publicBulkDeleteSubscriptionOptions);\nexport const assignSubscriptionOptionsToProduct: MaybeContext<\n  BuildRESTFunction<typeof publicAssignSubscriptionOptionsToProduct> &\n    typeof publicAssignSubscriptionOptionsToProduct\n> = /*#__PURE__*/ createRESTModule(publicAssignSubscriptionOptionsToProduct);\nexport const allowOneTimePurchases: MaybeContext<\n  BuildRESTFunction<typeof publicAllowOneTimePurchases> &\n    typeof publicAllowOneTimePurchases\n> = /*#__PURE__*/ createRESTModule(publicAllowOneTimePurchases);\n\nexport {\n  SubscriptionFrequency,\n  DiscountType,\n} from './stores-v1-subscription-option-subscription-options.universal.js';\nexport {\n  SubscriptionOption,\n  SubscriptionSettings,\n  Discount,\n  GetSubscriptionOptionRequest,\n  GetSubscriptionOptionResponse,\n  GetSubscriptionOptionsForProductRequest,\n  GetSubscriptionOptionsForProductResponse,\n  SubscriptionOptionInProduct,\n  ListSubscriptionOptionsRequest,\n  ListSubscriptionOptionsResponse,\n  CalculatePricesRequest,\n  CalculatePricesResponse,\n  SubscriptionOptionPrices,\n  SubscriptionOptionPriceData,\n  BulkCalculatePricesRequest,\n  BulkCalculatePricesResponse,\n  BulkCalculatePricesRequestV2,\n  BulkCalculatePricesRequestItem,\n  BulkCalculatePricesResponseV2,\n  BulkCalculatePricesResponseItem,\n  GetProductIdsForSubscriptionOptionRequest,\n  Paging,\n  GetProductIdsForSubscriptionOptionResponse,\n  PagingMetadata,\n  GetOneTimePurchasesStatusRequest,\n  GetOneTimePurchasesStatusResponse,\n  CreateSubscriptionOptionRequest,\n  CreateSubscriptionOptionResponse,\n  UpdateSubscriptionOptionRequest,\n  UpdateSubscriptionOptionResponse,\n  DeleteSubscriptionOptionRequest,\n  DeleteSubscriptionOptionResponse,\n  BulkCreateSubscriptionOptionsRequest,\n  BulkCreateSubscriptionOptionsResponse,\n  BulkUpdateSubscriptionOptionsRequest,\n  BulkUpdateSubscriptionOptionsResponse,\n  BulkDeleteSubscriptionOptionsRequest,\n  BulkDeleteSubscriptionOptionsResponse,\n  AssignSubscriptionOptionsToProductRequest,\n  AssignSubscriptionOptionsToProductResponse,\n  AllowOneTimePurchasesRequest,\n  AllowOneTimePurchasesResponse,\n  GetSubscriptionOptionsForProductOptions,\n  GetProductIdsForSubscriptionOptionOptions,\n  UpdateSubscriptionOption,\n  AssignSubscriptionOptionsToProductOptions,\n} from './stores-v1-subscription-option-subscription-options.universal.js';\n"],"mappings":"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","names":["allowOneTimePurchases","assignSubscriptionOptionsToProduct","bulkCreateSubscriptionOptions","bulkDeleteSubscriptionOptions","bulkUpdateSubscriptionOptions","createSubscriptionOption","deleteSubscriptionOption","getOneTimePurchasesStatus","getProductIdsForSubscriptionOption","getSubscriptionOption","getSubscriptionOptionsForProduct","updateSubscriptionOption","import_float","import_rest_modules","payload","SubscriptionFrequency","DiscountType","getSubscriptionOption","sdkTransformError","getSubscriptionOptionsForProduct","getProductIdsForSubscriptionOption","getOneTimePurchasesStatus","createSubscriptionOption","updateSubscriptionOption","deleteSubscriptionOption","bulkCreateSubscriptionOptions","bulkUpdateSubscriptionOptions","bulkDeleteSubscriptionOptions","assignSubscriptionOptionsToProduct","allowOneTimePurchases","getSubscriptionOption","getSubscriptionOptionsForProduct","getProductIdsForSubscriptionOption","getOneTimePurchasesStatus","createSubscriptionOption","updateSubscriptionOption","deleteSubscriptionOption","bulkCreateSubscriptionOptions","bulkUpdateSubscriptionOptions","bulkDeleteSubscriptionOptions","assignSubscriptionOptionsToProduct","allowOneTimePurchases","import_rest_modules","getSubscriptionOption","getSubscriptionOptionsForProduct","getProductIdsForSubscriptionOption","getOneTimePurchasesStatus","createSubscriptionOption","updateSubscriptionOption","deleteSubscriptionOption","bulkCreateSubscriptionOptions","bulkUpdateSubscriptionOptions","bulkDeleteSubscriptionOptions","assignSubscriptionOptionsToProduct","allowOneTimePurchases"]}