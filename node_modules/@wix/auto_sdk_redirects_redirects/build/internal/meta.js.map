{"version":3,"sources":["../../meta.ts","../../src/headless-v1-redirect-session-redirects.http.ts","../../src/headless-v1-redirect-session-redirects.meta.ts"],"sourcesContent":["export * from './src/headless-v1-redirect-session-redirects.meta.js';\n","import { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixHeadlessV1RedirectSessionServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/redirects-api',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/_api/redirects-api',\n        destPath: '',\n      },\n      {\n        srcPath: '/redirect-session',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_redirects_redirects';\n\n/**\n * Creates a URL for redirecting a visitor from an external client site to a Wix page for Wix-managed functionality.\n *\n * The Create Redirect Session method enables your external Wix Headless client site, built on any platform, to integrate Wix-managed frontend functionality for specific processes.\n * For example, your site can temporarily redirect a visitor to Wix for authentication, or for a checkout process for bookings, eCommerce, events, or paid plans transactions.\n *\n * To initiate a redirect session:\n *\n * 1. Call Create Redirect Session with the details required for Wix to take care of one specific process (for example, authentication or a bookings checkout). Provide one or more callback URLs, so Wix can redirect the visitor back to your site as appropriate when the process is over.\n * 1. Redirect your visitor to the URL provided in the response. This URL includes query parameters informing Wix where to redirect the visitor back to on your external site.\n * 1. Make sure the pages at the callback URLs you provided take care of the next stages in your visitor flow.\n */\nexport function createRedirectSession(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createRedirectSession({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.headless.v1.redirect_session',\n      method: 'POST' as any,\n      methodFqn: 'wix.headless.v1.RedirectSessionService.CreateRedirectSession',\n      packageName: PACKAGE_NAME,\n      url: resolveWixHeadlessV1RedirectSessionServiceUrl({\n        protoPath: '/v1/redirect-session',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __createRedirectSession;\n}\n","import * as ambassadorWixHeadlessV1RedirectSession from './headless-v1-redirect-session-redirects.http.js';\nimport * as ambassadorWixHeadlessV1RedirectSessionTypes from './headless-v1-redirect-session-redirects.types.js';\nimport * as ambassadorWixHeadlessV1RedirectSessionUniversalTypes from './headless-v1-redirect-session-redirects.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function createRedirectSession(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixHeadlessV1RedirectSessionUniversalTypes.CreateRedirectSessionRequest,\n  ambassadorWixHeadlessV1RedirectSessionTypes.CreateRedirectSessionRequest,\n  ambassadorWixHeadlessV1RedirectSessionUniversalTypes.CreateRedirectSessionResponse,\n  ambassadorWixHeadlessV1RedirectSessionTypes.CreateRedirectSessionResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixHeadlessV1RedirectSession.createRedirectSession(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/redirect-session',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,+BAAAA;AAAA;AAAA;;;ACAA,0BAA2B;AAI3B,SAAS,8CACP,MACA;AACA,QAAM,mBAAmB;AAAA,IACvB,qBAAqB;AAAA,MACnB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,IACA,mBAAmB;AAAA,MACjB;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,MACA;AAAA,QACE,SAAS;AAAA,QACT,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,aAAO,gCAAW,OAAO,OAAO,MAAM,EAAE,iBAAiB,CAAC,CAAC;AAC7D;AAEA,IAAM,eAAe;AAcd,SAAS,sBACd,SAC4B;AAC5B,WAAS,wBAAwB,EAAE,KAAK,GAAQ;AAC9C,UAAM,WAAW;AAAA,MACf,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,aAAa;AAAA,MACb,KAAK,8CAA8C;AAAA,QACjD,WAAW;AAAA,QACX,MAAM;AAAA,QACN;AAAA,MACF,CAAC;AAAA,MACD,MAAM;AAAA,IACR;AAEA,WAAO;AAAA,EACT;AAEA,SAAO;AACT;;;AC1CO,SAASC,yBAOd;AACA,QAAM,UAAU,CAAC;AAEjB,QAAM,oBACmC,sBAAsB,OAAO;AAEtE,QAAM,SAAS,CAAC,YAAyB;AACvC,UAAM,EAAE,IAAI,IAAI,kBAAkB,OAAO;AACzC,WAAO;AAAA,EACT;AAEA,SAAO;AAAA,IACL;AAAA,IACA,YAAY;AAAA,IACZ,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,IACb,eAAe;AAAA,IACf,uBAAuB;AAAA,IACvB,gBAAgB;AAAA,IAChB,wBAAwB;AAAA,EAC1B;AACF;","names":["createRedirectSession","createRedirectSession"]}