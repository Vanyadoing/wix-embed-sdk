import { HttpClient, EventDefinition, MaybeContext, BuildRESTFunction, BuildEventDefinition } from '@wix/sdk-types';
import { C as CreateRedirectSessionOptions, a as CreateRedirectSessionResponse, R as RedirectSessionCreatedEnvelope } from './headless-v1-redirect-session-redirects.universal-HLokN2-9.js';
export { _ as ActionEvent, J as AttachAllTemplatesRequest, K as AttachAllTemplatesResponse, E as AttachPagesRequest, F as AttachPagesResponse, A as AttachPagesResponseStatus, r as AuthorizeRequest, a2 as BaseEventMetadata, B as BookingPolicyViolations, v as CallbackParams, b as CallbackType, y as CreateAnonymousRedirectSessionRequest, z as CreateAnonymousRedirectSessionRequestIntentOneOf, D as CreateAnonymousRedirectSessionResponse, a4 as CreateRedirectSessionOptionsIntentOneOf, d as CreateRedirectSessionRequest, e as CreateRedirectSessionRequestIntentOneOf, x as CustomMemberPaths, O as DomainEvent, Q as DomainEventBodyOneOf, T as EntityCreatedEvent, Z as EntityDeletedEvent, Y as EntityUpdatedEvent, a3 as EventMetadata, a0 as IdentificationData, a1 as IdentificationDataIdOneOf, j as Location, L as LocationType, M as MembersAccountSection, $ as MessageEnvelope, N as NestedTimeSlot, P as Prompt, c as RedirectSession, q as RedirectSessionAuthParams, u as RedirectSessionBookingsBookParams, f as RedirectSessionBookingsCheckoutParams, l as RedirectSessionEcomCheckoutParams, m as RedirectSessionEventsCheckoutParams, o as RedirectSessionLoginParams, p as RedirectSessionLogoutParams, s as RedirectSessionMembersAccountParams, n as RedirectSessionPaidPlansCheckoutParams, w as RedirectSessionPreferences, t as RedirectSessionStoresProductParams, X as RestoreInfo, H as SignInURLRequest, I as SignInURLResponse, h as Slot, g as SlotAvailability, i as SlotResource, S as Status, U as URLDetails, V as ValidateCallbackURLRequest, G as ValidateCallbackURLResponse, k as WaitingList, W as WebhookIdentityType } from './headless-v1-redirect-session-redirects.universal-HLokN2-9.js';

declare function createRedirectSession$1(httpClient: HttpClient): CreateRedirectSessionSignature;
interface CreateRedirectSessionSignature {
    /**
     * Creates a URL for redirecting a visitor from an external client site to a Wix page for Wix-managed functionality.
     *
     * The Create Redirect Session method enables your external Wix Headless client site, built on any platform, to integrate Wix-managed frontend functionality for specific processes.
     * For example, your site can temporarily redirect a visitor to Wix for authentication, or for a checkout process for bookings, eCommerce, events, or paid plans transactions.
     *
     * To initiate a redirect session:
     *
     * 1. Call Create Redirect Session with the details required for Wix to take care of one specific process (for example, authentication or a bookings checkout). Provide one or more callback URLs, so Wix can redirect the visitor back to your site as appropriate when the process is over.
     * 1. Redirect your visitor to the URL provided in the response. This URL includes query parameters informing Wix where to redirect the visitor back to on your external site.
     * 1. Make sure the pages at the callback URLs you provided take care of the next stages in your visitor flow.
     * @param - Options for creating a redirect session.
     */
    (options?: CreateRedirectSessionOptions | undefined): Promise<CreateRedirectSessionResponse>;
}
declare const onRedirectSessionCreated$1: EventDefinition<RedirectSessionCreatedEnvelope, "wix.headless.v1.redirect_session_created">;

declare const createRedirectSession: MaybeContext<BuildRESTFunction<typeof createRedirectSession$1> & typeof createRedirectSession$1>;
/**
 * Triggered when a redirect session is created.
 */
declare const onRedirectSessionCreated: BuildEventDefinition<typeof onRedirectSessionCreated$1>;

export { CreateRedirectSessionOptions, CreateRedirectSessionResponse, RedirectSessionCreatedEnvelope, createRedirectSession, onRedirectSessionCreated };
