"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  AddressTag: () => AddressTag,
  EmailTag: () => EmailTag,
  FactorStatus: () => FactorStatus,
  FactorType: () => FactorType,
  MfaReason: () => MfaReason,
  PhoneTag: () => PhoneTag,
  PrivacyStatus: () => PrivacyStatus,
  Reason: () => Reason,
  StateType: () => StateType,
  Status: () => Status,
  StatusName: () => StatusName,
  Target: () => Target,
  UserVerificationRequirement: () => UserVerificationRequirement,
  resendDuringAuthentication: () => resendDuringAuthentication4,
  start: () => start4,
  verifyDuringAuthentication: () => verifyDuringAuthentication4
});
module.exports = __toCommonJS(index_exports);

// src/iam-verification-v1-start-response-verification.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/iam-verification-v1-start-response-verification.http.ts
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_bytes = require("@wix/sdk-runtime/transformations/bytes");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
function resolveWixIamVerificationV1VerificationServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/_api/iam/verification",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/iam/verification",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/iam/verification",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_identity_verification";
function start(payload) {
  function __start({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.verification.v1.start_response",
      method: "POST",
      methodFqn: "wix.iam.verification.v1.VerificationService.Start",
      packageName: PACKAGE_NAME,
      url: resolveWixIamVerificationV1VerificationServiceUrl({
        protoPath: "/v1/Start",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __start;
}
function verifyDuringAuthentication(payload) {
  function __verifyDuringAuthentication({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.verification.v1.start_response",
      method: "POST",
      methodFqn: "wix.iam.verification.v1.VerificationService.VerifyDuringAuthentication",
      packageName: PACKAGE_NAME,
      url: resolveWixIamVerificationV1VerificationServiceUrl({
        protoPath: "/v1/auth/verify",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_bytes.transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: import_float.transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __verifyDuringAuthentication;
}
function resendDuringAuthentication(payload) {
  function __resendDuringAuthentication({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.verification.v1.start_response",
      method: "POST",
      methodFqn: "wix.iam.verification.v1.VerificationService.ResendDuringAuthentication",
      packageName: PACKAGE_NAME,
      url: resolveWixIamVerificationV1VerificationServiceUrl({
        protoPath: "/v1/auth/resend",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_bytes.transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: import_float.transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __resendDuringAuthentication;
}

// src/iam-verification-v1-start-response-verification.universal.ts
var import_address = require("@wix/sdk-runtime/transformations/address");
var import_transform_paths2 = require("@wix/sdk-runtime/transformations/transform-paths");
var Target = /* @__PURE__ */ ((Target2) => {
  Target2["UNKNOWN_TARGET"] = "UNKNOWN_TARGET";
  Target2["EMAIL"] = "EMAIL";
  return Target2;
})(Target || {});
var StateType = /* @__PURE__ */ ((StateType2) => {
  StateType2["UNKNOWN_STATE"] = "UNKNOWN_STATE";
  StateType2["SUCCESS"] = "SUCCESS";
  StateType2["REQUIRE_OWNER_APPROVAL"] = "REQUIRE_OWNER_APPROVAL";
  StateType2["REQUIRE_EMAIL_VERIFICATION"] = "REQUIRE_EMAIL_VERIFICATION";
  StateType2["STATUS_CHECK"] = "STATUS_CHECK";
  return StateType2;
})(StateType || {});
var PrivacyStatus = /* @__PURE__ */ ((PrivacyStatus2) => {
  PrivacyStatus2["UNDEFINED"] = "UNDEFINED";
  PrivacyStatus2["PUBLIC"] = "PUBLIC";
  PrivacyStatus2["PRIVATE"] = "PRIVATE";
  return PrivacyStatus2;
})(PrivacyStatus || {});
var EmailTag = /* @__PURE__ */ ((EmailTag2) => {
  EmailTag2["UNTAGGED"] = "UNTAGGED";
  EmailTag2["MAIN"] = "MAIN";
  EmailTag2["HOME"] = "HOME";
  EmailTag2["WORK"] = "WORK";
  return EmailTag2;
})(EmailTag || {});
var PhoneTag = /* @__PURE__ */ ((PhoneTag2) => {
  PhoneTag2["UNTAGGED"] = "UNTAGGED";
  PhoneTag2["MAIN"] = "MAIN";
  PhoneTag2["HOME"] = "HOME";
  PhoneTag2["MOBILE"] = "MOBILE";
  PhoneTag2["WORK"] = "WORK";
  PhoneTag2["FAX"] = "FAX";
  return PhoneTag2;
})(PhoneTag || {});
var AddressTag = /* @__PURE__ */ ((AddressTag2) => {
  AddressTag2["UNTAGGED"] = "UNTAGGED";
  AddressTag2["HOME"] = "HOME";
  AddressTag2["WORK"] = "WORK";
  AddressTag2["BILLING"] = "BILLING";
  AddressTag2["SHIPPING"] = "SHIPPING";
  return AddressTag2;
})(AddressTag || {});
var StatusName = /* @__PURE__ */ ((StatusName2) => {
  StatusName2["UNKNOWN_STATUS"] = "UNKNOWN_STATUS";
  StatusName2["PENDING"] = "PENDING";
  StatusName2["ACTIVE"] = "ACTIVE";
  StatusName2["DELETED"] = "DELETED";
  StatusName2["BLOCKED"] = "BLOCKED";
  StatusName2["OFFLINE"] = "OFFLINE";
  return StatusName2;
})(StatusName || {});
var Reason = /* @__PURE__ */ ((Reason2) => {
  Reason2["UNKNOWN_REASON"] = "UNKNOWN_REASON";
  Reason2["PENDING_ADMIN_APPROVAL_REQUIRED"] = "PENDING_ADMIN_APPROVAL_REQUIRED";
  Reason2["PENDING_EMAIL_VERIFICATION_REQUIRED"] = "PENDING_EMAIL_VERIFICATION_REQUIRED";
  return Reason2;
})(Reason || {});
var FactorType = /* @__PURE__ */ ((FactorType2) => {
  FactorType2["UNKNOWN_FACTOR_TYPE"] = "UNKNOWN_FACTOR_TYPE";
  FactorType2["PASSWORD"] = "PASSWORD";
  FactorType2["SMS"] = "SMS";
  FactorType2["CALL"] = "CALL";
  FactorType2["EMAIL"] = "EMAIL";
  FactorType2["TOTP"] = "TOTP";
  FactorType2["PUSH"] = "PUSH";
  FactorType2["WEBAUTHN"] = "WEBAUTHN";
  return FactorType2;
})(FactorType || {});
var Status = /* @__PURE__ */ ((Status2) => {
  Status2["INACTIVE"] = "INACTIVE";
  Status2["ACTIVE"] = "ACTIVE";
  Status2["REQUIRE_REENROLL"] = "REQUIRE_REENROLL";
  return Status2;
})(Status || {});
var FactorStatus = /* @__PURE__ */ ((FactorStatus2) => {
  FactorStatus2["UNKNOWN_FACTOR_STATUS"] = "UNKNOWN_FACTOR_STATUS";
  FactorStatus2["ENABLED"] = "ENABLED";
  FactorStatus2["REQUIRE_ACTIVATION"] = "REQUIRE_ACTIVATION";
  FactorStatus2["REQUIRE_REENROLL"] = "REQUIRE_REENROLL";
  FactorStatus2["ENABLED_BY_RULE"] = "ENABLED_BY_RULE";
  FactorStatus2["DISABLED_BY_RULE"] = "DISABLED_BY_RULE";
  return FactorStatus2;
})(FactorStatus || {});
var MfaReason = /* @__PURE__ */ ((MfaReason2) => {
  MfaReason2["UNKNOWN_MFA_REASON"] = "UNKNOWN_MFA_REASON";
  MfaReason2["USER_SETTINGS"] = "USER_SETTINGS";
  MfaReason2["HIGH_RISK_LOGIN"] = "HIGH_RISK_LOGIN";
  return MfaReason2;
})(MfaReason || {});
var UserVerificationRequirement = /* @__PURE__ */ ((UserVerificationRequirement2) => {
  UserVerificationRequirement2["USER_VERIFICATION_UNSPECIFIED"] = "USER_VERIFICATION_UNSPECIFIED";
  UserVerificationRequirement2["USER_VERIFICATION_REQUIRED"] = "USER_VERIFICATION_REQUIRED";
  UserVerificationRequirement2["USER_VERIFICATION_PREFERRED"] = "USER_VERIFICATION_PREFERRED";
  UserVerificationRequirement2["USER_VERIFICATION_DISCOURAGED"] = "USER_VERIFICATION_DISCOURAGED";
  return UserVerificationRequirement2;
})(UserVerificationRequirement || {});
async function start2(options) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    identityId: options?.identityId,
    target: options?.target
  });
  const reqOpts = start(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data);
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          identityId: "$[0].identityId",
          target: "$[0].target"
        },
        singleArgumentUnchanged: false
      },
      ["options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function verifyDuringAuthentication2(code, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    code,
    stateToken: options?.stateToken
  });
  const reqOpts = verifyDuringAuthentication(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address.transformRESTAddressToSDKAddress,
          paths: [{ path: "identity.identityProfile.addresses.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: {
          code: "$[0]",
          stateToken: "$[1].stateToken"
        },
        singleArgumentUnchanged: false
      },
      ["code", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
async function resendDuringAuthentication2(stateToken) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    stateToken
  });
  const reqOpts = resendDuringAuthentication(
    payload
  );
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_address.transformRESTAddressToSDKAddress,
          paths: [{ path: "identity.identityProfile.addresses.address" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { stateToken: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["stateToken"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/iam-verification-v1-start-response-verification.public.ts
function start3(httpClient) {
  return (options) => start2(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function verifyDuringAuthentication3(httpClient) {
  return (code, options) => verifyDuringAuthentication2(
    code,
    options,
    // @ts-ignore
    { httpClient }
  );
}
function resendDuringAuthentication3(httpClient) {
  return (stateToken) => resendDuringAuthentication2(
    stateToken,
    // @ts-ignore
    { httpClient }
  );
}

// src/iam-verification-v1-start-response-verification.context.ts
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
var start4 = /* @__PURE__ */ (0, import_rest_modules2.createRESTModule)(start3);
var verifyDuringAuthentication4 = /* @__PURE__ */ (0, import_rest_modules2.createRESTModule)(verifyDuringAuthentication3);
var resendDuringAuthentication4 = /* @__PURE__ */ (0, import_rest_modules2.createRESTModule)(resendDuringAuthentication3);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AddressTag,
  EmailTag,
  FactorStatus,
  FactorType,
  MfaReason,
  PhoneTag,
  PrivacyStatus,
  Reason,
  StateType,
  Status,
  StatusName,
  Target,
  UserVerificationRequirement,
  resendDuringAuthentication,
  start,
  verifyDuringAuthentication
});
//# sourceMappingURL=index.js.map