{"version":3,"sources":["../../../meta.ts","../../../src/iam-verification-v1-start-response-verification.http.ts","../../../src/iam-verification-v1-start-response-verification.meta.ts"],"sourcesContent":["export * from './src/iam-verification-v1-start-response-verification.meta.js';\n","import { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTBytesToSDKBytes } from '@wix/sdk-runtime/transformations/bytes';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixIamVerificationV1VerificationServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/_api/iam/verification',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/iam/verification',\n        destPath: '',\n      },\n    ],\n    'www._base_domain_': [\n      {\n        srcPath: '/_api/iam/verification',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_identity_verification';\n\n/**\n * starts a verification process\n * example: sends a code to the identity's email\n */\nexport function start(payload: object): RequestOptionsFactory<any> {\n  function __start({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.iam.verification.v1.start_response',\n      method: 'POST' as any,\n      methodFqn: 'wix.iam.verification.v1.VerificationService.Start',\n      packageName: PACKAGE_NAME,\n      url: resolveWixIamVerificationV1VerificationServiceUrl({\n        protoPath: '/v1/Start',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __start;\n}\n\n/**\n * Continues the registration process when a member is required to verify an email address\n * using a verification code received by email.\n *\n * Email verification is required when the registering member is already listed as a contact.\n *\n * Typically, after a successful verification, you generate and use member tokens for the\n * registered member so that subsequent API calls are called as part of a member session.\n */\nexport function verifyDuringAuthentication(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __verifyDuringAuthentication({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.iam.verification.v1.start_response',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.iam.verification.v1.VerificationService.VerifyDuringAuthentication',\n      packageName: PACKAGE_NAME,\n      url: resolveWixIamVerificationV1VerificationServiceUrl({\n        protoPath: '/v1/auth/verify',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTBytesToSDKBytes,\n            paths: [\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.challenge',\n              },\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id',\n              },\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'identity.createdDate' },\n              { path: 'identity.updatedDate' },\n              { path: 'identity.identityProfile.customFields.value.dateValue' },\n              { path: 'additionalData.*.dateValue' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'identity.identityProfile.customFields.value.numValue' },\n              { path: 'additionalData.*.numValue' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __verifyDuringAuthentication;\n}\n\n/**\n * Resend the verification email and continue the registration process when a member is required to verify an email address\n * using a verification code received by email.\n */\nexport function resendDuringAuthentication(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __resendDuringAuthentication({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.iam.verification.v1.start_response',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.iam.verification.v1.VerificationService.ResendDuringAuthentication',\n      packageName: PACKAGE_NAME,\n      url: resolveWixIamVerificationV1VerificationServiceUrl({\n        protoPath: '/v1/auth/resend',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTBytesToSDKBytes,\n            paths: [\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.challenge',\n              },\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id',\n              },\n              {\n                path: 'mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'identity.createdDate' },\n              { path: 'identity.updatedDate' },\n              { path: 'identity.identityProfile.customFields.value.dateValue' },\n              { path: 'additionalData.*.dateValue' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'identity.identityProfile.customFields.value.numValue' },\n              { path: 'additionalData.*.numValue' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __resendDuringAuthentication;\n}\n","import * as ambassadorWixIamVerificationV1StartResponse from './iam-verification-v1-start-response-verification.http.js';\nimport * as ambassadorWixIamVerificationV1StartResponseTypes from './iam-verification-v1-start-response-verification.types.js';\nimport * as ambassadorWixIamVerificationV1StartResponseUniversalTypes from './iam-verification-v1-start-response-verification.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function start(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.StartRequest,\n  ambassadorWixIamVerificationV1StartResponseTypes.StartRequest,\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.StartResponse,\n  ambassadorWixIamVerificationV1StartResponseTypes.StartResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixIamVerificationV1StartResponse.start(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/Start',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function verifyDuringAuthentication(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.VerifyDuringAuthenticationRequest,\n  ambassadorWixIamVerificationV1StartResponseTypes.VerifyDuringAuthenticationRequest,\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.StateMachineResponse,\n  ambassadorWixIamVerificationV1StartResponseTypes.StateMachineResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixIamVerificationV1StartResponse.verifyDuringAuthentication(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/auth/verify',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function resendDuringAuthentication(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.ResendDuringAuthenticationRequest,\n  ambassadorWixIamVerificationV1StartResponseTypes.ResendDuringAuthenticationRequest,\n  ambassadorWixIamVerificationV1StartResponseUniversalTypes.StateMachineResponse,\n  ambassadorWixIamVerificationV1StartResponseTypes.StateMachineResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixIamVerificationV1StartResponse.resendDuringAuthentication(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v1/auth/resend',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["resendDuringAuthentication","start","verifyDuringAuthentication","payload","start","verifyDuringAuthentication","resendDuringAuthentication"]}