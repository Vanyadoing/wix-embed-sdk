{"version":3,"sources":["../../../src/stores-catalog-v3-inventory-item-inventory-items-v-3.http.ts","../../../src/stores-catalog-v3-inventory-item-inventory-items-v-3.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'manage._base_domain_': [\n      {\n        srcPath: '/inventory',\n        destPath: '',\n      },\n    ],\n    'api._api_base_domain_': [\n      {\n        srcPath: '/inventory',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/inventory-items',\n        destPath: '/v3/inventory-items',\n      },\n      {\n        srcPath: '/stores/v3/bulk/inventory-items',\n        destPath: '/v3/bulk/inventory-items',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n    'editor.wixapps.net': [\n      {\n        srcPath: '/_api/inventory',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_inventory-items-v-3';\n\n/**\n * Creates an inventory item.\n * The combination of `variantId` and `locationId` is unique.\n */\nexport function createInventoryItem(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createInventoryItem({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'inventoryItem.createdDate' },\n          { path: 'inventoryItem.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.CreateInventoryItem',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'inventoryItem.createdDate' },\n              { path: 'inventoryItem.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createInventoryItem;\n}\n\n/** Creates multiple inventory items. */\nexport function bulkCreateInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreateInventoryItems({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'inventoryItems.createdDate' },\n          { path: 'inventoryItems.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkCreateInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateInventoryItems;\n}\n\n/** Retrieves an inventory item. */\nexport function getInventoryItem(payload: object): RequestOptionsFactory<any> {\n  function __getInventoryItem({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'GET' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.GetInventoryItem',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items/{inventoryItemId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'inventoryItem.createdDate' },\n              { path: 'inventoryItem.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getInventoryItem;\n}\n\n/**\n * Updates an inventory item.\n *\n *\n * Each time the inventory item is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the inventory item.\n * This ensures you're working with the latest inventory item and prevents unintended overwrites.\n */\nexport function updateInventoryItem(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateInventoryItem({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'inventoryItem.createdDate' },\n          { path: 'inventoryItem.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'PATCH' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.UpdateInventoryItem',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items/{inventoryItem.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'inventoryItem.createdDate' },\n              { path: 'inventoryItem.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateInventoryItem;\n}\n\n/**\n * Updates multiple inventory items.\n *\n * Each time an inventory item is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating an inventory item.\n * This ensures you're working with the latest inventory item and prevents unintended overwrites.\n */\nexport function bulkUpdateInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateInventoryItems({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'inventoryItems.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'inventoryItems.inventoryItem.createdDate' },\n          { path: 'inventoryItems.inventoryItem.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateInventoryItems;\n}\n\n/**\n * Updates multiple inventory items, given the provided filter.\n *\n * Each time an inventory item is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating an inventory item.\n * This ensures you're working with the latest inventory item and prevents unintended overwrites.\n */\nexport function bulkUpdateInventoryItemsByFilter(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateInventoryItemsByFilter({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'inventoryItem.createdDate' },\n          { path: 'inventoryItem.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItemsByFilter',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/update-by-filter',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateInventoryItemsByFilter;\n}\n\n/** Deletes an inventory item. */\nexport function deleteInventoryItem(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteInventoryItem({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'DELETE' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.DeleteInventoryItem',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items/{inventoryItemId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteInventoryItem;\n}\n\n/** Deletes multiple inventory items. */\nexport function bulkDeleteInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDeleteInventoryItems({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDeleteInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/delete',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteInventoryItems;\n}\n\n/**\n * Retrieves a list of up to 1,000 inventory items, given the provided filtering, sorting, and cursor paging.\n *\n * For field support for filters and sorting,\n * see [Inventory Items: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/inventory-items-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryInventoryItems({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.QueryInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'inventoryItems.createdDate' },\n              { path: 'inventoryItems.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryInventoryItems;\n}\n\n/**\n * Retrieves a list of inventory items, given the provided filtering, sorting, and cursor paging.\n *\n *\n * Search Inventory Items runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Inventory Items: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/inventory-items-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Search_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function searchInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __searchInventoryItems({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'search.aggregations.range.buckets.from' },\n          { path: 'search.aggregations.range.buckets.to' },\n          {\n            path: 'search.aggregations.nested.nestedAggregations.range.buckets.from',\n          },\n          {\n            path: 'search.aggregations.nested.nestedAggregations.range.buckets.to',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.SearchInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/inventory-items/search',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'inventoryItems.createdDate' },\n              { path: 'inventoryItems.updatedDate' },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'aggregationData.results.ranges.results.from' },\n              { path: 'aggregationData.results.ranges.results.to' },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from',\n              },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.range.from',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.range.to',\n              },\n              { path: 'aggregationData.results.scalar.value' },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.scalar.value',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.scalar.value',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __searchInventoryItems;\n}\n\n/**\n * Decrements quantities of multiple inventory items.\n *\n * > **Notes:**:\n * > + `trackQuantity` must be `true` to allow for decrementing the quantity.\n * > + If you pass `restrictInventory: true` and the `decrementData.decrementBy` amount is greater than the current quantity in stock, the request will fail with an `INSUFFICIENT_INVENTORY` error.\n * > + Pass `restrictInventory: false` to allow for negative quantities.\n * > + If you pass `preorderRequest: true` and the item is available for preorder, the item's `preorderCounter` will increase and the item's quantity will stay the same.\n */\nexport function bulkDecrementInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDecrementInventoryItems({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/decrement',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkDecrementInventoryItems;\n}\n\n/**\n * Increments quantities of multiple inventory items.\n *\n * > **Note:** `trackQuantity` must be `true` to allow for incrementing the quantity.\n */\nexport function bulkIncrementInventoryItems(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkIncrementInventoryItems({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItems',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/increment',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkIncrementInventoryItems;\n}\n\n/**\n * Decrements quantities of multiple inventory items by variant and location.\n *\n * > **Notes:**:\n * > + `trackQuantity` must be `true` to allow for decrementing the quantity.\n * > + If you pass `restrictInventory: true` and the `decrementData.decrementBy` amount is greater than the current quantity in stock, the request will fail with an `INSUFFICIENT_INVENTORY` error.\n * > + Pass `restrictInventory: false` to allow for negative quantities.\n * > + If you pass `preorderRequest: true` and the item is available for preorder, the item's `preorderCounter` will increase and the item's quantity will stay the same.\n */\nexport function bulkDecrementInventoryItemsByVariantAndLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkDecrementInventoryItemsByVariantAndLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItemsByVariantAndLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/decrement-by-variant-and-location',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkDecrementInventoryItemsByVariantAndLocation;\n}\n\n/**\n * Increments quantities of multiple inventory items by variant and location.\n *\n * > **Note:** `trackQuantity` must be `true` to allow for incrementing the quantity.\n */\nexport function bulkIncrementInventoryItemsByVariantAndLocation(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkIncrementInventoryItemsByVariantAndLocation({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItemsByVariantAndLocation',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/increment-by-variant-and-location',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkIncrementInventoryItemsByVariantAndLocation;\n}\n\n/**\n * Set or Adjust inventory items which satisfy the provided filter.\n * If item track quantity, adjust it's quantity,\n * In case non-tracking, updates it to track and sets quantity to `incrementBy` or `decrementBy`.\n */\nexport function bulkSetOrAdjustInventoryItemsByFilter(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkSetOrAdjustInventoryItemsByFilter({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.inventory_item',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkSetOrAdjustInventoryItemsByFilter',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({\n        protoPath: '/v3/bulk/inventory-items/set-or-adjust-by-filter',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkSetOrAdjustInventoryItemsByFilter;\n}\n","import * as ambassadorWixStoresCatalogV3InventoryItem from './stores-catalog-v3-inventory-item-inventory-items-v-3.http.js';\nimport * as ambassadorWixStoresCatalogV3InventoryItemTypes from './stores-catalog-v3-inventory-item-inventory-items-v-3.types.js';\nimport * as ambassadorWixStoresCatalogV3InventoryItemUniversalTypes from './stores-catalog-v3-inventory-item-inventory-items-v-3.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function createInventoryItem(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.CreateInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.CreateInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.CreateInventoryItemResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.CreateInventoryItemResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.createInventoryItem(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/inventory-items',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkCreateInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkCreateInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkCreateInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkCreateInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkCreateInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkCreateInventoryItems(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getInventoryItem(): __PublicMethodMetaInfo<\n  'GET',\n  { inventoryItemId: string },\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.GetInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.GetInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.GetInventoryItemResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.GetInventoryItemResponse\n> {\n  const payload = { inventoryItemId: ':inventoryItemId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.getInventoryItem(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v3/inventory-items/{inventoryItemId}',\n    pathParams: { inventoryItemId: 'inventoryItemId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateInventoryItem(): __PublicMethodMetaInfo<\n  'PATCH',\n  { inventoryItemId: string },\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.UpdateInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.UpdateInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.UpdateInventoryItemResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.UpdateInventoryItemResponse\n> {\n  const payload = { inventoryItem: { id: ':inventoryItemId' } } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.updateInventoryItem(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v3/inventory-items/{inventoryItem.id}',\n    pathParams: { inventoryItemId: 'inventoryItemId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkUpdateInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkUpdateInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkUpdateInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkUpdateInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkUpdateInventoryItems(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/update',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateInventoryItemsByFilter(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkUpdateInventoryItemsByFilterRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkUpdateInventoryItemsByFilterRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkUpdateInventoryItemsByFilterResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkUpdateInventoryItemsByFilterResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkUpdateInventoryItemsByFilter(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/update-by-filter',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteInventoryItem(): __PublicMethodMetaInfo<\n  'DELETE',\n  { inventoryItemId: string },\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.DeleteInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.DeleteInventoryItemRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.DeleteInventoryItemResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.DeleteInventoryItemResponse\n> {\n  const payload = { inventoryItemId: ':inventoryItemId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.deleteInventoryItem(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v3/inventory-items/{inventoryItemId}',\n    pathParams: { inventoryItemId: 'inventoryItemId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDeleteInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDeleteInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDeleteInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDeleteInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDeleteInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkDeleteInventoryItems(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/delete',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.QueryInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.QueryInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.QueryInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.QueryInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.queryInventoryItems(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/inventory-items/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function searchInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.SearchInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.SearchInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.SearchInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.SearchInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.searchInventoryItems(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/inventory-items/search',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDecrementInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDecrementInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDecrementInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDecrementInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDecrementInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkDecrementInventoryItems(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/decrement',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkIncrementInventoryItems(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkIncrementInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkIncrementInventoryItemsRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkIncrementInventoryItemsResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkIncrementInventoryItemsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkIncrementInventoryItems(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/increment',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDecrementInventoryItemsByVariantAndLocation(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDecrementInventoryItemsByVariantAndLocationRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDecrementInventoryItemsByVariantAndLocationRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkDecrementInventoryItemsByVariantAndLocationResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkDecrementInventoryItemsByVariantAndLocationResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkDecrementInventoryItemsByVariantAndLocation(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/decrement-by-variant-and-location',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkIncrementInventoryItemsByVariantAndLocation(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkIncrementInventoryItemsByVariantAndLocationRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkIncrementInventoryItemsByVariantAndLocationRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkIncrementInventoryItemsByVariantAndLocationResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkIncrementInventoryItemsByVariantAndLocationResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkIncrementInventoryItemsByVariantAndLocation(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/increment-by-variant-and-location',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkSetOrAdjustInventoryItemsByFilter(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkSetOrAdjustInventoryItemsByFilterRequest,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkSetOrAdjustInventoryItemsByFilterRequest,\n  ambassadorWixStoresCatalogV3InventoryItemUniversalTypes.BulkSetOrAdjustInventoryItemsByFilterResponse,\n  ambassadorWixStoresCatalogV3InventoryItemTypes.BulkSetOrAdjustInventoryItemsByFilterResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3InventoryItem.bulkSetOrAdjustInventoryItemsByFilter(\n      payload\n    );\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/inventory-items/set-or-adjust-by-filter',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","createInventoryItem","bulkCreateInventoryItems","getInventoryItem","updateInventoryItem","bulkUpdateInventoryItems","bulkUpdateInventoryItemsByFilter","deleteInventoryItem","bulkDeleteInventoryItems","queryInventoryItems","searchInventoryItems","bulkDecrementInventoryItems","bulkIncrementInventoryItems","bulkDecrementInventoryItemsByVariantAndLocation","bulkIncrementInventoryItemsByVariantAndLocation","bulkSetOrAdjustInventoryItemsByFilter"]}