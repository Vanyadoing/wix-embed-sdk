// src/stores-catalog-v3-inventory-item-inventory-items-v-3.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/inventory",
        destPath: ""
      }
    ],
    "api._api_base_domain_": [
      {
        srcPath: "/inventory",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/inventory-items",
        destPath: "/v3/inventory-items"
      },
      {
        srcPath: "/stores/v3/bulk/inventory-items",
        destPath: "/v3/bulk/inventory-items"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_inventory-items-v-3";
function createInventoryItem(payload) {
  function __createInventoryItem({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.CreateInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createInventoryItem;
}
function bulkCreateInventoryItems(payload) {
  function __bulkCreateInventoryItems({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItems.createdDate" },
          { path: "inventoryItems.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkCreateInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateInventoryItems;
}
function getInventoryItem(payload) {
  function __getInventoryItem({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "GET",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.GetInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItemId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getInventoryItem;
}
function updateInventoryItem(payload) {
  function __updateInventoryItem({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "PATCH",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.UpdateInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItem.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateInventoryItem;
}
function bulkUpdateInventoryItems(payload) {
  function __bulkUpdateInventoryItems({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "inventoryItems.fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItems.inventoryItem.createdDate" },
          { path: "inventoryItems.inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateInventoryItems;
}
function bulkUpdateInventoryItemsByFilter(payload) {
  function __bulkUpdateInventoryItemsByFilter({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItemsByFilter",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/update-by-filter",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __bulkUpdateInventoryItemsByFilter;
}
function deleteInventoryItem(payload) {
  function __deleteInventoryItem({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "DELETE",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.DeleteInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItemId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteInventoryItem;
}
function bulkDeleteInventoryItems(payload) {
  function __bulkDeleteInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDeleteInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteInventoryItems;
}
function queryInventoryItems(payload) {
  function __queryInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.QueryInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItems.createdDate" },
            { path: "inventoryItems.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryInventoryItems;
}
function searchInventoryItems(payload) {
  function __searchInventoryItems({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [
          { path: "search.aggregations.range.buckets.from" },
          { path: "search.aggregations.range.buckets.to" },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.from"
          },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.to"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.SearchInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/search",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItems.createdDate" },
            { path: "inventoryItems.updatedDate" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "aggregationData.results.ranges.results.from" },
            { path: "aggregationData.results.ranges.results.to" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from"
            },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.from"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.to"
            },
            { path: "aggregationData.results.scalar.value" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.scalar.value"
            },
            {
              path: "aggregationData.results.nested.results.results.*.scalar.value"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchInventoryItems;
}
function bulkDecrementInventoryItems(payload) {
  function __bulkDecrementInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/decrement",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkDecrementInventoryItems;
}
function bulkIncrementInventoryItems(payload) {
  function __bulkIncrementInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/increment",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkIncrementInventoryItems;
}
function bulkDecrementInventoryItemsByVariantAndLocation(payload) {
  function __bulkDecrementInventoryItemsByVariantAndLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItemsByVariantAndLocation",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/decrement-by-variant-and-location",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkDecrementInventoryItemsByVariantAndLocation;
}
function bulkIncrementInventoryItemsByVariantAndLocation(payload) {
  function __bulkIncrementInventoryItemsByVariantAndLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItemsByVariantAndLocation",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/increment-by-variant-and-location",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkIncrementInventoryItemsByVariantAndLocation;
}
function bulkSetOrAdjustInventoryItemsByFilter(payload) {
  function __bulkSetOrAdjustInventoryItemsByFilter({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkSetOrAdjustInventoryItemsByFilter",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/set-or-adjust-by-filter",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkSetOrAdjustInventoryItemsByFilter;
}

// src/stores-catalog-v3-inventory-item-inventory-items-v-3.meta.ts
function createInventoryItem2() {
  const payload = {};
  const getRequestOptions = createInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkCreateInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getInventoryItem2() {
  const payload = { inventoryItemId: ":inventoryItemId" };
  const getRequestOptions = getInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/inventory-items/{inventoryItemId}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateInventoryItem2() {
  const payload = { inventoryItem: { id: ":inventoryItemId" } };
  const getRequestOptions = updateInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/inventory-items/{inventoryItem.id}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkUpdateInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateInventoryItemsByFilter2() {
  const payload = {};
  const getRequestOptions = bulkUpdateInventoryItemsByFilter(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/update-by-filter",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteInventoryItem2() {
  const payload = { inventoryItemId: ":inventoryItemId" };
  const getRequestOptions = deleteInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/inventory-items/{inventoryItemId}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkDeleteInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryInventoryItems2() {
  const payload = {};
  const getRequestOptions = queryInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function searchInventoryItems2() {
  const payload = {};
  const getRequestOptions = searchInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items/search",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDecrementInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkDecrementInventoryItems(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/decrement",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkIncrementInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkIncrementInventoryItems(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/increment",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDecrementInventoryItemsByVariantAndLocation2() {
  const payload = {};
  const getRequestOptions = bulkDecrementInventoryItemsByVariantAndLocation(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/decrement-by-variant-and-location",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkIncrementInventoryItemsByVariantAndLocation2() {
  const payload = {};
  const getRequestOptions = bulkIncrementInventoryItemsByVariantAndLocation(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/increment-by-variant-and-location",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkSetOrAdjustInventoryItemsByFilter2() {
  const payload = {};
  const getRequestOptions = bulkSetOrAdjustInventoryItemsByFilter(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/set-or-adjust-by-filter",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  bulkCreateInventoryItems2 as bulkCreateInventoryItems,
  bulkDecrementInventoryItems2 as bulkDecrementInventoryItems,
  bulkDecrementInventoryItemsByVariantAndLocation2 as bulkDecrementInventoryItemsByVariantAndLocation,
  bulkDeleteInventoryItems2 as bulkDeleteInventoryItems,
  bulkIncrementInventoryItems2 as bulkIncrementInventoryItems,
  bulkIncrementInventoryItemsByVariantAndLocation2 as bulkIncrementInventoryItemsByVariantAndLocation,
  bulkSetOrAdjustInventoryItemsByFilter2 as bulkSetOrAdjustInventoryItemsByFilter,
  bulkUpdateInventoryItems2 as bulkUpdateInventoryItems,
  bulkUpdateInventoryItemsByFilter2 as bulkUpdateInventoryItemsByFilter,
  createInventoryItem2 as createInventoryItem,
  deleteInventoryItem2 as deleteInventoryItem,
  getInventoryItem2 as getInventoryItem,
  queryInventoryItems2 as queryInventoryItems,
  searchInventoryItems2 as searchInventoryItems,
  updateInventoryItem2 as updateInventoryItem
};
//# sourceMappingURL=meta.mjs.map