"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  bulkCreateInventoryItems: () => bulkCreateInventoryItems2,
  bulkDecrementInventoryItems: () => bulkDecrementInventoryItems2,
  bulkDecrementInventoryItemsByVariantAndLocation: () => bulkDecrementInventoryItemsByVariantAndLocation2,
  bulkDeleteInventoryItems: () => bulkDeleteInventoryItems2,
  bulkIncrementInventoryItems: () => bulkIncrementInventoryItems2,
  bulkIncrementInventoryItemsByVariantAndLocation: () => bulkIncrementInventoryItemsByVariantAndLocation2,
  bulkSetOrAdjustInventoryItemsByFilter: () => bulkSetOrAdjustInventoryItemsByFilter2,
  bulkUpdateInventoryItems: () => bulkUpdateInventoryItems2,
  bulkUpdateInventoryItemsByFilter: () => bulkUpdateInventoryItemsByFilter2,
  createInventoryItem: () => createInventoryItem2,
  deleteInventoryItem: () => deleteInventoryItem2,
  getInventoryItem: () => getInventoryItem2,
  queryInventoryItems: () => queryInventoryItems2,
  searchInventoryItems: () => searchInventoryItems2,
  updateInventoryItem: () => updateInventoryItem2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-catalog-v3-inventory-item-inventory-items-v-3.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/inventory",
        destPath: ""
      }
    ],
    "api._api_base_domain_": [
      {
        srcPath: "/inventory",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/inventory-items",
        destPath: "/v3/inventory-items"
      },
      {
        srcPath: "/stores/v3/bulk/inventory-items",
        destPath: "/v3/bulk/inventory-items"
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/inventory",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_inventory-items-v-3";
function createInventoryItem(payload) {
  function __createInventoryItem({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.CreateInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createInventoryItem;
}
function bulkCreateInventoryItems(payload) {
  function __bulkCreateInventoryItems({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItems.createdDate" },
          { path: "inventoryItems.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkCreateInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateInventoryItems;
}
function getInventoryItem(payload) {
  function __getInventoryItem({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "GET",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.GetInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItemId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getInventoryItem;
}
function updateInventoryItem(payload) {
  function __updateInventoryItem({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "PATCH",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.UpdateInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItem.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItem.createdDate" },
            { path: "inventoryItem.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateInventoryItem;
}
function bulkUpdateInventoryItems(payload) {
  function __bulkUpdateInventoryItems({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "inventoryItems.fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItems.inventoryItem.createdDate" },
          { path: "inventoryItems.inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateInventoryItems;
}
function bulkUpdateInventoryItemsByFilter(payload) {
  function __bulkUpdateInventoryItemsByFilter({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "inventoryItem.createdDate" },
          { path: "inventoryItem.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkUpdateInventoryItemsByFilter",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/update-by-filter",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __bulkUpdateInventoryItemsByFilter;
}
function deleteInventoryItem(payload) {
  function __deleteInventoryItem({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "DELETE",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.DeleteInventoryItem",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/{inventoryItemId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteInventoryItem;
}
function bulkDeleteInventoryItems(payload) {
  function __bulkDeleteInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDeleteInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteInventoryItems;
}
function queryInventoryItems(payload) {
  function __queryInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.QueryInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItems.createdDate" },
            { path: "inventoryItems.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryInventoryItems;
}
function searchInventoryItems(payload) {
  function __searchInventoryItems({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "search.aggregations.range.buckets.from" },
          { path: "search.aggregations.range.buckets.to" },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.from"
          },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.to"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.SearchInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/inventory-items/search",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "inventoryItems.createdDate" },
            { path: "inventoryItems.updatedDate" }
          ]
        },
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "aggregationData.results.ranges.results.from" },
            { path: "aggregationData.results.ranges.results.to" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from"
            },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.from"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.to"
            },
            { path: "aggregationData.results.scalar.value" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.scalar.value"
            },
            {
              path: "aggregationData.results.nested.results.results.*.scalar.value"
            }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchInventoryItems;
}
function bulkDecrementInventoryItems(payload) {
  function __bulkDecrementInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/decrement",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkDecrementInventoryItems;
}
function bulkIncrementInventoryItems(payload) {
  function __bulkIncrementInventoryItems({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItems",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/increment",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkIncrementInventoryItems;
}
function bulkDecrementInventoryItemsByVariantAndLocation(payload) {
  function __bulkDecrementInventoryItemsByVariantAndLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkDecrementInventoryItemsByVariantAndLocation",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/decrement-by-variant-and-location",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkDecrementInventoryItemsByVariantAndLocation;
}
function bulkIncrementInventoryItemsByVariantAndLocation(payload) {
  function __bulkIncrementInventoryItemsByVariantAndLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkIncrementInventoryItemsByVariantAndLocation",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/increment-by-variant-and-location",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkIncrementInventoryItemsByVariantAndLocation;
}
function bulkSetOrAdjustInventoryItemsByFilter(payload) {
  function __bulkSetOrAdjustInventoryItemsByFilter({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.inventory_item",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.inventory.api.v3.InventoryService.BulkSetOrAdjustInventoryItemsByFilter",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogInventoryApiV3InventoryServiceUrl({
        protoPath: "/v3/bulk/inventory-items/set-or-adjust-by-filter",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkSetOrAdjustInventoryItemsByFilter;
}

// src/stores-catalog-v3-inventory-item-inventory-items-v-3.meta.ts
function createInventoryItem2() {
  const payload = {};
  const getRequestOptions = createInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkCreateInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getInventoryItem2() {
  const payload = { inventoryItemId: ":inventoryItemId" };
  const getRequestOptions = getInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/inventory-items/{inventoryItemId}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateInventoryItem2() {
  const payload = { inventoryItem: { id: ":inventoryItemId" } };
  const getRequestOptions = updateInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/inventory-items/{inventoryItem.id}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkUpdateInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateInventoryItemsByFilter2() {
  const payload = {};
  const getRequestOptions = bulkUpdateInventoryItemsByFilter(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/update-by-filter",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteInventoryItem2() {
  const payload = { inventoryItemId: ":inventoryItemId" };
  const getRequestOptions = deleteInventoryItem(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/inventory-items/{inventoryItemId}",
    pathParams: { inventoryItemId: "inventoryItemId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkDeleteInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryInventoryItems2() {
  const payload = {};
  const getRequestOptions = queryInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function searchInventoryItems2() {
  const payload = {};
  const getRequestOptions = searchInventoryItems(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/inventory-items/search",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDecrementInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkDecrementInventoryItems(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/decrement",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkIncrementInventoryItems2() {
  const payload = {};
  const getRequestOptions = bulkIncrementInventoryItems(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/increment",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDecrementInventoryItemsByVariantAndLocation2() {
  const payload = {};
  const getRequestOptions = bulkDecrementInventoryItemsByVariantAndLocation(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/decrement-by-variant-and-location",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkIncrementInventoryItemsByVariantAndLocation2() {
  const payload = {};
  const getRequestOptions = bulkIncrementInventoryItemsByVariantAndLocation(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/increment-by-variant-and-location",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkSetOrAdjustInventoryItemsByFilter2() {
  const payload = {};
  const getRequestOptions = bulkSetOrAdjustInventoryItemsByFilter(
    payload
  );
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/inventory-items/set-or-adjust-by-filter",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bulkCreateInventoryItems,
  bulkDecrementInventoryItems,
  bulkDecrementInventoryItemsByVariantAndLocation,
  bulkDeleteInventoryItems,
  bulkIncrementInventoryItems,
  bulkIncrementInventoryItemsByVariantAndLocation,
  bulkSetOrAdjustInventoryItemsByFilter,
  bulkUpdateInventoryItems,
  bulkUpdateInventoryItemsByFilter,
  createInventoryItem,
  deleteInventoryItem,
  getInventoryItem,
  queryInventoryItems,
  searchInventoryItems,
  updateInventoryItem
});
//# sourceMappingURL=meta.js.map