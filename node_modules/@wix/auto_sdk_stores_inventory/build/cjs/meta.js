"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  decrementInventory: () => decrementInventory2,
  getInventoryVariants: () => getInventoryVariants2,
  incrementInventory: () => incrementInventory2,
  queryInventory: () => queryInventory2,
  updateInventoryVariants: () => updateInventoryVariants2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-v2-inventory-inventory.http.ts
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
function resolveWixInventoryApiV1InventoryReadApiUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores-reader/v2/collections",
        destPath: "/v2/collections"
      },
      {
        srcPath: "/stores-reader/v2/inventoryItems",
        destPath: "/v2/inventoryItems"
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/wix-ecommerce-catalog-reader-web",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/stores-reader/v2/inventoryItems",
        destPath: "/v2/inventoryItems"
      },
      {
        srcPath: "/stores-reader/v2/collections",
        destPath: "/v2/collections"
      }
    ]
  };
  return (0, import_rest_modules.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
function resolveWixInventoryApiV1InventoryWriteApiUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog-web",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      },
      {
        srcPath: "/wix-ecommerce-catalog",
        destPath: ""
      }
    ],
    "ecom._base_domain_": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ],
    "*.pub.wix-code.com": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v1/inventoryItems",
        destPath: "/v1/inventoryItems"
      },
      {
        srcPath: "/stores/v2/inventoryItems",
        destPath: "/v2/inventoryItems"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/wix-ecommerce-catalog",
        destPath: ""
      }
    ],
    "editor.wixapps.net": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ],
    "www.wixgateway.com": [
      {
        srcPath: "/stores/v1/products",
        destPath: "/v1/products"
      },
      {
        srcPath: "/stores/v1/collections",
        destPath: "/v1/collections"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/catalog-server",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_inventory";
function updateInventoryVariants(payload) {
  function __updateInventoryVariants({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "inventoryItem.lastUpdated" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.v2.inventory",
      method: "PATCH",
      methodFqn: "wix.inventory.api.v1.InventoryWriteApi.UpdateInventoryVariants",
      packageName: PACKAGE_NAME,
      url: resolveWixInventoryApiV1InventoryWriteApiUrl({
        protoPath: "/v2/inventoryItems/product/{inventoryItem.productId}",
        data: serializedData,
        host
      }),
      data: serializedData
    };
    return metadata;
  }
  return __updateInventoryVariants;
}
function decrementInventory(payload) {
  function __decrementInventory({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.v2.inventory",
      method: "POST",
      methodFqn: "wix.inventory.api.v1.InventoryWriteApi.DecrementInventory",
      packageName: PACKAGE_NAME,
      url: resolveWixInventoryApiV1InventoryWriteApiUrl({
        protoPath: "/v2/inventoryItems/decrement",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __decrementInventory;
}
function incrementInventory(payload) {
  function __incrementInventory({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.v2.inventory",
      method: "POST",
      methodFqn: "wix.inventory.api.v1.InventoryWriteApi.IncrementInventory",
      packageName: PACKAGE_NAME,
      url: resolveWixInventoryApiV1InventoryWriteApiUrl({
        protoPath: "/v2/inventoryItems/increment",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __incrementInventory;
}
function getInventoryVariants(payload) {
  function __getInventoryVariants({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.v2.inventory",
      method: "POST",
      methodFqn: "wix.inventory.api.v1.InventoryReadApi.GetInventoryVariants",
      packageName: PACKAGE_NAME,
      url: resolveWixInventoryApiV1InventoryReadApiUrl({
        protoPath: "/v2/inventoryItems/{inventoryId}/getVariants",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "inventoryItem.lastUpdated" }]
        }
      ])
    };
    return metadata;
  }
  return __getInventoryVariants;
}
function queryInventory(payload) {
  function __queryInventory({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.v2.inventory",
      method: "POST",
      methodFqn: "wix.inventory.api.v1.InventoryReadApi.QueryInventory",
      packageName: PACKAGE_NAME,
      url: resolveWixInventoryApiV1InventoryReadApiUrl({
        protoPath: "/v2/inventoryItems/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [{ path: "inventoryItems.lastUpdated" }]
        }
      ])
    };
    return metadata;
  }
  return __queryInventory;
}

// src/stores-v2-inventory-inventory.meta.ts
function updateInventoryVariants2() {
  const payload = {
    inventoryItem: { productId: ":inventoryItemProductId" }
  };
  const getRequestOptions = updateInventoryVariants(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v2/inventoryItems/product/{inventoryItem.productId}",
    pathParams: { inventoryItemProductId: "inventoryItemProductId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function decrementInventory2() {
  const payload = {};
  const getRequestOptions = decrementInventory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/inventoryItems/decrement",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function incrementInventory2() {
  const payload = {};
  const getRequestOptions = incrementInventory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/inventoryItems/increment",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getInventoryVariants2() {
  const payload = { inventoryId: ":inventoryId" };
  const getRequestOptions = getInventoryVariants(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/inventoryItems/{inventoryId}/getVariants",
    pathParams: { inventoryId: "inventoryId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryInventory2() {
  const payload = {};
  const getRequestOptions = queryInventory(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/inventoryItems/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  decrementInventory,
  getInventoryVariants,
  incrementInventory,
  queryInventory,
  updateInventoryVariants
});
//# sourceMappingURL=meta.js.map