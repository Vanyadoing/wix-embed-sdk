"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  LocationType: () => LocationType,
  SortOrder: () => SortOrder,
  WebhookIdentityType: () => WebhookIdentityType,
  getStoresLocation: () => getStoresLocation4,
  queryStoresLocations: () => queryStoresLocations4
});
module.exports = __toCommonJS(index_exports);

// src/stores-catalog-v3-stores-location-stores-locations-v-3.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_query_builder = require("@wix/sdk-runtime/query-builder");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/stores-catalog-v3-stores-location-stores-locations-v-3.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixStoresCatalogLocationV3StoresLocationServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/_api/location",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/location",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/location",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/locations",
        destPath: "/v3/locations"
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_stores-locations-v-3";
function getStoresLocation(payload) {
  function __getStoresLocation({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.stores_location",
      method: "GET",
      methodFqn: "wix.stores.catalog.location.v3.StoresLocationService.GetStoresLocation",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogLocationV3StoresLocationServiceUrl({
        protoPath: "/v3/locations/{storesLocationId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "storesLocation.createdDate" },
            { path: "storesLocation.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getStoresLocation;
}
function queryStoresLocations(payload) {
  function __queryStoresLocations({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.stores_location",
      method: "POST",
      methodFqn: "wix.stores.catalog.location.v3.StoresLocationService.QueryStoresLocations",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogLocationV3StoresLocationServiceUrl({
        protoPath: "/v3/locations/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "storesLocations.createdDate" },
            { path: "storesLocations.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryStoresLocations;
}

// src/stores-catalog-v3-stores-location-stores-locations-v-3.universal.ts
var import_transform_paths2 = require("@wix/sdk-runtime/transformations/transform-paths");
var LocationType = /* @__PURE__ */ ((LocationType2) => {
  LocationType2["UNKNOWN_LOCATION_TYPE"] = "UNKNOWN_LOCATION_TYPE";
  LocationType2["VIRTUAL"] = "VIRTUAL";
  LocationType2["PHYSICAL"] = "PHYSICAL";
  return LocationType2;
})(LocationType || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
async function getStoresLocation2(storesLocationId) {
  const { httpClient, sideEffects } = arguments[1];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    storesLocationId
  });
  const reqOpts = getStoresLocation(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(result.data)?.storesLocation;
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { storesLocationId: "$[0]" },
        singleArgumentUnchanged: false
      },
      ["storesLocationId"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}
function queryStoresLocations2() {
  const { httpClient, sideEffects } = arguments[0];
  return (0, import_query_builder.queryBuilder)({
    func: async (payload) => {
      const reqOpts = queryStoresLocations(
        payload
      );
      sideEffects?.onSiteCall?.();
      try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return result;
      } catch (err) {
        sideEffects?.onError?.(err);
        throw err;
      }
    },
    requestTransformer: (query) => {
      const args = [query, {}];
      return (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
        ...args?.[1],
        query: args?.[0]
      });
    },
    responseTransformer: ({
      data
    }) => {
      const transformedData = (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
        (0, import_transform_paths2.transformPaths)(data, [])
      );
      return {
        items: transformedData?.storesLocations,
        pagingMetadata: transformedData?.pagingMetadata
      };
    },
    errorTransformer: (err) => {
      const transformedError = (0, import_transform_error.transformError)(err, {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { query: "$[0]" },
        singleArgumentUnchanged: false
      });
      throw transformedError;
    },
    pagingMethod: "CURSOR",
    transformationPaths: {}
  });
}

// src/stores-catalog-v3-stores-location-stores-locations-v-3.public.ts
function getStoresLocation3(httpClient) {
  return (storesLocationId) => getStoresLocation2(
    storesLocationId,
    // @ts-ignore
    { httpClient }
  );
}
function queryStoresLocations3(httpClient) {
  return () => queryStoresLocations2(
    // @ts-ignore
    { httpClient }
  );
}

// src/stores-catalog-v3-stores-location-stores-locations-v-3.context.ts
var import_rest_modules3 = require("@wix/sdk-runtime/rest-modules");
var getStoresLocation4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(getStoresLocation3);
var queryStoresLocations4 = /* @__PURE__ */ (0, import_rest_modules3.createRESTModule)(queryStoresLocations3);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LocationType,
  SortOrder,
  WebhookIdentityType,
  getStoresLocation,
  queryStoresLocations
});
//# sourceMappingURL=index.js.map