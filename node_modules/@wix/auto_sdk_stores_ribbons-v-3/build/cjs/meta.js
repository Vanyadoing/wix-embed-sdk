"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  bulkCreateRibbons: () => bulkCreateRibbons2,
  bulkDeleteRibbons: () => bulkDeleteRibbons2,
  bulkGetOrCreateRibbons: () => bulkGetOrCreateRibbons2,
  bulkUpdateRibbons: () => bulkUpdateRibbons2,
  createRibbon: () => createRibbon2,
  deleteRibbon: () => deleteRibbon2,
  getOrCreateRibbon: () => getOrCreateRibbon2,
  getRibbon: () => getRibbon2,
  queryRibbons: () => queryRibbons2,
  updateRibbon: () => updateRibbon2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-catalog-v3-ribbon-ribbons-v-3.http.ts
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_timestamp2 = require("@wix/sdk-runtime/transformations/timestamp");
var import_field_mask = require("@wix/sdk-runtime/transformations/field-mask");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
function resolveWixStoresCatalogRibbonV3RibbonServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/ribbon",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/ribbons",
        destPath: "/v3/ribbons"
      },
      {
        srcPath: "/stores/v3/bulk/ribbons",
        destPath: "/v3/bulk/ribbons"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ]
  };
  return (0, import_rest_modules2.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_ribbons-v-3";
function createRibbon(payload) {
  function __createRibbon({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "ribbon.createdDate" }, { path: "ribbon.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.CreateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createRibbon;
}
function getRibbon(payload) {
  function __getRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "GET",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.GetRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbonId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload),
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getRibbon;
}
function updateRibbon(payload) {
  function __updateRibbon({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "ribbon.createdDate" }, { path: "ribbon.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "PATCH",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.UpdateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbon.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateRibbon;
}
function deleteRibbon(payload) {
  function __deleteRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "DELETE",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.DeleteRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbonId}",
        data: payload,
        host
      }),
      params: (0, import_rest_modules.toURLSearchParams)(payload)
    };
    return metadata;
  }
  return __deleteRibbon;
}
function queryRibbons(payload) {
  function __queryRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.QueryRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbons.createdDate" },
            { path: "ribbons.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryRibbons;
}
function bulkCreateRibbons(payload) {
  function __bulkCreateRibbons({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "ribbons.createdDate" },
          { path: "ribbons.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkCreateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateRibbons;
}
function bulkUpdateRibbons(payload) {
  function __bulkUpdateRibbons({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_field_mask.transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "ribbons.fieldMask" }]
      },
      {
        transformFn: import_timestamp.transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "ribbons.ribbon.createdDate" },
          { path: "ribbons.ribbon.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkUpdateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateRibbons;
}
function getOrCreateRibbon(payload) {
  function __getOrCreateRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.GetOrCreateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getOrCreateRibbon;
}
function bulkGetOrCreateRibbons(payload) {
  function __bulkGetOrCreateRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkGetOrCreateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_timestamp2.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkGetOrCreateRibbons;
}
function bulkDeleteRibbons(payload) {
  function __bulkDeleteRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkDeleteRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteRibbons;
}

// src/stores-catalog-v3-ribbon-ribbons-v-3.meta.ts
function createRibbon2() {
  const payload = {};
  const getRequestOptions = createRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getRibbon2() {
  const payload = { ribbonId: ":ribbonId" };
  const getRequestOptions = getRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/ribbons/{ribbonId}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateRibbon2() {
  const payload = { ribbon: { id: ":ribbonId" } };
  const getRequestOptions = updateRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/ribbons/{ribbon.id}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteRibbon2() {
  const payload = { ribbonId: ":ribbonId" };
  const getRequestOptions = deleteRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/ribbons/{ribbonId}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryRibbons2() {
  const payload = {};
  const getRequestOptions = queryRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkCreateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkUpdateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrCreateRibbon2() {
  const payload = {};
  const getRequestOptions = getOrCreateRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkGetOrCreateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkGetOrCreateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteRibbons2() {
  const payload = {};
  const getRequestOptions = bulkDeleteRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  bulkCreateRibbons,
  bulkDeleteRibbons,
  bulkGetOrCreateRibbons,
  bulkUpdateRibbons,
  createRibbon,
  deleteRibbon,
  getOrCreateRibbon,
  getRibbon,
  queryRibbons,
  updateRibbon
});
//# sourceMappingURL=meta.js.map