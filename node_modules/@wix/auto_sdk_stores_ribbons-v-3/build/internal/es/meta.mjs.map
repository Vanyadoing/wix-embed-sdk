{"version":3,"sources":["../../../src/stores-catalog-v3-ribbon-ribbons-v-3.http.ts","../../../src/stores-catalog-v3-ribbon-ribbons-v-3.meta.ts"],"sourcesContent":["import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixStoresCatalogRibbonV3RibbonServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'manage._base_domain_': [\n      {\n        srcPath: '/ribbon',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/ribbons',\n        destPath: '/v3/ribbons',\n      },\n      {\n        srcPath: '/stores/v3/bulk/ribbons',\n        destPath: '/v3/bulk/ribbons',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/ribbon',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/ribbon',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/ribbon',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/ribbon',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/ribbon',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_ribbons-v-3';\n\n/**\n * Creates a ribbon.\n *\n * To assign the ribbon to a product, include the `ribbon.id` or `ribbon.name` when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.\n */\nexport function createRibbon(payload: object): RequestOptionsFactory<any> {\n  function __createRibbon({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'ribbon.createdDate' }, { path: 'ribbon.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.CreateRibbon',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ribbon.createdDate' },\n              { path: 'ribbon.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createRibbon;\n}\n\n/** Retrieves a ribbon. */\nexport function getRibbon(payload: object): RequestOptionsFactory<any> {\n  function __getRibbon({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'GET' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.GetRibbon',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons/{ribbonId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ribbon.createdDate' },\n              { path: 'ribbon.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getRibbon;\n}\n\n/**\n * Updates a ribbon.\n *\n *\n * Each time the ribbon is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the ribbon.\n * This ensures you're working with the latest ribbon and prevents unintended overwrites.\n */\nexport function updateRibbon(payload: object): RequestOptionsFactory<any> {\n  function __updateRibbon({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'ribbon.createdDate' }, { path: 'ribbon.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'PATCH' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.UpdateRibbon',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons/{ribbon.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ribbon.createdDate' },\n              { path: 'ribbon.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateRibbon;\n}\n\n/**\n * Deletes a ribbon.\n *\n *\n * > **Note:** Deleting a ribbon will also remove it from all products it is assigned to.\n */\nexport function deleteRibbon(payload: object): RequestOptionsFactory<any> {\n  function __deleteRibbon({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'DELETE' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.DeleteRibbon',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons/{ribbonId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteRibbon;\n}\n\n/**\n * Retrieves a list of up to 100 ribbons, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Brands runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Ribbons: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/ribbons-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryRibbons(payload: object): RequestOptionsFactory<any> {\n  function __queryRibbons({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.QueryRibbons',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ribbons.createdDate' },\n              { path: 'ribbons.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryRibbons;\n}\n\n/** Creates multiple ribbons. */\nexport function bulkCreateRibbons(payload: object): RequestOptionsFactory<any> {\n  function __bulkCreateRibbons({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'ribbons.createdDate' },\n          { path: 'ribbons.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkCreateRibbons',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/bulk/ribbons/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateRibbons;\n}\n\n/**\n * Updates multiple ribbons.\n *\n * Each time a ribbon is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating a ribbon.\n * This ensures you're working with the latest ribbon and prevents unintended overwrites.\n */\nexport function bulkUpdateRibbons(payload: object): RequestOptionsFactory<any> {\n  function __bulkUpdateRibbons({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'ribbons.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'ribbons.ribbon.createdDate' },\n          { path: 'ribbons.ribbon.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkUpdateRibbons',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/bulk/ribbons/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateRibbons;\n}\n\n/** Retrieves a ribbon by name, or creates a ribbon if one with the passed `ribbonName` doesn't exist. */\nexport function getOrCreateRibbon(payload: object): RequestOptionsFactory<any> {\n  function __getOrCreateRibbon({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.GetOrCreateRibbon',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/ribbons/get-or-create',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'ribbon.createdDate' },\n              { path: 'ribbon.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrCreateRibbon;\n}\n\n/** Retrieves multiple ribbons by name, or creates multiple ribbons if those with the passed `ribbonNames` don't exist. */\nexport function bulkGetOrCreateRibbons(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkGetOrCreateRibbons({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.ribbon.v3.RibbonService.BulkGetOrCreateRibbons',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/bulk/ribbons/get-or-create',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkGetOrCreateRibbons;\n}\n\n/** Deletes multiple ribbons. */\nexport function bulkDeleteRibbons(payload: object): RequestOptionsFactory<any> {\n  function __bulkDeleteRibbons({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.ribbon',\n      method: 'POST' as any,\n      methodFqn: 'wix.stores.catalog.ribbon.v3.RibbonService.BulkDeleteRibbons',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({\n        protoPath: '/v3/bulk/ribbons/delete',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteRibbons;\n}\n","import * as ambassadorWixStoresCatalogV3Ribbon from './stores-catalog-v3-ribbon-ribbons-v-3.http.js';\nimport * as ambassadorWixStoresCatalogV3RibbonTypes from './stores-catalog-v3-ribbon-ribbons-v-3.types.js';\nimport * as ambassadorWixStoresCatalogV3RibbonUniversalTypes from './stores-catalog-v3-ribbon-ribbons-v-3.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function createRibbon(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.CreateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.CreateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.CreateRibbonResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.CreateRibbonResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.createRibbon(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/ribbons',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getRibbon(): __PublicMethodMetaInfo<\n  'GET',\n  { ribbonId: string },\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.GetRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.GetRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.GetRibbonResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.GetRibbonResponse\n> {\n  const payload = { ribbonId: ':ribbonId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.getRibbon(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v3/ribbons/{ribbonId}',\n    pathParams: { ribbonId: 'ribbonId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateRibbon(): __PublicMethodMetaInfo<\n  'PATCH',\n  { ribbonId: string },\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.UpdateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.UpdateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.UpdateRibbonResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.UpdateRibbonResponse\n> {\n  const payload = { ribbon: { id: ':ribbonId' } } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.updateRibbon(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v3/ribbons/{ribbon.id}',\n    pathParams: { ribbonId: 'ribbonId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteRibbon(): __PublicMethodMetaInfo<\n  'DELETE',\n  { ribbonId: string },\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.DeleteRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.DeleteRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.DeleteRibbonResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.DeleteRibbonResponse\n> {\n  const payload = { ribbonId: ':ribbonId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.deleteRibbon(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v3/ribbons/{ribbonId}',\n    pathParams: { ribbonId: 'ribbonId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryRibbons(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.QueryRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.QueryRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.QueryRibbonsResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.QueryRibbonsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.queryRibbons(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/ribbons/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkCreateRibbons(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkCreateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkCreateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkCreateRibbonsResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkCreateRibbonsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.bulkCreateRibbons(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/ribbons/create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateRibbons(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkUpdateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkUpdateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkUpdateRibbonsResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkUpdateRibbonsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.bulkUpdateRibbons(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/ribbons/update',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getOrCreateRibbon(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.GetOrCreateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.GetOrCreateRibbonRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.GetOrCreateRibbonResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.GetOrCreateRibbonResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.getOrCreateRibbon(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/ribbons/get-or-create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkGetOrCreateRibbons(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkGetOrCreateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkGetOrCreateRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkGetOrCreateRibbonsResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkGetOrCreateRibbonsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.bulkGetOrCreateRibbons(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/ribbons/get-or-create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDeleteRibbons(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkDeleteRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkDeleteRibbonsRequest,\n  ambassadorWixStoresCatalogV3RibbonUniversalTypes.BulkDeleteRibbonsResponse,\n  ambassadorWixStoresCatalogV3RibbonTypes.BulkDeleteRibbonsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Ribbon.bulkDeleteRibbons(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/ribbons/delete',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["payload","createRibbon","getRibbon","updateRibbon","deleteRibbon","queryRibbons","bulkCreateRibbons","bulkUpdateRibbons","getOrCreateRibbon","bulkGetOrCreateRibbons","bulkDeleteRibbons"]}