// src/stores-catalog-v3-ribbon-ribbons-v-3.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixStoresCatalogRibbonV3RibbonServiceUrl(opts) {
  const domainToMappings = {
    "manage._base_domain_": [
      {
        srcPath: "/ribbon",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/ribbons",
        destPath: "/v3/ribbons"
      },
      {
        srcPath: "/stores/v3/bulk/ribbons",
        destPath: "/v3/bulk/ribbons"
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/ribbon",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_ribbons-v-3";
function createRibbon(payload) {
  function __createRibbon({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "ribbon.createdDate" }, { path: "ribbon.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.CreateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createRibbon;
}
function getRibbon(payload) {
  function __getRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "GET",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.GetRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbonId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getRibbon;
}
function updateRibbon(payload) {
  function __updateRibbon({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "ribbon.createdDate" }, { path: "ribbon.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "PATCH",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.UpdateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbon.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateRibbon;
}
function deleteRibbon(payload) {
  function __deleteRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "DELETE",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.DeleteRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/{ribbonId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteRibbon;
}
function queryRibbons(payload) {
  function __queryRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.QueryRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbons.createdDate" },
            { path: "ribbons.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryRibbons;
}
function bulkCreateRibbons(payload) {
  function __bulkCreateRibbons({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "ribbons.createdDate" },
          { path: "ribbons.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkCreateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateRibbons;
}
function bulkUpdateRibbons(payload) {
  function __bulkUpdateRibbons({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "ribbons.fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "ribbons.ribbon.createdDate" },
          { path: "ribbons.ribbon.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkUpdateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateRibbons;
}
function getOrCreateRibbon(payload) {
  function __getOrCreateRibbon({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.GetOrCreateRibbon",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/ribbons/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "ribbon.createdDate" },
            { path: "ribbon.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getOrCreateRibbon;
}
function bulkGetOrCreateRibbons(payload) {
  function __bulkGetOrCreateRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkGetOrCreateRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkGetOrCreateRibbons;
}
function bulkDeleteRibbons(payload) {
  function __bulkDeleteRibbons({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.ribbon",
      method: "POST",
      methodFqn: "wix.stores.catalog.ribbon.v3.RibbonService.BulkDeleteRibbons",
      packageName: PACKAGE_NAME,
      url: resolveWixStoresCatalogRibbonV3RibbonServiceUrl({
        protoPath: "/v3/bulk/ribbons/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteRibbons;
}

// src/stores-catalog-v3-ribbon-ribbons-v-3.meta.ts
function createRibbon2() {
  const payload = {};
  const getRequestOptions = createRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getRibbon2() {
  const payload = { ribbonId: ":ribbonId" };
  const getRequestOptions = getRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/ribbons/{ribbonId}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateRibbon2() {
  const payload = { ribbon: { id: ":ribbonId" } };
  const getRequestOptions = updateRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/ribbons/{ribbon.id}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteRibbon2() {
  const payload = { ribbonId: ":ribbonId" };
  const getRequestOptions = deleteRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/ribbons/{ribbonId}",
    pathParams: { ribbonId: "ribbonId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryRibbons2() {
  const payload = {};
  const getRequestOptions = queryRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkCreateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkUpdateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrCreateRibbon2() {
  const payload = {};
  const getRequestOptions = getOrCreateRibbon(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/ribbons/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkGetOrCreateRibbons2() {
  const payload = {};
  const getRequestOptions = bulkGetOrCreateRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteRibbons2() {
  const payload = {};
  const getRequestOptions = bulkDeleteRibbons(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/ribbons/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  bulkCreateRibbons2 as bulkCreateRibbons,
  bulkDeleteRibbons2 as bulkDeleteRibbons,
  bulkGetOrCreateRibbons2 as bulkGetOrCreateRibbons,
  bulkUpdateRibbons2 as bulkUpdateRibbons,
  createRibbon2 as createRibbon,
  deleteRibbon2 as deleteRibbon,
  getOrCreateRibbon2 as getOrCreateRibbon,
  getRibbon2 as getRibbon,
  queryRibbons2 as queryRibbons,
  updateRibbon2 as updateRibbon
};
//# sourceMappingURL=meta.mjs.map