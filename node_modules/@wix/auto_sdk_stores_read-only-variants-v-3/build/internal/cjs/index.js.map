{"version":3,"sources":["../../../index.ts","../../../src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.ts","../../../src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.http.ts","../../../src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.public.ts","../../../src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.context.ts"],"sourcesContent":["export * from './src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.context.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport {\n  HttpClient,\n  HttpResponse,\n  Search as SearchSdkType,\n  NonNullablePaths,\n  SearchSpec,\n} from '@wix/sdk-types';\nimport * as ambassadorWixStoresCatalogV3ReadOnlyVariant from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.http.js';\n// @ts-ignore\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTVideoV2ToSDKVideoV2 } from '@wix/sdk-runtime/transformations/video-v2';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\nexport interface ReadOnlyVariant extends ReadOnlyVariantTypedPropertiesOneOf {\n  /** Physical properties. Must be passed when `productType: PHYSICAL` */\n  physicalProperties?: V3VariantPhysicalProperties;\n  /** Digital properties. Must be passed when `productType: DIGITAL` */\n  digitalProperties?: V3VariantDigitalProperties;\n  /**\n   * Variant ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string;\n  /**\n   * Whether the variant is visible to site visitors.\n   *\n   * Default: `true`\n   * @readonly\n   */\n  visible?: boolean | null;\n  /**\n   * Variant SKU (stock keeping unit).\n   * @minLength 1\n   * @maxLength 40\n   * @readonly\n   */\n  sku?: string | null;\n  /**\n   * Variant barcode.\n   * @minLength 1\n   * @maxLength 40\n   * @readonly\n   */\n  barcode?: string | null;\n  /**\n   * List of option choices\n   * In case this list is empty, this is the default variant of an unmanaged product. - check if bridges need more than ids\n   * @maxSize 6\n   * @readonly\n   */\n  optionChoices?: V3OptionChoice[];\n  /**\n   * Variant price.\n   * @readonly\n   */\n  price?: V3PriceInfo;\n  /**\n   * Variant revenue details.\n   *\n   * > **Note:** Returned only when the following conditions are met:\n   * > + You pass `\"MERCHANT_DATA\"` to the `fields` array in Products API requests.\n   * > + Your app has the required `SCOPE.STORES.PRODUCT_READ_ADMIN` permission scope.\n   * @readonly\n   */\n  revenueDetails?: V3RevenueDetails;\n  /**\n   * Variant media.\n   * @readonly\n   */\n  media?: V3ProductMedia;\n  /**\n   * Subscription prices calculated by applying subscription discount to the variant `price.actualPrice`.\n   * > **Note:** Returned only when you pass `\"SUBSCRIPTION_PRICES_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  subscriptionPricesInfo?: V3SubscriptionPricesInfo;\n  /**\n   * Variant inventory status.\n   * @readonly\n   */\n  inventoryStatus?: V3InventoryStatus;\n  /**\n   * Product fields\n   * @readonly\n   */\n  productData?: ProductFields;\n}\n\n/** @oneof */\nexport interface ReadOnlyVariantTypedPropertiesOneOf {\n  /** Physical properties. Must be passed when `productType: PHYSICAL` */\n  physicalProperties?: V3VariantPhysicalProperties;\n  /** Digital properties. Must be passed when `productType: DIGITAL` */\n  digitalProperties?: V3VariantDigitalProperties;\n}\n\nexport interface V3OptionChoice {\n  /**\n   * Option and choice IDs.\n   * @readonly\n   */\n  optionChoiceIds?: V3OptionChoiceIds;\n  /**\n   * Option and choice names.\n   * @readonly\n   */\n  optionChoiceNames?: V3OptionChoiceNames;\n}\n\nexport interface V3OptionChoiceIds {\n  /**\n   * Option ID.\n   * @minLength 1\n   * @maxLength 36\n   * @readonly\n   */\n  optionId?: string;\n  /**\n   * Choice ID.\n   * @format GUID\n   * @readonly\n   */\n  choiceId?: string;\n}\n\nexport interface V3OptionChoiceNames {\n  /**\n   * Option name.\n   * @minLength 1\n   * @maxLength 50\n   * @readonly\n   */\n  optionName?: string;\n  /**\n   * Choice name.\n   * @minLength 1\n   * @maxLength 50\n   * @readonly\n   */\n  choiceName?: string;\n  /**\n   * Render type.\n   * @readonly\n   * @maxLength 50\n   */\n  renderType?: string;\n}\n\nexport interface V3PriceInfo {\n  /**\n   * Variant price.\n   * @readonly\n   */\n  actualPrice?: V3FixedMonetaryAmount;\n  /**\n   * The compare-at-price represents the original price of a product before any discount.\n   * @readonly\n   */\n  compareAtPrice?: V3FixedMonetaryAmount;\n}\n\nexport interface V3FixedMonetaryAmount {\n  /**\n   * Monetary amount. For example, `\"3.99\"`, or `\"-4.99\"` for a negative amount.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   * @readonly\n   */\n  amount?: string;\n  /**\n   * Formatted monetary amount. For example, `\"$3.99\"`.\n   * @readonly\n   * @maxLength 20\n   */\n  formattedAmount?: string | null;\n}\n\nexport interface V3RevenueDetails {\n  /**\n   * Item cost.\n   * @readonly\n   */\n  cost?: V3FixedMonetaryAmount;\n  /**\n   * Profit. Calculated by reducing `cost` from `discountedPrice`.\n   * @readonly\n   */\n  profit?: V3FixedMonetaryAmount;\n  /**\n   * Profit Margin. Calculated by dividing `profit` by `discountedPrice`.\n   * The result is rounded to 4 decimal places.\n   * @readonly\n   * @max 1\n   */\n  profitMargin?: number;\n}\n\nexport interface V3ProductMedia\n  extends V3ProductMediaSetByOneOf,\n    V3ProductMediaMediaOneOf {\n  /**\n   * ID of existing media from Wix Media Manager.\n   * @minLength 1\n   * @maxLength 200\n   * @readonly\n   */\n  _id?: string;\n  /**\n   * Media URL.\n   * @format WEB_URL\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Product image.\n   * @readonly\n   */\n  image?: string;\n  /**\n   * Product video.\n   * @readonly\n   */\n  video?: string;\n  /**\n   * Image alt text.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   */\n  altText?: string | null;\n  /**\n   * Media display name.\n   * Allows to override the default media name. Can be passed only when `setBy: url`.\n   * @maxLength 80\n   * @readonly\n   */\n  displayName?: string | null;\n  /**\n   * Media type.\n   * @readonly\n   */\n  mediaType?: ProductMediaMediaTypeWithLiterals;\n  /**\n   * Media thumbnail.\n   * @readonly\n   */\n  thumbnail?: V3Thumbnail;\n  /**\n   * ID used to upload media to Wix Media Manager.\n   * @readonly\n   * @format GUID\n   */\n  uploadId?: string;\n}\n\n/** @oneof */\nexport interface V3ProductMediaSetByOneOf {\n  /**\n   * ID of existing media from Wix Media Manager.\n   * @minLength 1\n   * @maxLength 200\n   * @readonly\n   */\n  _id?: string;\n  /**\n   * Media URL.\n   * @format WEB_URL\n   * @readonly\n   */\n  url?: string;\n}\n\n/** @oneof */\nexport interface V3ProductMediaMediaOneOf {\n  /**\n   * Product image.\n   * @readonly\n   */\n  image?: string;\n  /**\n   * Product video.\n   * @readonly\n   */\n  video?: string;\n}\n\nexport interface CommonVideoResolution {\n  /**\n   * Video URL.\n   * @format WEB_URL\n   */\n  url?: string;\n  /** Video height. */\n  height?: number;\n  /** Video width. */\n  width?: number;\n  /**\n   * Video format for example, mp4, hls.\n   * @maxLength 200\n   */\n  format?: string;\n}\n\nexport enum ProductMediaMediaType {\n  UNKNOWN_MEDIA_TYPE = 'UNKNOWN_MEDIA_TYPE',\n  /** Image media type. */\n  IMAGE = 'IMAGE',\n  /** Video media type. */\n  VIDEO = 'VIDEO',\n}\n\n/** @enumType */\nexport type ProductMediaMediaTypeWithLiterals =\n  | ProductMediaMediaType\n  | 'UNKNOWN_MEDIA_TYPE'\n  | 'IMAGE'\n  | 'VIDEO';\n\nexport interface V3Thumbnail {\n  /**\n   * Thumbnail url.\n   * @format WEB_URL\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Thumbnail height.\n   * @readonly\n   */\n  height?: number;\n  /**\n   * Thumbnail width.\n   * @readonly\n   */\n  width?: number;\n  /**\n   * Thumbnail alt text.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   */\n  altText?: string | null;\n}\n\nexport interface V3VariantPhysicalProperties {\n  /**\n   * Variant shipping weight.\n   * @max 999999999.99\n   * @readonly\n   */\n  weight?: number | null;\n  /**\n   * Price per unit info, in order to show price per unit on the product page.\n   * For example if one sells cheese and defines 100g here then we know that buying this variant buyer receives 100g of cheese.\n   * But on product page price will be displayed for units defined on product level. See `pricePerUnit.value` to understand how it's calculated.\n   * @readonly\n   */\n  pricePerUnit?: V3PricePerUnit;\n}\n\nexport interface V3PricePerUnit {\n  /**\n   * Price per unit data for this variant.\n   * `measurementUnit` value must correspond to the measurement unit set on the product.\n   * @readonly\n   */\n  settings?: V3PricePerUnitSettings;\n  /**\n   * Calculated value of price per unit. Takes into account `pricePerUnit` settings of parent product, of this variant, and discounted price of variant.\n   * For example if discounted price is 2$, product's price per unit setting is 1 Kg, variant price per unit setting is 0.5 Kg then this value is 4$ (means variant weight is 0.5 Kg and it costs 2$ but we want to show price per 1 Kg so we show 4$).\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  value?: string;\n  /**\n   * Price per unit description.\n   * @readonly\n   * @maxLength 100\n   */\n  description?: string | null;\n}\n\nexport interface V3PricePerUnitSettings {\n  /**\n   * Quantity.\n   * For example, to define price per per 100 grams, set this field to `100`.\n   * @min 0.01\n   * @max 999999999.99\n   * @readonly\n   */\n  quantity?: number;\n  /**\n   * Measurement unit.\n   * For example, to define price per 100 grams, set this field to \"G\".\n   * @readonly\n   */\n  measurementUnit?: MeasurementUnitWithLiterals;\n}\n\nexport enum MeasurementUnit {\n  UNSPECIFIED = 'UNSPECIFIED',\n  ML = 'ML',\n  CL = 'CL',\n  L = 'L',\n  CBM = 'CBM',\n  MG = 'MG',\n  G = 'G',\n  KG = 'KG',\n  MM = 'MM',\n  CM = 'CM',\n  M = 'M',\n  SQM = 'SQM',\n  OZ = 'OZ',\n  LB = 'LB',\n  FLOZ = 'FLOZ',\n  PT = 'PT',\n  QT = 'QT',\n  GAL = 'GAL',\n  IN = 'IN',\n  FT = 'FT',\n  YD = 'YD',\n  SQFT = 'SQFT',\n}\n\n/** @enumType */\nexport type MeasurementUnitWithLiterals =\n  | MeasurementUnit\n  | 'UNSPECIFIED'\n  | 'ML'\n  | 'CL'\n  | 'L'\n  | 'CBM'\n  | 'MG'\n  | 'G'\n  | 'KG'\n  | 'MM'\n  | 'CM'\n  | 'M'\n  | 'SQM'\n  | 'OZ'\n  | 'LB'\n  | 'FLOZ'\n  | 'PT'\n  | 'QT'\n  | 'GAL'\n  | 'IN'\n  | 'FT'\n  | 'YD'\n  | 'SQFT';\n\nexport interface V3VariantDigitalProperties {\n  /**\n   * Digital file which will be downloaded by customer after successful purchase.\n   * @readonly\n   */\n  digitalFile?: V3SecuredMedia;\n}\n\nexport interface V3SecuredMedia {\n  /**\n   * Media ID in media manager.\n   * @minLength 1\n   * @maxLength 100\n   * @readonly\n   */\n  _id?: string;\n  /**\n   * Original file name.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   */\n  fileName?: string;\n  /**\n   * Original file size.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   * @format DECIMAL_VALUE\n   * @decimalValue options { maxScale:0 }\n   */\n  fileSize?: string | null;\n  /**\n   * File type.\n   * @readonly\n   */\n  fileType?: SecuredMediaFileTypeWithLiterals;\n}\n\nexport enum SecuredMediaFileType {\n  /** Unspecified file type. */\n  UNSPECIFIED = 'UNSPECIFIED',\n  /** Secure picture file. */\n  SECURE_PICTURE = 'SECURE_PICTURE',\n  /** Secure video file. */\n  SECURE_VIDEO = 'SECURE_VIDEO',\n  /** Secure document file. */\n  SECURE_DOCUMENT = 'SECURE_DOCUMENT',\n  /** Secure music file. */\n  SECURE_MUSIC = 'SECURE_MUSIC',\n  /** Secure archive file. */\n  SECURE_ARCHIVE = 'SECURE_ARCHIVE',\n}\n\n/** @enumType */\nexport type SecuredMediaFileTypeWithLiterals =\n  | SecuredMediaFileType\n  | 'UNSPECIFIED'\n  | 'SECURE_PICTURE'\n  | 'SECURE_VIDEO'\n  | 'SECURE_DOCUMENT'\n  | 'SECURE_MUSIC'\n  | 'SECURE_ARCHIVE';\n\nexport interface V3SubscriptionPricesInfo {\n  /**\n   * Subscription prices.\n   * @maxSize 6\n   * @readonly\n   */\n  subscriptionPrices?: V3SubscriptionPrice[];\n}\n\nexport interface V3SubscriptionPrice {\n  /**\n   * Subscription ID.\n   * @format GUID\n   * @readonly\n   */\n  subscriptionId?: string;\n  /**\n   * Subscription price calculated by applying subscription discount to the variant `price.salePrice`\n   * @readonly\n   */\n  price?: V3FixedMonetaryAmount;\n  /**\n   * Price per unit info.\n   * @readonly\n   */\n  pricePerUnit?: V3SubscriptionPricePerUnit;\n}\n\nexport interface V3SubscriptionPricePerUnit {\n  /**\n   * Calculated value of price per unit. Takes into account `pricePerUnit` settings of parent product, `pricePerUnit` settings of this variant, and the variant subscription price.\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  value?: string;\n  /**\n   * Price per unit description.\n   * @readonly\n   * @maxLength 20\n   */\n  description?: string | null;\n}\n\nexport interface V3InventoryStatus {\n  /**\n   * Whether the variant is in stock.\n   * @readonly\n   */\n  inStock?: boolean;\n  /**\n   * Whether preorder is enabled for this variant.\n   * @readonly\n   */\n  preorderEnabled?: boolean;\n}\n\nexport interface ProductFields extends ProductFieldsTypedPropertiesOneOf {\n  /**\n   * Physical properties.\n   *\n   * Required when `productType: PHYSICAL`.\n   */\n  physicalProperties?: V3PhysicalProperties;\n  /**\n   * product id\n   * @minLength 1\n   * @maxLength 36\n   * @readonly\n   */\n  productId?: string;\n  /**\n   * Product name.\n   * @minLength 1\n   * @maxLength 80\n   * @readonly\n   */\n  name?: string | null;\n  /**\n   * product type\n   * @readonly\n   */\n  productType?: V3ProductTypeWithLiterals;\n  /**\n   * Product slug.\n   * @format URL_SLUG\n   * @readonly\n   */\n  slug?: string | null;\n  /**\n   * Whether the product is visible to site visitors on the site.\n   *\n   * Default: `true`\n   * @readonly\n   */\n  visible?: boolean | null;\n  /**\n   * Whether the product is visible in POS (point of sale).\n   *\n   * Default: `true`\n   * > **Note:** Always `false` for `productType: DIGITAL`.\n   * @readonly\n   */\n  visibleInPos?: boolean | null;\n  /**\n   * Main category ID.\n   * @format GUID\n   * @readonly\n   */\n  mainCategoryId?: string | null;\n  /**\n   * Currency used for the pricing of this product, in [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217#List_of_ISO_4217_currency_codes) format.\n   *\n   * Defaults to the currency defined in the site settings, unless specified in `x-wix-currency` header.\n   * > **Note:** Returned only when you pass `\"CURRENCY\"` to the `fields` array in Products API requests.\n   * @format CURRENCY\n   * @readonly\n   */\n  currency?: string | null;\n  /**\n   * Product entity revision.\n   * @readonly\n   */\n  revision?: string | null;\n}\n\n/** @oneof */\nexport interface ProductFieldsTypedPropertiesOneOf {\n  /**\n   * Physical properties.\n   *\n   * Required when `productType: PHYSICAL`.\n   */\n  physicalProperties?: V3PhysicalProperties;\n}\n\nexport enum V3ProductType {\n  /** Not implemented. */\n  UNKNOWN_PRODUCT_TYPE = 'UNKNOWN_PRODUCT_TYPE',\n  /** Physical product. */\n  PHYSICAL = 'PHYSICAL',\n  /** Digital product. */\n  DIGITAL = 'DIGITAL',\n}\n\n/** @enumType */\nexport type V3ProductTypeWithLiterals =\n  | V3ProductType\n  | 'UNKNOWN_PRODUCT_TYPE'\n  | 'PHYSICAL'\n  | 'DIGITAL';\n\nexport interface V3PhysicalProperties {\n  /**\n   * Weight measurement unit.\n   * > **Note:** Returned only when you pass `\"WEIGHT_MEASUREMENT_UNIT_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  weightMeasurementUnitInfo?: V3WeightMeasurementUnitInfo;\n}\n\nexport interface V3WeightMeasurementUnitInfo {\n  /**\n   * Weight measurement unit.\n   * @readonly\n   */\n  weightMeasurementUnit?: WeightUnitWithLiterals;\n}\n\nexport enum WeightUnit {\n  /** Weight unit can't be classified due to an error. */\n  UNSPECIFIED_WEIGHT_UNIT = 'UNSPECIFIED_WEIGHT_UNIT',\n  /** Kilograms. */\n  KG = 'KG',\n  /** Pounds. */\n  LB = 'LB',\n}\n\n/** @enumType */\nexport type WeightUnitWithLiterals =\n  | WeightUnit\n  | 'UNSPECIFIED_WEIGHT_UNIT'\n  | 'KG'\n  | 'LB';\n\nexport interface InternalMetadata {}\n\nexport enum InternalRowState {\n  /** Not implemented. */\n  UNKNOWN_ROW_STATE = 'UNKNOWN_ROW_STATE',\n  /** Variant is ready to be read. */\n  READY = 'READY',\n  /** Variant is being processed. */\n  IN_PROCESS = 'IN_PROCESS',\n  /** Variant is soft deleted. */\n  SOFT_DELETED = 'SOFT_DELETED',\n  /** Variant is permanently deleted. */\n  PERMANENTLY_DELETED = 'PERMANENTLY_DELETED',\n}\n\n/** @enumType */\nexport type InternalRowStateWithLiterals =\n  | InternalRowState\n  | 'UNKNOWN_ROW_STATE'\n  | 'READY'\n  | 'IN_PROCESS'\n  | 'SOFT_DELETED'\n  | 'PERMANENTLY_DELETED';\n\nexport interface QueryVariantsRequest {\n  /** WQL expression. */\n  query?: CursorQuery;\n  /**\n   * A list of requested fields to be included in the response.\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface CursorQuery extends CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   * @maxSize 5\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 1000\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport enum RequestedFields {\n  /** Not implemented. */\n  UNKNOWN_REQUESTED_FIELD = 'UNKNOWN_REQUESTED_FIELD',\n  CURRENCY = 'CURRENCY',\n  /** You can request merchant data only if you have the `SCOPE.STORES.PRODUCT_READ_ADMIN` permission scope. */\n  MERCHANT_DATA = 'MERCHANT_DATA',\n  SUBSCRIPTION_PRICES_INFO = 'SUBSCRIPTION_PRICES_INFO',\n  WEIGHT_MEASUREMENT_UNIT_INFO = 'WEIGHT_MEASUREMENT_UNIT_INFO',\n}\n\n/** @enumType */\nexport type RequestedFieldsWithLiterals =\n  | RequestedFields\n  | 'UNKNOWN_REQUESTED_FIELD'\n  | 'CURRENCY'\n  | 'MERCHANT_DATA'\n  | 'SUBSCRIPTION_PRICES_INFO'\n  | 'WEIGHT_MEASUREMENT_UNIT_INFO';\n\nexport interface QueryVariantsResponse {\n  /** List of ReadOnlyVariants. */\n  variants?: ReadOnlyVariant[];\n  /** Paging metadata */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface SearchVariantsRequest {\n  /** WQL expression */\n  search?: CursorSearch;\n  /**\n   * A list of requested fields to be included in the response.\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface CursorSearch extends CursorSearchPagingMethodOneOf {\n  /**\n   * Cursor pointing to page of results.\n   * When requesting 'cursor_paging.cursor', no `filter`, `sort` or `search` can be provided.\n   */\n  cursorPaging?: CursorPaging;\n  /** A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf) */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}]\n   * @maxSize 10\n   */\n  sort?: Sorting[];\n  /**\n   * Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition.\n   * @maxSize 10\n   */\n  aggregations?: Aggregation[];\n  /** Free text to match in searchable fields */\n  search?: SearchDetails;\n  /**\n   * UTC offset or IANA time zone. Valid values are\n   * ISO 8601 UTC offsets, such as +02:00 or -06:00,\n   * and IANA time zone IDs, such as Europe/Rome\n   *\n   * Affects all filters and aggregations returned values.\n   * You may override this behavior in a specific filter by providing\n   * timestamps including time zone. e.g. `\"2023-12-20T10:52:34.795Z\"`\n   * @maxLength 50\n   */\n  timeZone?: string | null;\n}\n\n/** @oneof */\nexport interface CursorSearchPagingMethodOneOf {\n  /**\n   * Cursor pointing to page of results.\n   * When requesting 'cursor_paging.cursor', no `filter`, `sort` or `search` can be provided.\n   */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Aggregation extends AggregationKindOneOf {\n  /** Value aggregation */\n  value?: ValueAggregation;\n  /** Range aggregation */\n  range?: RangeAggregation;\n  /** Scalar aggregation */\n  scalar?: ScalarAggregation;\n  /** Date histogram aggregation */\n  dateHistogram?: DateHistogramAggregation;\n  /** Nested aggregation */\n  nested?: NestedAggregation;\n  /**\n   * User-defined name of aggregation, should be unique, will appear in aggregation results\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Type of aggregation, client must provide matching aggregation field below */\n  type?: AggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by, use dot notation to specify json path\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface AggregationKindOneOf {\n  /** Value aggregation */\n  value?: ValueAggregation;\n  /** Range aggregation */\n  range?: RangeAggregation;\n  /** Scalar aggregation */\n  scalar?: ScalarAggregation;\n  /** Date histogram aggregation */\n  dateHistogram?: DateHistogramAggregation;\n  /** Nested aggregation */\n  nested?: NestedAggregation;\n}\n\nexport interface RangeBucket {\n  /** Inclusive lower bound of the range. Required if to is not given */\n  from?: number | null;\n  /** Exclusive upper bound of the range. Required if from is not given */\n  to?: number | null;\n}\n\nexport enum SortType {\n  /** Should sort by number of matches */\n  COUNT = 'COUNT',\n  /** Should sort by value of the field alphabetically */\n  VALUE = 'VALUE',\n}\n\n/** @enumType */\nexport type SortTypeWithLiterals = SortType | 'COUNT' | 'VALUE';\n\nexport enum SortDirection {\n  /** Should sort in descending order */\n  DESC = 'DESC',\n  /** Should sort in ascending order */\n  ASC = 'ASC',\n}\n\n/** @enumType */\nexport type SortDirectionWithLiterals = SortDirection | 'DESC' | 'ASC';\n\nexport enum MissingValues {\n  /** Should missing values be excluded from the aggregation results */\n  EXCLUDE = 'EXCLUDE',\n  /** Should missing values be included in the aggregation results */\n  INCLUDE = 'INCLUDE',\n}\n\n/** @enumType */\nexport type MissingValuesWithLiterals = MissingValues | 'EXCLUDE' | 'INCLUDE';\n\nexport interface IncludeMissingValuesOptions {\n  /**\n   * Can specify custom bucket name. Defaults are [string -> \"N/A\"], [int -> \"0\"], [bool -> \"false\"] ...\n   * @maxLength 20\n   */\n  addToBucket?: string;\n}\n\nexport enum ScalarType {\n  UNKNOWN_SCALAR_TYPE = 'UNKNOWN_SCALAR_TYPE',\n  /** Count of distinct values */\n  COUNT_DISTINCT = 'COUNT_DISTINCT',\n  /** Minimum value */\n  MIN = 'MIN',\n  /** Maximum value */\n  MAX = 'MAX',\n}\n\n/** @enumType */\nexport type ScalarTypeWithLiterals =\n  | ScalarType\n  | 'UNKNOWN_SCALAR_TYPE'\n  | 'COUNT_DISTINCT'\n  | 'MIN'\n  | 'MAX';\n\nexport interface ValueAggregation extends ValueAggregationOptionsOneOf {\n  /** Options for including missing values */\n  includeOptions?: IncludeMissingValuesOptions;\n  /** Should sort by number of matches or value of the field */\n  sortType?: SortTypeWithLiterals;\n  /** Should sort in ascending or descending order */\n  sortDirection?: SortDirectionWithLiterals;\n  /** How many aggregations would you like to return? Can be between 1 and 250. 10 is the default. */\n  limit?: number | null;\n  /** Should missing values be included or excluded from the aggregation results. Default is EXCLUDE */\n  missingValues?: MissingValuesWithLiterals;\n}\n\n/** @oneof */\nexport interface ValueAggregationOptionsOneOf {\n  /** Options for including missing values */\n  includeOptions?: IncludeMissingValuesOptions;\n}\n\nexport enum NestedAggregationType {\n  UNKNOWN_AGGREGATION_TYPE = 'UNKNOWN_AGGREGATION_TYPE',\n  /** An aggregation where result buckets are dynamically built - one per unique value */\n  VALUE = 'VALUE',\n  /** An aggregation, where user can define set of ranges - each representing a bucket */\n  RANGE = 'RANGE',\n  /** A single-value metric aggregation - e.g. min, max, sum, avg */\n  SCALAR = 'SCALAR',\n  /** An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.) */\n  DATE_HISTOGRAM = 'DATE_HISTOGRAM',\n}\n\n/** @enumType */\nexport type NestedAggregationTypeWithLiterals =\n  | NestedAggregationType\n  | 'UNKNOWN_AGGREGATION_TYPE'\n  | 'VALUE'\n  | 'RANGE'\n  | 'SCALAR'\n  | 'DATE_HISTOGRAM';\n\nexport interface RangeAggregation {\n  /**\n   * List of range buckets, where during aggregation each entity will be placed in the first bucket where its value falls into based on provided range bounds\n   * @maxSize 50\n   */\n  buckets?: RangeBucket[];\n}\n\nexport interface ScalarAggregation {\n  /** Define the operator for the scalar aggregation */\n  type?: ScalarTypeWithLiterals;\n}\n\nexport interface DateHistogramAggregation {\n  /** Interval for date histogram aggregation */\n  interval?: IntervalWithLiterals;\n}\n\nexport enum Interval {\n  UNKNOWN_INTERVAL = 'UNKNOWN_INTERVAL',\n  /** Yearly interval */\n  YEAR = 'YEAR',\n  /** Monthly interval */\n  MONTH = 'MONTH',\n  /** Weekly interval */\n  WEEK = 'WEEK',\n  /** Daily interval */\n  DAY = 'DAY',\n  /** Hourly interval */\n  HOUR = 'HOUR',\n  /** Minute interval */\n  MINUTE = 'MINUTE',\n  /** Second interval */\n  SECOND = 'SECOND',\n}\n\n/** @enumType */\nexport type IntervalWithLiterals =\n  | Interval\n  | 'UNKNOWN_INTERVAL'\n  | 'YEAR'\n  | 'MONTH'\n  | 'WEEK'\n  | 'DAY'\n  | 'HOUR'\n  | 'MINUTE'\n  | 'SECOND';\n\nexport interface NestedAggregationItem extends NestedAggregationItemKindOneOf {\n  /** Value aggregation */\n  value?: ValueAggregation;\n  /** Range aggregation */\n  range?: RangeAggregation;\n  /** Scalar aggregation */\n  scalar?: ScalarAggregation;\n  /** Date histogram aggregation */\n  dateHistogram?: DateHistogramAggregation;\n  /**\n   * User-defined name of aggregation, should be unique, will appear in aggregation results\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Type of aggregation, client must provide matching aggregation field below */\n  type?: NestedAggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by, use dont notation to specify json path\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface NestedAggregationItemKindOneOf {\n  /** Value aggregation */\n  value?: ValueAggregation;\n  /** Range aggregation */\n  range?: RangeAggregation;\n  /** Scalar aggregation */\n  scalar?: ScalarAggregation;\n  /** Date histogram aggregation */\n  dateHistogram?: DateHistogramAggregation;\n}\n\nexport enum AggregationType {\n  UNKNOWN_AGGREGATION_TYPE = 'UNKNOWN_AGGREGATION_TYPE',\n  /** An aggregation where result buckets are dynamically built - one per unique value */\n  VALUE = 'VALUE',\n  /** An aggregation, where user can define set of ranges - each representing a bucket */\n  RANGE = 'RANGE',\n  /** A single-value metric aggregation - e.g. min, max, sum, avg */\n  SCALAR = 'SCALAR',\n  /** An aggregation, where result buckets are dynamically built - one per time interval (hour, day, week, etc.) */\n  DATE_HISTOGRAM = 'DATE_HISTOGRAM',\n  /** Multi-level aggregation, where each next aggregation is nested within previous one */\n  NESTED = 'NESTED',\n}\n\n/** @enumType */\nexport type AggregationTypeWithLiterals =\n  | AggregationType\n  | 'UNKNOWN_AGGREGATION_TYPE'\n  | 'VALUE'\n  | 'RANGE'\n  | 'SCALAR'\n  | 'DATE_HISTOGRAM'\n  | 'NESTED';\n\n/** Nested aggregation expressed through a list of aggregation where each next aggregation is nested within previous one */\nexport interface NestedAggregation {\n  /**\n   * Flattened list of aggregations, where each next aggregation is nested within previous one\n   * @minSize 2\n   * @maxSize 3\n   */\n  nestedAggregations?: NestedAggregationItem[];\n}\n\nexport interface SearchDetails {\n  /** Defines how separate search terms in `expression` are combined */\n  mode?: ModeWithLiterals;\n  /**\n   * Search term or expression\n   * @maxLength 100\n   */\n  expression?: string | null;\n  /**\n   * Fields to search in. If empty - will search in all searchable fields. Use dot notation to specify json path\n   * @maxLength 200\n   * @maxSize 20\n   */\n  fields?: string[];\n  /** Flag if should use auto fuzzy search (allowing typos by a managed proximity algorithm) */\n  fuzzy?: boolean;\n}\n\nexport enum Mode {\n  /** Any of the search terms must be present */\n  OR = 'OR',\n  /** All search terms must be present */\n  AND = 'AND',\n}\n\n/** @enumType */\nexport type ModeWithLiterals = Mode | 'OR' | 'AND';\n\nexport interface SearchVariantsResponse {\n  /** Variants which satisfy the provided query. */\n  variants?: ReadOnlyVariant[];\n  /** Paging metadata. Contains cursor which can be used in next query. */\n  pagingMetadata?: CursorPagingMetadata;\n  /** Aggregation data. */\n  aggregationData?: AggregationData;\n}\n\nexport interface AggregationData {\n  /**\n   * key = aggregation name (as derived from search request)\n   * @maxSize 10000\n   */\n  results?: AggregationResults[];\n}\n\nexport interface ValueAggregationResult {\n  /**\n   * Value of the field\n   * @maxLength 100\n   */\n  value?: string;\n  /** Count of entities with this value */\n  count?: number;\n}\n\nexport interface RangeAggregationResult {\n  /** Inclusive lower bound of the range */\n  from?: number | null;\n  /** Exclusive upper bound of the range */\n  to?: number | null;\n  /** Count of entities in this range */\n  count?: number;\n}\n\nexport interface NestedAggregationResults\n  extends NestedAggregationResultsResultOneOf {\n  /** Value aggregation results */\n  values?: ValueResults;\n  /** Range aggregation results */\n  ranges?: RangeResults;\n  /** Scalar aggregation results */\n  scalar?: AggregationResultsScalarResult;\n  /**\n   * User-defined name of aggregation, matches the one provided in request\n   * @maxLength 100\n   */\n  name?: string;\n  /** Type of aggregation that matches result */\n  type?: AggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by, matches the one provided in request\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface NestedAggregationResultsResultOneOf {\n  /** Value aggregation results */\n  values?: ValueResults;\n  /** Range aggregation results */\n  ranges?: RangeResults;\n  /** Scalar aggregation results */\n  scalar?: AggregationResultsScalarResult;\n}\n\nexport interface ValueResults {\n  /**\n   * List of value aggregations\n   * @maxSize 250\n   */\n  results?: ValueAggregationResult[];\n}\n\nexport interface RangeResults {\n  /**\n   * List of ranges returned in same order as requested\n   * @maxSize 50\n   */\n  results?: RangeAggregationResult[];\n}\n\nexport interface AggregationResultsScalarResult {\n  /** Type of scalar aggregation */\n  type?: ScalarTypeWithLiterals;\n  /** Value of the scalar aggregation */\n  value?: number;\n}\n\nexport interface NestedValueAggregationResult {\n  /**\n   * Value of the field\n   * @maxLength 1000\n   */\n  value?: string;\n  /** Nested aggregations */\n  nestedResults?: NestedAggregationResults;\n}\n\nexport interface ValueResult {\n  /**\n   * Value of the field\n   * @maxLength 1000\n   */\n  value?: string;\n  /** Count of entities with this value */\n  count?: number | null;\n}\n\nexport interface RangeResult {\n  /** Inclusive lower bound of the range */\n  from?: number | null;\n  /** Exclusive upper bound of the range */\n  to?: number | null;\n  /** Count of entities in this range */\n  count?: number | null;\n}\n\nexport interface ScalarResult {\n  /** Value of the scalar aggregation */\n  value?: number;\n}\n\nexport interface NestedResultValue extends NestedResultValueResultOneOf {\n  /** Value aggregation result */\n  value?: ValueResult;\n  /** Range aggregation result */\n  range?: RangeResult;\n  /** Scalar aggregation result */\n  scalar?: ScalarResult;\n  /** Date histogram aggregation result */\n  dateHistogram?: ValueResult;\n}\n\n/** @oneof */\nexport interface NestedResultValueResultOneOf {\n  /** Value aggregation result */\n  value?: ValueResult;\n  /** Range aggregation result */\n  range?: RangeResult;\n  /** Scalar aggregation result */\n  scalar?: ScalarResult;\n  /** Date histogram aggregation result */\n  dateHistogram?: ValueResult;\n}\n\nexport interface Results {\n  /** List of nested aggregations */\n  results?: Record<string, NestedResultValue>;\n}\n\nexport interface DateHistogramResult {\n  /**\n   * Date in ISO 8601 format\n   * @maxLength 100\n   */\n  value?: string;\n  /** Count of documents in the bucket */\n  count?: number;\n}\n\nexport interface GroupByValueResults {\n  /**\n   * List of value aggregations\n   * @maxSize 1000\n   */\n  results?: NestedValueAggregationResult[];\n}\n\nexport interface DateHistogramResults {\n  /**\n   * List of date histogram aggregations\n   * @maxSize 200\n   */\n  results?: DateHistogramResult[];\n}\n\n/**\n * Results of `NESTED` aggregation type in a flattened form\n * aggregations in resulting array are keyed by requested aggregation `name`.\n */\nexport interface NestedResults {\n  /**\n   * List of nested aggregations\n   * @maxSize 1000\n   */\n  results?: Results[];\n}\n\nexport interface AggregationResults extends AggregationResultsResultOneOf {\n  /** Value aggregation results */\n  values?: ValueResults;\n  /** Range aggregation results */\n  ranges?: RangeResults;\n  /** Scalar aggregation results */\n  scalar?: AggregationResultsScalarResult;\n  /** Group by value aggregation results */\n  groupedByValue?: GroupByValueResults;\n  /** Date histogram aggregation results */\n  dateHistogram?: DateHistogramResults;\n  /** Nested aggregation results */\n  nested?: NestedResults;\n  /**\n   * User-defined name of aggregation as derived from search request\n   * @maxLength 100\n   */\n  name?: string;\n  /** Type of aggregation that must match provided kind as derived from search request */\n  type?: AggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by as derived from search request\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface AggregationResultsResultOneOf {\n  /** Value aggregation results */\n  values?: ValueResults;\n  /** Range aggregation results */\n  ranges?: RangeResults;\n  /** Scalar aggregation results */\n  scalar?: AggregationResultsScalarResult;\n  /** Group by value aggregation results */\n  groupedByValue?: GroupByValueResults;\n  /** Date histogram aggregation results */\n  dateHistogram?: DateHistogramResults;\n  /** Nested aggregation results */\n  nested?: NestedResults;\n}\n\nexport interface DeprecatedSearchVariantsWithOffsetRequest {\n  /** Filter and sort with limit/offset based paging */\n  search?: PlatformOffsetSearch;\n  /**\n   * A list of requested fields to be included in the response.\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface PlatformOffsetSearch\n  extends PlatformOffsetSearchPagingMethodOneOf {\n  /** Pointer to page of results using offset. Can not be used together with 'cursor_paging' */\n  paging?: PlatformPaging;\n  /** A filter object. Learn more about [API query language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language). */\n  filter?: Record<string, any> | null;\n  /** Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}] */\n  sort?: CommonSorting[];\n  /** Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition. */\n  aggregations?: CommonAggregation[];\n  /** free text to match in searchable fields */\n  search?: CommonSearchDetails;\n}\n\n/** @oneof */\nexport interface PlatformOffsetSearchPagingMethodOneOf {\n  /** Pointer to page of results using offset. Can not be used together with 'cursor_paging' */\n  paging?: PlatformPaging;\n}\n\nexport interface CommonSorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: CommonSortOrderWithLiterals;\n}\n\nexport enum CommonSortOrder {\n  ASC = 'ASC',\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type CommonSortOrderWithLiterals = CommonSortOrder | 'ASC' | 'DESC';\n\nexport interface CommonAggregation extends CommonAggregationKindOneOf {\n  /** A value aggregation calculates metrics such as count for specific fields within a dataset, providing insights into the overall distribution and key statistics of those values. For example, use a value aggregation to get the number (count) of products for each price listed in the store. */\n  value?: AggregationValueAggregation;\n  /** A range aggregation calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. For example, use a range aggregation to compare the number of reservations made for parties of 4 or less to the number of reservations made for parties with 5 or more. */\n  range?: AggregationRangeAggregation;\n  /** A scalar aggregation calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  scalar?: AggregationScalarAggregation;\n  /** A date histogram calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.) For example, use a date histogram to find how many reservations have been made at a restaurant each week. */\n  dateHistogram?: AggregationDateHistogramAggregation;\n  /** A nested aggregation is applied within the results of another aggregation. Rather than aggregating directly on the primary dataset, first group data using one aggregation and then apply another aggregation within each group. It allows for more complex analyses where you can summarize data at different levels of detail or hierarchy. For example, to get the number of products that are in stock and out of stock for each price listed, first perform a value aggregation on `discountedPriceNumeric`, and a second value aggregation on `inStock`. */\n  nested?: AggregationNestedAggregation;\n  /**\n   * Aggregation name, returned in `aggregations.results.name`.\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Type of aggregation to perform. Must align with the corresponding aggregation field. */\n  type?: CommonAggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by. Use dot notation to specify a JSON path. For example, `order.address.streetName`.\n   * @maxLength 200\n   */\n  fieldPath?: string;\n  /**\n   * Deprecated. Use `nested` instead.\n   * @deprecated Deprecated. Use `nested` instead.\n   * @replacedBy kind.nested\n   * @targetRemovalDate 2024-03-30\n   */\n  groupBy?: GroupByAggregation;\n}\n\n/** @oneof */\nexport interface CommonAggregationKindOneOf {\n  /** A value aggregation calculates metrics such as count for specific fields within a dataset, providing insights into the overall distribution and key statistics of those values. For example, use a value aggregation to get the number (count) of products for each price listed in the store. */\n  value?: AggregationValueAggregation;\n  /** A range aggregation calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. For example, use a range aggregation to compare the number of reservations made for parties of 4 or less to the number of reservations made for parties with 5 or more. */\n  range?: AggregationRangeAggregation;\n  /** A scalar aggregation calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  scalar?: AggregationScalarAggregation;\n  /** A date histogram calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.) For example, use a date histogram to find how many reservations have been made at a restaurant each week. */\n  dateHistogram?: AggregationDateHistogramAggregation;\n  /** A nested aggregation is applied within the results of another aggregation. Rather than aggregating directly on the primary dataset, first group data using one aggregation and then apply another aggregation within each group. It allows for more complex analyses where you can summarize data at different levels of detail or hierarchy. For example, to get the number of products that are in stock and out of stock for each price listed, first perform a value aggregation on `discountedPriceNumeric`, and a second value aggregation on `inStock`. */\n  nested?: AggregationNestedAggregation;\n}\n\nexport interface RangeAggregationRangeBucket {\n  /** Inclusive lower bound of the range. Required if `to` is not provided. */\n  from?: number | null;\n  /** Exclusive upper bound of the range. Required if `from` is not provided. */\n  to?: number | null;\n}\n\nexport enum ValueAggregationSortType {\n  /** Number of matches in the results. */\n  COUNT = 'COUNT',\n  /** Alphabetically by the field value. */\n  VALUE = 'VALUE',\n}\n\n/** @enumType */\nexport type ValueAggregationSortTypeWithLiterals =\n  | ValueAggregationSortType\n  | 'COUNT'\n  | 'VALUE';\n\nexport enum ValueAggregationSortDirection {\n  /** Descending order. */\n  DESC = 'DESC',\n  /** Ascending order. */\n  ASC = 'ASC',\n}\n\n/** @enumType */\nexport type ValueAggregationSortDirectionWithLiterals =\n  | ValueAggregationSortDirection\n  | 'DESC'\n  | 'ASC';\n\nexport enum ValueAggregationMissingValues {\n  /** Exclude missing values from the aggregation results. */\n  EXCLUDE = 'EXCLUDE',\n  /** Include missing values in the aggregation results. */\n  INCLUDE = 'INCLUDE',\n}\n\n/** @enumType */\nexport type ValueAggregationMissingValuesWithLiterals =\n  | ValueAggregationMissingValues\n  | 'EXCLUDE'\n  | 'INCLUDE';\n\nexport interface ValueAggregationIncludeMissingValuesOptions {\n  /**\n   * Specify a custom name for the bucket containing the missing values. Defaults are `\"N/A\"` for strings, `0` for integers, and `false` for booleans.\n   * @maxLength 20\n   */\n  addToBucket?: string;\n}\n\nexport enum CommonScalarType {\n  UNKNOWN_SCALAR_TYPE = 'UNKNOWN_SCALAR_TYPE',\n  /** Total number of distinct values. */\n  COUNT_DISTINCT = 'COUNT_DISTINCT',\n  /** Minimum value. */\n  MIN = 'MIN',\n  /** Maximum value. */\n  MAX = 'MAX',\n}\n\n/** @enumType */\nexport type CommonScalarTypeWithLiterals =\n  | CommonScalarType\n  | 'UNKNOWN_SCALAR_TYPE'\n  | 'COUNT_DISTINCT'\n  | 'MIN'\n  | 'MAX';\n\nexport interface AggregationValueAggregation\n  extends AggregationValueAggregationOptionsOneOf {\n  /** Options for including missing values in results. */\n  includeOptions?: ValueAggregationIncludeMissingValuesOptions;\n  /** Sort type. */\n  sortType?: ValueAggregationSortTypeWithLiterals;\n  /** Sort direction. */\n  sortDirection?: ValueAggregationSortDirectionWithLiterals;\n  /**\n   * Number of aggregation results to return.\n   * Min: `1`\n   * Max: `250`\n   * Default: `10`\n   */\n  limit?: number | null;\n  /**\n   * Whether to include or exclude missing values in the aggregation results.\n   * Default: `EXCLUDE`.\n   */\n  missingValues?: ValueAggregationMissingValuesWithLiterals;\n}\n\n/** @oneof */\nexport interface AggregationValueAggregationOptionsOneOf {\n  /** Options for including missing values in results. */\n  includeOptions?: ValueAggregationIncludeMissingValuesOptions;\n}\n\nexport enum NestedAggregationNestedAggregationType {\n  UNKNOWN_AGGREGATION_TYPE = 'UNKNOWN_AGGREGATION_TYPE',\n  /** Calculates the distribution of a specific field's values within a dataset, providing insights into the overall distribution and key statistics of those values. */\n  VALUE = 'VALUE',\n  /** Calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. */\n  RANGE = 'RANGE',\n  /** Calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  SCALAR = 'SCALAR',\n  /** Calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.). */\n  DATE_HISTOGRAM = 'DATE_HISTOGRAM',\n}\n\n/** @enumType */\nexport type NestedAggregationNestedAggregationTypeWithLiterals =\n  | NestedAggregationNestedAggregationType\n  | 'UNKNOWN_AGGREGATION_TYPE'\n  | 'VALUE'\n  | 'RANGE'\n  | 'SCALAR'\n  | 'DATE_HISTOGRAM';\n\nexport interface AggregationRangeAggregation {\n  /**\n   * List of range buckets. During aggregation each entity is placed in the first bucket its value falls into, based on the provided range bounds.\n   * @maxSize 50\n   */\n  buckets?: RangeAggregationRangeBucket[];\n}\n\nexport interface AggregationScalarAggregation {\n  /** Operator type for the scalar aggregation. */\n  type?: CommonScalarTypeWithLiterals;\n}\n\nexport interface AggregationDateHistogramAggregation {\n  /** Interval for date histogram aggregation. */\n  interval?: DateHistogramAggregationIntervalWithLiterals;\n}\n\nexport enum DateHistogramAggregationInterval {\n  UNKNOWN_INTERVAL = 'UNKNOWN_INTERVAL',\n  YEAR = 'YEAR',\n  MONTH = 'MONTH',\n  WEEK = 'WEEK',\n  DAY = 'DAY',\n  HOUR = 'HOUR',\n  MINUTE = 'MINUTE',\n  SECOND = 'SECOND',\n}\n\n/** @enumType */\nexport type DateHistogramAggregationIntervalWithLiterals =\n  | DateHistogramAggregationInterval\n  | 'UNKNOWN_INTERVAL'\n  | 'YEAR'\n  | 'MONTH'\n  | 'WEEK'\n  | 'DAY'\n  | 'HOUR'\n  | 'MINUTE'\n  | 'SECOND';\n\nexport interface NestedAggregationNestedAggregationItem\n  extends NestedAggregationNestedAggregationItemKindOneOf {\n  /** A value aggregation calculates the distribution of a specific field's values within a dataset, providing insights into the overall distribution and key statistics of those values. For example, use a value aggregation to get the number (count) of orders for each order status. */\n  value?: AggregationValueAggregation;\n  /** A range aggregation calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. For example, use a range aggregation to compare the number of reservations made for parties of 4 or less to the number of reservations made for parties with 5 or more. If ranges overlap, a record that fits more than one range will only be counted in the first range that matches the criteria. */\n  range?: AggregationRangeAggregation;\n  /** A scalar aggregation calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  scalar?: AggregationScalarAggregation;\n  /** A date histogram calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.). For example, use a date histogram to determine how many reservations have been made at a restaurant each week. If ranges overlap, a record that fits more than one range will only be counted in the first range that matches the criteria. */\n  dateHistogram?: AggregationDateHistogramAggregation;\n  /**\n   * Unique, caller-defined aggregation name, returned in `aggregations.results`.\n   * @maxLength 100\n   */\n  name?: string | null;\n  /** Type of aggregation to perform. The matching aggregation field must be passed. */\n  type?: NestedAggregationNestedAggregationTypeWithLiterals;\n  /**\n   * Field to aggregate by. Use dot notation to specify a JSON path. For example, `order.address.streetName`.\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface NestedAggregationNestedAggregationItemKindOneOf {\n  /** A value aggregation calculates the distribution of a specific field's values within a dataset, providing insights into the overall distribution and key statistics of those values. For example, use a value aggregation to get the number (count) of orders for each order status. */\n  value?: AggregationValueAggregation;\n  /** A range aggregation calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. For example, use a range aggregation to compare the number of reservations made for parties of 4 or less to the number of reservations made for parties with 5 or more. If ranges overlap, a record that fits more than one range will only be counted in the first range that matches the criteria. */\n  range?: AggregationRangeAggregation;\n  /** A scalar aggregation calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  scalar?: AggregationScalarAggregation;\n  /** A date histogram calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.). For example, use a date histogram to determine how many reservations have been made at a restaurant each week. If ranges overlap, a record that fits more than one range will only be counted in the first range that matches the criteria. */\n  dateHistogram?: AggregationDateHistogramAggregation;\n}\n\nexport enum CommonAggregationType {\n  UNKNOWN_AGGREGATION_TYPE = 'UNKNOWN_AGGREGATION_TYPE',\n  /** Calculates the distribution of a specific field's values within a dataset, providing insights into the overall distribution and key statistics of those values. */\n  VALUE = 'VALUE',\n  /** Calculates the count of the values from the specified field in the dataset that fall within the range of each bucket you define. */\n  RANGE = 'RANGE',\n  /** Calculates a single numerical value from a dataset, summarizing the dataset into one key metric: `COUNT_DISTINCT`, `SUM`, `AVG`, `MIN`, or `MAX`. */\n  SCALAR = 'SCALAR',\n  /** Calculates the count of time values from the specified field in the dataset that fall within each time interval you define (hour, day, week, etc.). */\n  DATE_HISTOGRAM = 'DATE_HISTOGRAM',\n  /** Flattened list of aggregations, where each aggregation is nested within previous one. */\n  NESTED = 'NESTED',\n}\n\n/** @enumType */\nexport type CommonAggregationTypeWithLiterals =\n  | CommonAggregationType\n  | 'UNKNOWN_AGGREGATION_TYPE'\n  | 'VALUE'\n  | 'RANGE'\n  | 'SCALAR'\n  | 'DATE_HISTOGRAM'\n  | 'NESTED';\n\n/** Nested aggregation expressed through a list of aggregation where each next aggregation is nested within previous one. */\nexport interface AggregationNestedAggregation {\n  /**\n   * Flattened list of aggregations, where each aggregation is nested within previous one.\n   * @minSize 2\n   * @maxSize 3\n   */\n  nestedAggregations?: NestedAggregationNestedAggregationItem[];\n}\n\nexport interface GroupByAggregation extends GroupByAggregationKindOneOf {\n  /** Value aggregation configuration. */\n  value?: AggregationValueAggregation;\n  /**\n   * Unique, caller-defined aggregation name, returned in `aggregations.results`.\n   * @maxLength 100\n   */\n  name?: string | null;\n  /**\n   * Field to aggregate by.\n   * @maxLength 200\n   */\n  fieldPath?: string;\n}\n\n/** @oneof */\nexport interface GroupByAggregationKindOneOf {\n  /** Value aggregation configuration. */\n  value?: AggregationValueAggregation;\n}\n\nexport interface CommonSearchDetails {\n  /** Search mode. Defines the search logic for combining multiple terms in the `expression`. */\n  mode?: SearchDetailsModeWithLiterals;\n  /**\n   * Search term or expression.\n   * @maxLength 100\n   */\n  expression?: string | null;\n  /**\n   * Fields to search in. If the array is empty, all searchable fields are searched. Use dot notation to specify a JSON path. For example, For example, `order.address.streetName`.\n   * @maxLength 200\n   * @maxSize 20\n   */\n  fields?: string[];\n  /** Whether to enable the search function to use an algorithm to automatically find results that are close to the search expression, such as typos and declensions. */\n  fuzzy?: boolean;\n}\n\nexport enum SearchDetailsMode {\n  /** At least one of the search terms must be present. */\n  OR = 'OR',\n  /** All search terms must be present. */\n  AND = 'AND',\n}\n\n/** @enumType */\nexport type SearchDetailsModeWithLiterals = SearchDetailsMode | 'OR' | 'AND';\n\nexport interface PlatformPaging {\n  /**\n   * Number of items to load.\n   * @max 100\n   */\n  limit?: number | null;\n  /** Number of items to skip in the current sort order. */\n  offset?: number | null;\n}\n\nexport interface DeprecatedSearchVariantsWithOffsetResponse {\n  /** Products which satisfy the provided query. */\n  variants?: ReadOnlyVariant[];\n  /** Paging metadata. */\n  pagingMetadata?: PagingMetadata;\n  /** Aggregation data. */\n  aggregationData?: Aggregation;\n}\n\nexport interface PagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Offset that was requested. */\n  offset?: number | null;\n  /** Total number of items that match the query. */\n  total?: number | null;\n  /** Flag that indicates the server failed to calculate the `total` field. */\n  tooManyToCount?: boolean | null;\n}\n\nexport interface MigrateProductVariantsRequest {\n  /** The product */\n  product?: Product;\n  /** The event sequence number of the product. */\n  eventSequence?: string | null;\n}\n\nexport interface Product extends ProductTypedPropertiesOneOf {\n  /**\n   * Physical properties.\n   *\n   * Required when `productType: PHYSICAL`.\n   */\n  physicalProperties?: PhysicalProperties;\n  /**\n   * Product ID.\n   * @minLength 1\n   * @maxLength 36\n   * @immutable\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Revision number, which increments by 1 each time the product is updated.\n   * To prevent conflicting changes,\n   * the current revision must be passed when updating the product.\n   *\n   * Ignored when creating a product.\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Date and time the product was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the product was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Product name. Translatable.\n   * @minLength 1\n   * @maxLength 80\n   */\n  name?: string | null;\n  /**\n   * Product slug.\n   *\n   * If not provided, the slug is autogenerated based on the product name.\n   * @format URL_SLUG\n   */\n  slug?: string | null;\n  /**\n   * URL to the site's product page.\n   *\n   * > **Note:** Returned only when you pass `\"URL\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  url?: string;\n  /**\n   * Product description using rich content.\n   * > **Note:** Returned only when you pass `\"DESCRIPTION\"` to the `fields` array in Products API requests.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"indent.emoji.divider.codeBlock.file.gallery.giphy.image.table.link.textHighlight.textColor\" exampleid=\"7dc9240e-d548-417a-abcf-0291b68b4303\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   */\n  description?: RichContent;\n  /**\n   * Product description in HTML.\n   *\n   * + When provided on create/update, this string must be a valid HTML. It will then be converted to rich content.\n   * + `plainDescription` is ignored when value is also passed to the `description` field.\n   * > **Note:** Returned only when you pass `\"PLAIN_DESCRIPTION\"` to the `fields` array in Products API requests.\n   * @maxLength 16000\n   */\n  plainDescription?: string | null;\n  /**\n   * Whether the product is visible to site visitors on the site.\n   *\n   * Default: `true`\n   */\n  visible?: boolean | null;\n  /**\n   * Whether the product is visible in POS (point of sale).\n   *\n   * Default: `true`\n   * > **Note:** Always `false` for `productType: DIGITAL`.\n   */\n  visibleInPos?: boolean | null;\n  /** Product media items. */\n  media?: Media;\n  /** Product SEO data. */\n  seoData?: SeoSchema;\n  /**\n   * Tax group ID.\n   * @format GUID\n   */\n  taxGroupId?: string | null;\n  /**\n   * Product options. Allows the customer to customize the product. For example, selecting color, size, and more.\n   *\n   * Always generates variants: every variant must have exactly one choice related to each option.\n   * Since options and variants tightly coupled and rely on each other they usually should be provided together in all operations.\n   * @maxSize 6\n   */\n  options?: ConnectedOption[];\n  /**\n   * Product modifiers.\n   *\n   * Allows the customer to customize product, e.g. select Color, Size and so on similarly to `options` but with one main difference - `modifiers` never generate any variants.\n   * @maxSize 10\n   */\n  modifiers?: ConnectedModifier[];\n  /**\n   * Product brand.\n   *\n   * + Pass `brand.name` to add a new brand while creating a product.\n   * + Pass an existing brand's `id` to assign that brand to the product.\n   */\n  brand?: Brand;\n  /**\n   * Product info section.\n   *\n   * + Pass `infoSection.uniqueName`, `infoSection.title`, and `infoSection.description` to add a new info section while creating a product.\n   * + Pass an existing info section's `id` or `uniqueName` to assign that info section to the product.\n   * @maxSize 10\n   */\n  infoSections?: InfoSection[];\n  /**\n   * Product ribbon.\n   *\n   * + Pass `ribbon.name` to add a new ribbon while creating a product.\n   * + Pass an existing ribbon's `id` or `name` to assign that ribbon to the product.\n   */\n  ribbon?: Ribbon;\n  /**\n   * List of categories that directly contain this product.\n   *\n   * Updated automatically when a product is added/removed from a category, when an item is moved within a category, or when a category is deleted.\n   * > **Note:** Returned only when you pass `\"DIRECT_CATEGORIES_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  directCategoriesInfo?: ProductCategoriesInfo;\n  /**\n   * List of categories that directly contain this product, as well as their parent categories.\n   * > **Note:** Returned only when you pass `\"ALL_CATEGORIES_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  allCategoriesInfo?: ProductCategoriesInfo;\n  /**\n   * Main category ID.\n   * @format GUID\n   */\n  mainCategoryId?: string | null;\n  /**\n   * Product cost range - minimum and maximum costs of all product variants.\n   *\n   * > **Note:** Returned only when the following conditions are met:\n   * > + You pass `\"MERCHANT_DATA\"` to the `fields` array in Products API requests.\n   * > + Your app has the required `SCOPE.STORES.PRODUCT_READ_ADMIN` permission scope.\n   * @readonly\n   */\n  costRange?: PriceRange;\n  /**\n   * Product inventory info.\n   * @readonly\n   */\n  inventory?: Inventory;\n  /**\n   * Product type.\n   *\n   * When passing `productType: PHYSICAL`, you must also pass `physicalProperties`.\n   * @immutable\n   */\n  productType?: ProductTypeWithLiterals;\n  /**\n   * A unique human-friendly identifier for the product.\n   * Unlike the product ID, the handle can be set by the user to ensure consistency across multiple platforms.\n   * In case handle wasn't given, the handle will be automatically generated.\n   * @minLength 1\n   * @maxLength 100\n   * @readonly\n   */\n  handle?: string | null;\n  /**\n   * ID of the last import job that affected the product.\n   * @internal\n   * @format GUID\n   */\n  importId?: string | null;\n  /**\n   * Currency used for the pricing of this product, in [ISO-4217](https://en.wikipedia.org/wiki/ISO_4217#List_of_ISO_4217_currency_codes) format.\n   *\n   * Defaults to the currency defined in the site settings, unless specified in `x-wix-currency` header.\n   * > **Note:** Returned only when you pass `\"CURRENCY\"` to the `fields` array in Products API requests.\n   * @format CURRENCY\n   * @readonly\n   */\n  currency?: string | null;\n  /**\n   * Breadcrumbs of the `mainCategoryId`. Used to navigate to parent categories.\n   * > **Note:** Returned only when you pass `\"BREADCRUMBS_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  breadcrumbsInfo?: BreadcrumbsInfo;\n  /**\n   * Product actualPrice range - minimum and maximum prices of all product variants.\n   * @readonly\n   */\n  actualPriceRange?: PriceRange;\n  /**\n   * Product compareAtPrice range - minimum and maximum compare at prices of all product variants.\n   * @readonly\n   */\n  compareAtPriceRange?: PriceRange;\n  /**\n   * Product variants. Each variant must reference all product options via its `choices` array.\n   * Each choice references an option using `optionChoiceNames` for all requests.\n   */\n  variantsInfo?: VariantsInfo;\n  /**\n   * Custom extended fields for the product object.\n   *\n   * [Extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields) must be configured in the app dashboard before they can be accessed with API calls.\n   */\n  extendedFields?: ExtendedFields;\n  /** Product subscriptions. */\n  subscriptionDetails?: SubscriptionDetails;\n  /**\n   * The total number of variants for the product.\n   * @readonly\n   */\n  variantSummary?: VariantSummary;\n}\n\n/** @oneof */\nexport interface ProductTypedPropertiesOneOf {\n  /**\n   * Physical properties.\n   *\n   * Required when `productType: PHYSICAL`.\n   */\n  physicalProperties?: PhysicalProperties;\n}\n\nexport interface RichContent {\n  /** Node objects representing a rich content document. */\n  nodes?: Node[];\n  /** Object metadata. */\n  metadata?: Metadata;\n  /** Global styling for header, paragraph, block quote, and code block nodes in the object. */\n  documentStyle?: DocumentStyle;\n}\n\nexport interface Node extends NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n  /** Node type. Use `APP_EMBED` for nodes that embed content from other Wix apps. Use `EMBED` to embed content in [oEmbed](https://oembed.com/) format. */\n  type?: NodeTypeWithLiterals;\n  /** Node ID. */\n  id?: string;\n  /** A list of child nodes. */\n  nodes?: Node[];\n  /** Padding and background color styling for the node. */\n  style?: NodeStyle;\n}\n\n/** @oneof */\nexport interface NodeDataOneOf {\n  /** Data for a button node. */\n  buttonData?: ButtonData;\n  /** Data for a code block node. */\n  codeBlockData?: CodeBlockData;\n  /** Data for a divider node. */\n  dividerData?: DividerData;\n  /** Data for a file node. */\n  fileData?: FileData;\n  /** Data for a gallery node. */\n  galleryData?: GalleryData;\n  /** Data for a GIF node. */\n  gifData?: GIFData;\n  /** Data for a heading node. */\n  headingData?: HeadingData;\n  /** Data for an embedded HTML node. */\n  htmlData?: HTMLData;\n  /** Data for an image node. */\n  imageData?: ImageData;\n  /** Data for a link preview node. */\n  linkPreviewData?: LinkPreviewData;\n  /** @deprecated */\n  mapData?: MapData;\n  /** Data for a paragraph node. */\n  paragraphData?: ParagraphData;\n  /** Data for a poll node. */\n  pollData?: PollData;\n  /** Data for a text node. Used to apply decorations to text. */\n  textData?: TextData;\n  /** Data for an app embed node. */\n  appEmbedData?: AppEmbedData;\n  /** Data for a video node. */\n  videoData?: VideoData;\n  /** Data for an oEmbed node. */\n  embedData?: EmbedData;\n  /** Data for a collapsible list node. */\n  collapsibleListData?: CollapsibleListData;\n  /** Data for a table node. */\n  tableData?: TableData;\n  /** Data for a table cell node. */\n  tableCellData?: TableCellData;\n  /** Data for a custom external node. */\n  externalData?: Record<string, any> | null;\n  /** Data for an audio node. */\n  audioData?: AudioData;\n  /** Data for an ordered list node. */\n  orderedListData?: OrderedListData;\n  /** Data for a bulleted list node. */\n  bulletedListData?: BulletedListData;\n  /** Data for a block quote node. */\n  blockquoteData?: BlockquoteData;\n  /** Data for a caption node. */\n  captionData?: CaptionData;\n  /** LayoutData layout_data = 31; // Data for a layout node. Reserved for future use. */\n  layoutCellData?: LayoutCellData;\n}\n\nexport enum NodeType {\n  PARAGRAPH = 'PARAGRAPH',\n  TEXT = 'TEXT',\n  HEADING = 'HEADING',\n  BULLETED_LIST = 'BULLETED_LIST',\n  ORDERED_LIST = 'ORDERED_LIST',\n  LIST_ITEM = 'LIST_ITEM',\n  BLOCKQUOTE = 'BLOCKQUOTE',\n  CODE_BLOCK = 'CODE_BLOCK',\n  VIDEO = 'VIDEO',\n  DIVIDER = 'DIVIDER',\n  FILE = 'FILE',\n  GALLERY = 'GALLERY',\n  GIF = 'GIF',\n  HTML = 'HTML',\n  IMAGE = 'IMAGE',\n  LINK_PREVIEW = 'LINK_PREVIEW',\n  /** @deprecated */\n  MAP = 'MAP',\n  POLL = 'POLL',\n  APP_EMBED = 'APP_EMBED',\n  BUTTON = 'BUTTON',\n  COLLAPSIBLE_LIST = 'COLLAPSIBLE_LIST',\n  TABLE = 'TABLE',\n  EMBED = 'EMBED',\n  COLLAPSIBLE_ITEM = 'COLLAPSIBLE_ITEM',\n  COLLAPSIBLE_ITEM_TITLE = 'COLLAPSIBLE_ITEM_TITLE',\n  COLLAPSIBLE_ITEM_BODY = 'COLLAPSIBLE_ITEM_BODY',\n  TABLE_CELL = 'TABLE_CELL',\n  TABLE_ROW = 'TABLE_ROW',\n  EXTERNAL = 'EXTERNAL',\n  AUDIO = 'AUDIO',\n  CAPTION = 'CAPTION',\n  LAYOUT = 'LAYOUT',\n  LAYOUT_CELL = 'LAYOUT_CELL',\n}\n\n/** @enumType */\nexport type NodeTypeWithLiterals =\n  | NodeType\n  | 'PARAGRAPH'\n  | 'TEXT'\n  | 'HEADING'\n  | 'BULLETED_LIST'\n  | 'ORDERED_LIST'\n  | 'LIST_ITEM'\n  | 'BLOCKQUOTE'\n  | 'CODE_BLOCK'\n  | 'VIDEO'\n  | 'DIVIDER'\n  | 'FILE'\n  | 'GALLERY'\n  | 'GIF'\n  | 'HTML'\n  | 'IMAGE'\n  | 'LINK_PREVIEW'\n  | 'MAP'\n  | 'POLL'\n  | 'APP_EMBED'\n  | 'BUTTON'\n  | 'COLLAPSIBLE_LIST'\n  | 'TABLE'\n  | 'EMBED'\n  | 'COLLAPSIBLE_ITEM'\n  | 'COLLAPSIBLE_ITEM_TITLE'\n  | 'COLLAPSIBLE_ITEM_BODY'\n  | 'TABLE_CELL'\n  | 'TABLE_ROW'\n  | 'EXTERNAL'\n  | 'AUDIO'\n  | 'CAPTION'\n  | 'LAYOUT'\n  | 'LAYOUT_CELL';\n\nexport interface NodeStyle {\n  /** The top padding value in pixels. */\n  paddingTop?: string | null;\n  /** The bottom padding value in pixels. */\n  paddingBottom?: string | null;\n  /** The background color as a hexadecimal value. */\n  backgroundColor?: string | null;\n}\n\nexport interface ButtonData {\n  /** Styling for the button's container. */\n  containerData?: PluginContainerData;\n  /** The button type. */\n  type?: TypeWithLiterals;\n  /** Styling for the button. */\n  styles?: Styles;\n  /** The text to display on the button. */\n  text?: string | null;\n  /** Button link details. */\n  link?: Link;\n}\n\nexport interface Border {\n  /**\n   * Deprecated: Use `borderWidth` in `styles` instead.\n   * @deprecated\n   */\n  width?: number | null;\n  /**\n   * Deprecated: Use `borderRadius` in `styles` instead.\n   * @deprecated\n   */\n  radius?: number | null;\n}\n\nexport interface Colors {\n  /**\n   * Deprecated: Use `textColor` in `styles` instead.\n   * @deprecated\n   */\n  text?: string | null;\n  /**\n   * Deprecated: Use `borderColor` in `styles` instead.\n   * @deprecated\n   */\n  border?: string | null;\n  /**\n   * Deprecated: Use `backgroundColor` in `styles` instead.\n   * @deprecated\n   */\n  background?: string | null;\n}\n\nexport interface PluginContainerData {\n  /** The width of the node when it's displayed. */\n  width?: PluginContainerDataWidth;\n  /** The node's alignment within its container. */\n  alignment?: PluginContainerDataAlignmentWithLiterals;\n  /** Spoiler cover settings for the node. */\n  spoiler?: Spoiler;\n  /** The height of the node when it's displayed. */\n  height?: Height;\n  /** Sets whether text should wrap around this node when it's displayed. If `textWrap` is `false`, the node takes up the width of its container. Defaults to `true` for all node types except 'DIVIVDER' where it defaults to `false`. */\n  textWrap?: boolean | null;\n}\n\nexport enum WidthType {\n  /** Width matches the content width */\n  CONTENT = 'CONTENT',\n  /** Small Width */\n  SMALL = 'SMALL',\n  /** Width will match the original asset width */\n  ORIGINAL = 'ORIGINAL',\n  /** coast-to-coast display */\n  FULL_WIDTH = 'FULL_WIDTH',\n}\n\n/** @enumType */\nexport type WidthTypeWithLiterals =\n  | WidthType\n  | 'CONTENT'\n  | 'SMALL'\n  | 'ORIGINAL'\n  | 'FULL_WIDTH';\n\nexport interface PluginContainerDataWidth\n  extends PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\n/** @oneof */\nexport interface PluginContainerDataWidthDataOneOf {\n  /**\n   * One of the following predefined width options:\n   * `CONTENT`: The width of the container matches the content width.\n   * `SMALL`: A small width.\n   * `ORIGINAL`: For `imageData` containers only. The width of the container matches the original image width.\n   * `FULL_WIDTH`: For `imageData` containers only. The image container takes up the full width of the screen.\n   */\n  size?: WidthTypeWithLiterals;\n  /** A custom width value in pixels. */\n  custom?: string | null;\n}\n\nexport enum PluginContainerDataAlignment {\n  /** Center Alignment */\n  CENTER = 'CENTER',\n  /** Left Alignment */\n  LEFT = 'LEFT',\n  /** Right Alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type PluginContainerDataAlignmentWithLiterals =\n  | PluginContainerDataAlignment\n  | 'CENTER'\n  | 'LEFT'\n  | 'RIGHT';\n\nexport interface Spoiler {\n  /** Sets whether the spoiler cover is enabled for this node. Defaults to `false`. */\n  enabled?: boolean | null;\n  /** The description displayed on top of the spoiler cover. */\n  description?: string | null;\n  /** The text for the button used to remove the spoiler cover. */\n  buttonText?: string | null;\n}\n\nexport interface Height {\n  /** A custom height value in pixels. */\n  custom?: string | null;\n}\n\nexport enum Type {\n  /** Regular link button */\n  LINK = 'LINK',\n  /** Triggers custom action that is defined in plugin configuration by the consumer */\n  ACTION = 'ACTION',\n}\n\n/** @enumType */\nexport type TypeWithLiterals = Type | 'LINK' | 'ACTION';\n\nexport interface Styles {\n  /**\n   * Deprecated: Use `borderWidth` and `borderRadius` instead.\n   * @deprecated\n   */\n  border?: Border;\n  /**\n   * Deprecated: Use `textColor`, `borderColor` and `backgroundColor` instead.\n   * @deprecated\n   */\n  colors?: Colors;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /**\n   * Deprecated: Use `borderWidth` for normal/hover states instead.\n   * @deprecated\n   */\n  borderWidthHover?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /**\n   * Border color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  borderColorHover?: string | null;\n  /**\n   * Text color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  textColor?: string | null;\n  /**\n   * Text color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  textColorHover?: string | null;\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Background color as a hexadecimal value (hover state).\n   * @format COLOR_HEX\n   */\n  backgroundColorHover?: string | null;\n  /** Button size option, one of `SMALL`, `MEDIUM` or `LARGE`. Defaults to `MEDIUM`. */\n  buttonSize?: string | null;\n}\n\nexport interface Link extends LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n  /**\n   * he HTML `target` attribute value for the link. This property defines where the linked document opens as follows:\n   * `SELF` - Default. Opens the linked document in the same frame as the link.\n   * `BLANK` - Opens the linked document in a new browser tab or window.\n   * `PARENT` - Opens the linked document in the link's parent frame.\n   * `TOP` - Opens the linked document in the full body of the link's browser tab or window.\n   */\n  target?: TargetWithLiterals;\n  /** The HTML `rel` attribute value for the link. This object specifies the relationship between the current document and the linked document. */\n  rel?: Rel;\n  /** A serialized object used for a custom or external link panel. */\n  customData?: string | null;\n}\n\n/** @oneof */\nexport interface LinkDataOneOf {\n  /** The absolute URL for the linked document. */\n  url?: string;\n  /** The target node's ID. Used for linking to another node in this object. */\n  anchor?: string;\n}\n\nexport enum Target {\n  /** Opens the linked document in the same frame as it was clicked (this is default) */\n  SELF = 'SELF',\n  /** Opens the linked document in a new window or tab */\n  BLANK = 'BLANK',\n  /** Opens the linked document in the parent frame */\n  PARENT = 'PARENT',\n  /** Opens the linked document in the full body of the window */\n  TOP = 'TOP',\n}\n\n/** @enumType */\nexport type TargetWithLiterals = Target | 'SELF' | 'BLANK' | 'PARENT' | 'TOP';\n\nexport interface Rel {\n  /** Indicates to search engine crawlers not to follow the link. Defaults to `false`. */\n  nofollow?: boolean | null;\n  /** Indicates to search engine crawlers that the link is a paid placement such as sponsored content or an advertisement. Defaults to `false`. */\n  sponsored?: boolean | null;\n  /** Indicates that this link is user-generated content and isn't necessarily trusted or endorsed by the page’s author. For example, a link in a fourm post. Defaults to `false`. */\n  ugc?: boolean | null;\n  /** Indicates that this link protect referral information from being passed to the target website. */\n  noreferrer?: boolean | null;\n}\n\nexport interface CodeBlockData {\n  /** Styling for the code block's text. */\n  textStyle?: TextStyle;\n}\n\nexport interface TextStyle {\n  /** Text alignment. Defaults to `AUTO`. */\n  textAlignment?: TextAlignmentWithLiterals;\n  /** A CSS `line-height` value for the text expressed as a ratio relative to the font size. For example, if the font size is 20px, a `lineHeight` value of `'1.5'`` results in a line height of 30px. */\n  lineHeight?: string | null;\n}\n\nexport enum TextAlignment {\n  /** browser default, eqivalent to `initial` */\n  AUTO = 'AUTO',\n  /** Left align */\n  LEFT = 'LEFT',\n  /** Right align */\n  RIGHT = 'RIGHT',\n  /** Center align */\n  CENTER = 'CENTER',\n  /** Text is spaced to line up its left and right edges to the left and right edges of the line box, except for the last line */\n  JUSTIFY = 'JUSTIFY',\n}\n\n/** @enumType */\nexport type TextAlignmentWithLiterals =\n  | TextAlignment\n  | 'AUTO'\n  | 'LEFT'\n  | 'RIGHT'\n  | 'CENTER'\n  | 'JUSTIFY';\n\nexport interface DividerData {\n  /** Styling for the divider's container. */\n  containerData?: PluginContainerData;\n  /** Divider line style. */\n  lineStyle?: LineStyleWithLiterals;\n  /** Divider width. */\n  width?: WidthWithLiterals;\n  /** Divider alignment. */\n  alignment?: AlignmentWithLiterals;\n}\n\nexport enum LineStyle {\n  /** Single Line */\n  SINGLE = 'SINGLE',\n  /** Double Line */\n  DOUBLE = 'DOUBLE',\n  /** Dashed Line */\n  DASHED = 'DASHED',\n  /** Dotted Line */\n  DOTTED = 'DOTTED',\n}\n\n/** @enumType */\nexport type LineStyleWithLiterals =\n  | LineStyle\n  | 'SINGLE'\n  | 'DOUBLE'\n  | 'DASHED'\n  | 'DOTTED';\n\nexport enum Width {\n  /** Large line */\n  LARGE = 'LARGE',\n  /** Medium line */\n  MEDIUM = 'MEDIUM',\n  /** Small line */\n  SMALL = 'SMALL',\n}\n\n/** @enumType */\nexport type WidthWithLiterals = Width | 'LARGE' | 'MEDIUM' | 'SMALL';\n\nexport enum Alignment {\n  /** Center alignment */\n  CENTER = 'CENTER',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n}\n\n/** @enumType */\nexport type AlignmentWithLiterals = Alignment | 'CENTER' | 'LEFT' | 'RIGHT';\n\nexport interface FileData {\n  /** Styling for the file's container. */\n  containerData?: PluginContainerData;\n  /** The source for the file's data. */\n  src?: FileSource;\n  /** File name. */\n  name?: string | null;\n  /** File type. */\n  type?: string | null;\n  /**\n   * Use `sizeInKb` instead.\n   * @deprecated\n   */\n  size?: number | null;\n  /** Settings for PDF files. */\n  pdfSettings?: PDFSettings;\n  /** File MIME type. */\n  mimeType?: string | null;\n  /** File path. */\n  path?: string | null;\n  /** File size in KB. */\n  sizeInKb?: string | null;\n}\n\nexport enum ViewMode {\n  /** No PDF view */\n  NONE = 'NONE',\n  /** Full PDF view */\n  FULL = 'FULL',\n  /** Mini PDF view */\n  MINI = 'MINI',\n}\n\n/** @enumType */\nexport type ViewModeWithLiterals = ViewMode | 'NONE' | 'FULL' | 'MINI';\n\nexport interface FileSource extends FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n  /** Indicates whether the file's source is private. Defaults to `false`. */\n  private?: boolean | null;\n}\n\n/** @oneof */\nexport interface FileSourceDataOneOf {\n  /** The absolute URL for the file's source. */\n  url?: string | null;\n  /**\n   * Custom ID. Use `id` instead.\n   * @deprecated\n   */\n  custom?: string | null;\n  /** An ID that's resolved to a URL by a resolver function. */\n  id?: string | null;\n}\n\nexport interface PDFSettings {\n  /**\n   * PDF view mode. One of the following:\n   * `NONE` : The PDF isn't displayed.\n   * `FULL` : A full page view of the PDF is displayed.\n   * `MINI` : A mini view of the PDF is displayed.\n   */\n  viewMode?: ViewModeWithLiterals;\n  /** Sets whether the PDF download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the PDF print button is disabled. Defaults to `false`. */\n  disablePrint?: boolean | null;\n}\n\nexport interface GalleryData {\n  /** Styling for the gallery's container. */\n  containerData?: PluginContainerData;\n  /** The items in the gallery. */\n  items?: Item[];\n  /** Options for defining the gallery's appearance. */\n  options?: GalleryOptions;\n  /** Sets whether the gallery's expand button is disabled. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Sets whether the gallery's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n}\n\nexport interface V1Media {\n  /** The source for the media's data. */\n  src?: FileSource;\n  /** Media width in pixels. */\n  width?: number | null;\n  /** Media height in pixels. */\n  height?: number | null;\n  /** Media duration in seconds. Only relevant for audio and video files. */\n  duration?: number | null;\n}\n\nexport interface Image {\n  /** Image file details. */\n  media?: V1Media;\n  /** Link details for images that are links. */\n  link?: Link;\n}\n\nexport interface Video {\n  /** Video file details. */\n  media?: V1Media;\n  /** Video thumbnail file details. */\n  thumbnail?: V1Media;\n}\n\nexport interface Item extends ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n  /** Item title. */\n  title?: string | null;\n  /** Item's alternative text. */\n  altText?: string | null;\n}\n\n/** @oneof */\nexport interface ItemDataOneOf {\n  /** An image item. */\n  image?: Image;\n  /** A video item. */\n  video?: Video;\n}\n\nexport interface GalleryOptions {\n  /** Gallery layout. */\n  layout?: Layout;\n  /** Styling for gallery items. */\n  item?: ItemStyle;\n  /** Styling for gallery thumbnail images. */\n  thumbnails?: Thumbnails;\n}\n\nexport enum LayoutType {\n  /** Collage type */\n  COLLAGE = 'COLLAGE',\n  /** Masonry type */\n  MASONRY = 'MASONRY',\n  /** Grid type */\n  GRID = 'GRID',\n  /** Thumbnail type */\n  THUMBNAIL = 'THUMBNAIL',\n  /** Slider type */\n  SLIDER = 'SLIDER',\n  /** Slideshow type */\n  SLIDESHOW = 'SLIDESHOW',\n  /** Panorama type */\n  PANORAMA = 'PANORAMA',\n  /** Column type */\n  COLUMN = 'COLUMN',\n  /** Magic type */\n  MAGIC = 'MAGIC',\n  /** Fullsize images type */\n  FULLSIZE = 'FULLSIZE',\n}\n\n/** @enumType */\nexport type LayoutTypeWithLiterals =\n  | LayoutType\n  | 'COLLAGE'\n  | 'MASONRY'\n  | 'GRID'\n  | 'THUMBNAIL'\n  | 'SLIDER'\n  | 'SLIDESHOW'\n  | 'PANORAMA'\n  | 'COLUMN'\n  | 'MAGIC'\n  | 'FULLSIZE';\n\nexport enum Orientation {\n  /** Rows Orientation */\n  ROWS = 'ROWS',\n  /** Columns Orientation */\n  COLUMNS = 'COLUMNS',\n}\n\n/** @enumType */\nexport type OrientationWithLiterals = Orientation | 'ROWS' | 'COLUMNS';\n\nexport enum Crop {\n  /** Crop to fill */\n  FILL = 'FILL',\n  /** Crop to fit */\n  FIT = 'FIT',\n}\n\n/** @enumType */\nexport type CropWithLiterals = Crop | 'FILL' | 'FIT';\n\nexport enum ThumbnailsAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Right alignment */\n  RIGHT = 'RIGHT',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n  /** Left alignment */\n  LEFT = 'LEFT',\n  /** No thumbnail */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type ThumbnailsAlignmentWithLiterals =\n  | ThumbnailsAlignment\n  | 'TOP'\n  | 'RIGHT'\n  | 'BOTTOM'\n  | 'LEFT'\n  | 'NONE';\n\nexport interface Layout {\n  /** Gallery layout type. */\n  type?: LayoutTypeWithLiterals;\n  /** Sets whether horizontal scroll is enabled. Defaults to `true` unless the layout `type` is set to `GRID` or `COLLAGE`. */\n  horizontalScroll?: boolean | null;\n  /** Gallery orientation. */\n  orientation?: OrientationWithLiterals;\n  /** The number of columns to display on full size screens. */\n  numberOfColumns?: number | null;\n  /** The number of columns to display on mobile screens. */\n  mobileNumberOfColumns?: number | null;\n}\n\nexport interface ItemStyle {\n  /** Desirable dimension for each item in pixels (behvaior changes according to gallery type) */\n  targetSize?: number | null;\n  /** Item ratio */\n  ratio?: number | null;\n  /** Sets how item images are cropped. */\n  crop?: CropWithLiterals;\n  /** The spacing between items in pixels. */\n  spacing?: number | null;\n}\n\nexport interface Thumbnails {\n  /** Thumbnail alignment. */\n  placement?: ThumbnailsAlignmentWithLiterals;\n  /** Spacing between thumbnails in pixels. */\n  spacing?: number | null;\n}\n\nexport interface GIFData {\n  /** Styling for the GIF's container. */\n  containerData?: PluginContainerData;\n  /** The source of the full size GIF. */\n  original?: GIF;\n  /** The source of the downsized GIF. */\n  downsized?: GIF;\n  /** Height in pixels. */\n  height?: number;\n  /** Width in pixels. */\n  width?: number;\n  /** Type of GIF (Sticker or NORMAL). Defaults to `NORMAL`. */\n  gifType?: GIFTypeWithLiterals;\n}\n\nexport interface GIF {\n  /**\n   * GIF format URL.\n   * @format WEB_URL\n   */\n  gif?: string | null;\n  /**\n   * MP4 format URL.\n   * @format WEB_URL\n   */\n  mp4?: string | null;\n  /**\n   * Thumbnail URL.\n   * @format WEB_URL\n   */\n  still?: string | null;\n}\n\nexport enum GIFType {\n  NORMAL = 'NORMAL',\n  STICKER = 'STICKER',\n}\n\n/** @enumType */\nexport type GIFTypeWithLiterals = GIFType | 'NORMAL' | 'STICKER';\n\nexport interface HeadingData {\n  /** Heading level from 1-6. */\n  level?: number;\n  /** Styling for the heading text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n}\n\nexport interface HTMLData extends HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n  /** Styling for the HTML node's container. Height property is irrelevant for HTML embeds when autoHeight is set to `true`. */\n  containerData?: PluginContainerData;\n  /** The type of HTML code. */\n  source?: SourceWithLiterals;\n  /** If container height is aligned with its content height. Defaults to `true`. */\n  autoHeight?: boolean | null;\n}\n\n/** @oneof */\nexport interface HTMLDataDataOneOf {\n  /** The URL for the HTML code for the node. */\n  url?: string;\n  /** The HTML code for the node. */\n  html?: string;\n  /**\n   * Whether this is an AdSense element. Use `source` instead.\n   * @deprecated\n   */\n  isAdsense?: boolean | null;\n}\n\nexport enum Source {\n  HTML = 'HTML',\n  ADSENSE = 'ADSENSE',\n}\n\n/** @enumType */\nexport type SourceWithLiterals = Source | 'HTML' | 'ADSENSE';\n\nexport interface ImageData {\n  /** Styling for the image's container. */\n  containerData?: PluginContainerData;\n  /** Image file details. */\n  image?: V1Media;\n  /** Link details for images that are links. */\n  link?: Link;\n  /** Sets whether the image expands to full screen when clicked. Defaults to `false`. */\n  disableExpand?: boolean | null;\n  /** Image's alternative text. */\n  altText?: string | null;\n  /**\n   * Deprecated: use Caption node instead.\n   * @deprecated\n   */\n  caption?: string | null;\n  /** Sets whether the image's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Sets whether the image is decorative and does not need an explanation. Defaults to `false`. */\n  decorative?: boolean | null;\n  /** Styling for the image. */\n  styles?: ImageDataStyles;\n}\n\nexport interface StylesBorder {\n  /** Border width in pixels. */\n  width?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** Border radius in pixels. */\n  radius?: number | null;\n}\n\nexport interface ImageDataStyles {\n  /** Border attributes. */\n  border?: StylesBorder;\n}\n\nexport interface LinkPreviewData {\n  /** Styling for the link preview's container. */\n  containerData?: PluginContainerData;\n  /** Link details. */\n  link?: Link;\n  /** Preview title. */\n  title?: string | null;\n  /** Preview thumbnail URL. */\n  thumbnailUrl?: string | null;\n  /** Preview description. */\n  description?: string | null;\n  /** The preview content as HTML. */\n  html?: string | null;\n  /** Styling for the link preview. */\n  styles?: LinkPreviewDataStyles;\n}\n\nexport enum Position {\n  /** Thumbnail positioned at the start (left in LTR layouts, right in RTL layouts) */\n  START = 'START',\n  /** Thumbnail positioned at the end (right in LTR layouts, left in RTL layouts) */\n  END = 'END',\n  /** Thumbnail positioned at the top */\n  TOP = 'TOP',\n  /** Thumbnail hidden and not displayed */\n  HIDDEN = 'HIDDEN',\n}\n\n/** @enumType */\nexport type PositionWithLiterals =\n  | Position\n  | 'START'\n  | 'END'\n  | 'TOP'\n  | 'HIDDEN';\n\nexport interface LinkPreviewDataStyles {\n  /**\n   * Background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n  /**\n   * Title color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  titleColor?: string | null;\n  /**\n   * Subtitle color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  subtitleColor?: string | null;\n  /**\n   * Link color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  linkColor?: string | null;\n  /** Border width in pixels. */\n  borderWidth?: number | null;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n  /**\n   * Border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  borderColor?: string | null;\n  /** Position of thumbnail. Defaults to `START`. */\n  thumbnailPosition?: PositionWithLiterals;\n}\n\nexport interface MapData {\n  /** Styling for the map's container. */\n  containerData?: PluginContainerData;\n  /** Map settings. */\n  mapSettings?: MapSettings;\n}\n\nexport interface MapSettings {\n  /** The address to display on the map. */\n  address?: string | null;\n  /** Sets whether the map is draggable. */\n  draggable?: boolean | null;\n  /** Sets whether the location marker is visible. */\n  marker?: boolean | null;\n  /** Sets whether street view control is enabled. */\n  streetViewControl?: boolean | null;\n  /** Sets whether zoom control is enabled. */\n  zoomControl?: boolean | null;\n  /** Location latitude. */\n  lat?: number | null;\n  /** Location longitude. */\n  lng?: number | null;\n  /** Location name. */\n  locationName?: string | null;\n  /** Sets whether view mode control is enabled. */\n  viewModeControl?: boolean | null;\n  /** Initial zoom value. */\n  initialZoom?: number | null;\n  /** Map type. `HYBRID` is a combination of the `ROADMAP` and `SATELLITE` map types. */\n  mapType?: MapTypeWithLiterals;\n}\n\nexport enum MapType {\n  /** Roadmap map type */\n  ROADMAP = 'ROADMAP',\n  /** Satellite map type */\n  SATELITE = 'SATELITE',\n  /** Hybrid map type */\n  HYBRID = 'HYBRID',\n  /** Terrain map type */\n  TERRAIN = 'TERRAIN',\n}\n\n/** @enumType */\nexport type MapTypeWithLiterals =\n  | MapType\n  | 'ROADMAP'\n  | 'SATELITE'\n  | 'HYBRID'\n  | 'TERRAIN';\n\nexport interface ParagraphData {\n  /** Styling for the paragraph text. */\n  textStyle?: TextStyle;\n  /** Indentation level from 1-4. */\n  indentation?: number | null;\n  /** Paragraph level */\n  level?: number | null;\n}\n\nexport interface PollData {\n  /** Styling for the poll's container. */\n  containerData?: PluginContainerData;\n  /** Poll data. */\n  poll?: Poll;\n  /** Layout settings for the poll and voting options. */\n  layout?: PollDataLayout;\n  /** Styling for the poll and voting options. */\n  design?: Design;\n}\n\nexport enum ViewRole {\n  /** Only Poll creator can view the results */\n  CREATOR = 'CREATOR',\n  /** Anyone who voted can see the results */\n  VOTERS = 'VOTERS',\n  /** Anyone can see the results, even if one didn't vote */\n  EVERYONE = 'EVERYONE',\n}\n\n/** @enumType */\nexport type ViewRoleWithLiterals = ViewRole | 'CREATOR' | 'VOTERS' | 'EVERYONE';\n\nexport enum VoteRole {\n  /** Logged in member */\n  SITE_MEMBERS = 'SITE_MEMBERS',\n  /** Anyone */\n  ALL = 'ALL',\n}\n\n/** @enumType */\nexport type VoteRoleWithLiterals = VoteRole | 'SITE_MEMBERS' | 'ALL';\n\nexport interface Permissions {\n  /** Sets who can view the poll results. */\n  view?: ViewRoleWithLiterals;\n  /** Sets who can vote. */\n  vote?: VoteRoleWithLiterals;\n  /** Sets whether one voter can vote multiple times. Defaults to `false`. */\n  allowMultipleVotes?: boolean | null;\n}\n\nexport interface Option {\n  /** Option ID. */\n  id?: string | null;\n  /** Option title. */\n  title?: string | null;\n  /** The image displayed with the option. */\n  image?: V1Media;\n}\n\nexport interface PollSettings {\n  /** Permissions settings for voting. */\n  permissions?: Permissions;\n  /** Sets whether voters are displayed in the vote results. Defaults to `true`. */\n  showVoters?: boolean | null;\n  /** Sets whether the vote count is displayed. Defaults to `true`. */\n  showVotesCount?: boolean | null;\n}\n\nexport enum PollLayoutType {\n  /** List */\n  LIST = 'LIST',\n  /** Grid */\n  GRID = 'GRID',\n}\n\n/** @enumType */\nexport type PollLayoutTypeWithLiterals = PollLayoutType | 'LIST' | 'GRID';\n\nexport enum PollLayoutDirection {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type PollLayoutDirectionWithLiterals =\n  | PollLayoutDirection\n  | 'LTR'\n  | 'RTL';\n\nexport interface PollLayout {\n  /** The layout for displaying the voting options. */\n  type?: PollLayoutTypeWithLiterals;\n  /** The direction of the text displayed in the voting options. Text can be displayed either right-to-left or left-to-right. */\n  direction?: PollLayoutDirectionWithLiterals;\n  /** Sets whether to display the main poll image. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport interface OptionLayout {\n  /** Sets whether to display option images. Defaults to `false`. */\n  enableImage?: boolean | null;\n}\n\nexport enum BackgroundType {\n  /** Color background type */\n  COLOR = 'COLOR',\n  /** Image background type */\n  IMAGE = 'IMAGE',\n  /** Gradiant background type */\n  GRADIENT = 'GRADIENT',\n}\n\n/** @enumType */\nexport type BackgroundTypeWithLiterals =\n  | BackgroundType\n  | 'COLOR'\n  | 'IMAGE'\n  | 'GRADIENT';\n\nexport interface Gradient {\n  /** The gradient angle in degrees. */\n  angle?: number | null;\n  /**\n   * The start color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  startColor?: string | null;\n  /**\n   * The end color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  lastColor?: string | null;\n}\n\nexport interface Background extends BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: V1Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n  /** Background type. For each option, include the relevant details. */\n  type?: BackgroundTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface BackgroundBackgroundOneOf {\n  /**\n   * The background color as a hexademical value.\n   * @format COLOR_HEX\n   */\n  color?: string | null;\n  /** An image to use for the background. */\n  image?: V1Media;\n  /** Details for a gradient background. */\n  gradient?: Gradient;\n}\n\nexport interface PollDesign {\n  /** Background styling. */\n  background?: Background;\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface OptionDesign {\n  /** Border radius in pixels. */\n  borderRadius?: number | null;\n}\n\nexport interface Poll {\n  /** Poll ID. */\n  id?: string | null;\n  /** Poll title. */\n  title?: string | null;\n  /** Poll creator ID. */\n  creatorId?: string | null;\n  /** Main poll image. */\n  image?: V1Media;\n  /** Voting options. */\n  options?: Option[];\n  /** The poll's permissions and display settings. */\n  settings?: PollSettings;\n}\n\nexport interface PollDataLayout {\n  /** Poll layout settings. */\n  poll?: PollLayout;\n  /** Voting otpions layout settings. */\n  options?: OptionLayout;\n}\n\nexport interface Design {\n  /** Styling for the poll. */\n  poll?: PollDesign;\n  /** Styling for voting options. */\n  options?: OptionDesign;\n}\n\nexport interface TextData {\n  /** The text to apply decorations to. */\n  text?: string;\n  /** The decorations to apply. */\n  decorations?: Decoration[];\n}\n\n/** Adds appearence changes to text */\nexport interface Decoration extends DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n  /** The type of decoration to apply. */\n  type?: DecorationTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface DecorationDataOneOf {\n  /** Data for an anchor link decoration. */\n  anchorData?: AnchorData;\n  /** Data for a color decoration. */\n  colorData?: ColorData;\n  /** Data for an external link decoration. */\n  linkData?: LinkData;\n  /** Data for a mention decoration. */\n  mentionData?: MentionData;\n  /** Data for a font size decoration. */\n  fontSizeData?: FontSizeData;\n  /** Font weight for a bold decoration. */\n  fontWeightValue?: number | null;\n  /** Data for an italic decoration. Defaults to `true`. */\n  italicData?: boolean | null;\n  /** Data for an underline decoration. Defaults to `true`. */\n  underlineData?: boolean | null;\n  /** Data for a spoiler decoration. */\n  spoilerData?: SpoilerData;\n  /** Data for a strikethrough decoration. Defaults to `true`. */\n  strikethroughData?: boolean | null;\n  /** Data for a superscript decoration. Defaults to `true`. */\n  superscriptData?: boolean | null;\n  /** Data for a subscript decoration. Defaults to `true`. */\n  subscriptData?: boolean | null;\n}\n\nexport enum DecorationType {\n  BOLD = 'BOLD',\n  ITALIC = 'ITALIC',\n  UNDERLINE = 'UNDERLINE',\n  SPOILER = 'SPOILER',\n  ANCHOR = 'ANCHOR',\n  MENTION = 'MENTION',\n  LINK = 'LINK',\n  COLOR = 'COLOR',\n  FONT_SIZE = 'FONT_SIZE',\n  EXTERNAL = 'EXTERNAL',\n  STRIKETHROUGH = 'STRIKETHROUGH',\n  SUPERSCRIPT = 'SUPERSCRIPT',\n  SUBSCRIPT = 'SUBSCRIPT',\n}\n\n/** @enumType */\nexport type DecorationTypeWithLiterals =\n  | DecorationType\n  | 'BOLD'\n  | 'ITALIC'\n  | 'UNDERLINE'\n  | 'SPOILER'\n  | 'ANCHOR'\n  | 'MENTION'\n  | 'LINK'\n  | 'COLOR'\n  | 'FONT_SIZE'\n  | 'EXTERNAL'\n  | 'STRIKETHROUGH'\n  | 'SUPERSCRIPT'\n  | 'SUBSCRIPT';\n\nexport interface AnchorData {\n  /** The target node's ID. */\n  anchor?: string;\n}\n\nexport interface ColorData {\n  /** The text's background color as a hexadecimal value. */\n  background?: string | null;\n  /** The text's foreground color as a hexadecimal value. */\n  foreground?: string | null;\n}\n\nexport interface LinkData {\n  /** Link details. */\n  link?: Link;\n}\n\nexport interface MentionData {\n  /** The mentioned user's name. */\n  name?: string;\n  /** The version of the user's name that appears after the `@` character in the mention. */\n  slug?: string;\n  /** Mentioned user's ID. */\n  id?: string | null;\n}\n\nexport interface FontSizeData {\n  /** The units used for the font size. */\n  unit?: FontTypeWithLiterals;\n  /** Font size value. */\n  value?: number | null;\n}\n\nexport enum FontType {\n  PX = 'PX',\n  EM = 'EM',\n}\n\n/** @enumType */\nexport type FontTypeWithLiterals = FontType | 'PX' | 'EM';\n\nexport interface SpoilerData {\n  /** Spoiler ID. */\n  id?: string | null;\n}\n\nexport interface AppEmbedData extends AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n  /** The type of Wix App content being embedded. */\n  type?: AppTypeWithLiterals;\n  /** The ID of the embedded content. */\n  itemId?: string | null;\n  /** The name of the embedded content. */\n  name?: string | null;\n  /**\n   * Deprecated: Use `image` instead.\n   * @deprecated\n   */\n  imageSrc?: string | null;\n  /** The URL for the embedded content. */\n  url?: string | null;\n  /** An image for the embedded content. */\n  image?: V1Media;\n}\n\n/** @oneof */\nexport interface AppEmbedDataAppDataOneOf {\n  /** Data for embedded Wix Bookings content. */\n  bookingData?: BookingData;\n  /** Data for embedded Wix Events content. */\n  eventData?: EventData;\n}\n\nexport enum AppType {\n  PRODUCT = 'PRODUCT',\n  EVENT = 'EVENT',\n  BOOKING = 'BOOKING',\n}\n\n/** @enumType */\nexport type AppTypeWithLiterals = AppType | 'PRODUCT' | 'EVENT' | 'BOOKING';\n\nexport interface BookingData {\n  /** Booking duration in minutes. */\n  durations?: string | null;\n}\n\nexport interface EventData {\n  /** Event schedule. */\n  scheduling?: string | null;\n  /** Event location. */\n  location?: string | null;\n}\n\nexport interface VideoData {\n  /** Styling for the video's container. */\n  containerData?: PluginContainerData;\n  /** Video details. */\n  video?: V1Media;\n  /** Video thumbnail details. */\n  thumbnail?: V1Media;\n  /** Sets whether the video's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Video title. */\n  title?: string | null;\n  /** Video options. */\n  options?: PlaybackOptions;\n}\n\nexport interface PlaybackOptions {\n  /** Sets whether the media will automatically start playing. */\n  autoPlay?: boolean | null;\n  /** Sets whether media's will be looped. */\n  playInLoop?: boolean | null;\n  /** Sets whether media's controls will be shown. */\n  showControls?: boolean | null;\n}\n\nexport interface EmbedData {\n  /** Styling for the oEmbed node's container. */\n  containerData?: PluginContainerData;\n  /** An [oEmbed](https://www.oembed.com) object. */\n  oembed?: Oembed;\n  /** Origin asset source. */\n  src?: string | null;\n}\n\nexport interface Oembed {\n  /** The resource type. */\n  type?: string | null;\n  /** The width of the resource specified in the `url` property in pixels. */\n  width?: number | null;\n  /** The height of the resource specified in the `url` property in pixels. */\n  height?: number | null;\n  /** Resource title. */\n  title?: string | null;\n  /** The source URL for the resource. */\n  url?: string | null;\n  /** HTML for embedding a video player. The HTML should have no padding or margins. */\n  html?: string | null;\n  /** The name of the author or owner of the resource. */\n  authorName?: string | null;\n  /** The URL for the author or owner of the resource. */\n  authorUrl?: string | null;\n  /** The name of the resource provider. */\n  providerName?: string | null;\n  /** The URL for the resource provider. */\n  providerUrl?: string | null;\n  /** The URL for a thumbnail image for the resource. If this property is defined, `thumbnailWidth` and `thumbnailHeight` must also be defined. */\n  thumbnailUrl?: string | null;\n  /** The width of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailHeight` must also be defined. */\n  thumbnailWidth?: string | null;\n  /** The height of the resource's thumbnail image. If this property is defined, `thumbnailUrl` and `thumbnailWidth`must also be defined. */\n  thumbnailHeight?: string | null;\n  /** The URL for an embedded viedo. */\n  videoUrl?: string | null;\n  /** The oEmbed version number.  This value must be `1.0`. */\n  version?: string | null;\n}\n\nexport interface CollapsibleListData {\n  /** Styling for the collapsible list's container. */\n  containerData?: PluginContainerData;\n  /** If `true`, only one item can be expanded at a time. Defaults to `false`. */\n  expandOnlyOne?: boolean | null;\n  /** Sets which items are expanded when the page loads. */\n  initialExpandedItems?: InitialExpandedItemsWithLiterals;\n  /** The direction of the text in the list. Either left-to-right or right-to-left. */\n  direction?: DirectionWithLiterals;\n  /** If `true`, The collapsible item will appear in search results as an FAQ. */\n  isQapageData?: boolean | null;\n}\n\nexport enum InitialExpandedItems {\n  /** First item will be expended initally */\n  FIRST = 'FIRST',\n  /** All items will expended initally */\n  ALL = 'ALL',\n  /** All items collapsed initally */\n  NONE = 'NONE',\n}\n\n/** @enumType */\nexport type InitialExpandedItemsWithLiterals =\n  | InitialExpandedItems\n  | 'FIRST'\n  | 'ALL'\n  | 'NONE';\n\nexport enum Direction {\n  /** Left-to-right */\n  LTR = 'LTR',\n  /** Right-to-left */\n  RTL = 'RTL',\n}\n\n/** @enumType */\nexport type DirectionWithLiterals = Direction | 'LTR' | 'RTL';\n\nexport interface TableData {\n  /** Styling for the table's container. */\n  containerData?: PluginContainerData;\n  /** The table's dimensions. */\n  dimensions?: Dimensions;\n  /**\n   * Deprecated: Use `rowHeader` and `columnHeader` instead.\n   * @deprecated\n   */\n  header?: boolean | null;\n  /** Sets whether the table's first row is a header. Defaults to `false`. */\n  rowHeader?: boolean | null;\n  /** Sets whether the table's first column is a header. Defaults to `false`. */\n  columnHeader?: boolean | null;\n}\n\nexport interface Dimensions {\n  /** An array representing relative width of each column in relation to the other columns. */\n  colsWidthRatio?: number[];\n  /** An array representing the height of each row in pixels. */\n  rowsHeight?: number[];\n  /** An array representing the minimum width of each column in pixels. */\n  colsMinWidth?: number[];\n}\n\nexport interface TableCellData {\n  /** Styling for the cell's background color and text alignment. */\n  cellStyle?: CellStyle;\n  /** The cell's border colors. */\n  borderColors?: BorderColors;\n}\n\nexport enum VerticalAlignment {\n  /** Top alignment */\n  TOP = 'TOP',\n  /** Middle alignment */\n  MIDDLE = 'MIDDLE',\n  /** Bottom alignment */\n  BOTTOM = 'BOTTOM',\n}\n\n/** @enumType */\nexport type VerticalAlignmentWithLiterals =\n  | VerticalAlignment\n  | 'TOP'\n  | 'MIDDLE'\n  | 'BOTTOM';\n\nexport interface CellStyle {\n  /** Vertical alignment for the cell's text. */\n  verticalAlignment?: VerticalAlignmentWithLiterals;\n  /**\n   * Cell background color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  backgroundColor?: string | null;\n}\n\nexport interface BorderColors {\n  /**\n   * Left border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  left?: string | null;\n  /**\n   * Right border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  right?: string | null;\n  /**\n   * Top border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  top?: string | null;\n  /**\n   * Bottom border color as a hexadecimal value.\n   * @format COLOR_HEX\n   */\n  bottom?: string | null;\n}\n\n/**\n * `NullValue` is a singleton enumeration to represent the null value for the\n * `Value` type union.\n *\n * The JSON representation for `NullValue` is JSON `null`.\n */\nexport enum NullValue {\n  /** Null value. */\n  NULL_VALUE = 'NULL_VALUE',\n}\n\n/** @enumType */\nexport type NullValueWithLiterals = NullValue | 'NULL_VALUE';\n\n/**\n * `ListValue` is a wrapper around a repeated field of values.\n *\n * The JSON representation for `ListValue` is JSON array.\n */\nexport interface ListValue {\n  /** Repeated field of dynamically typed values. */\n  values?: any[];\n}\n\nexport interface AudioData {\n  /** Styling for the audio node's container. */\n  containerData?: PluginContainerData;\n  /** Audio file details. */\n  audio?: V1Media;\n  /** Sets whether the audio node's download button is disabled. Defaults to `false`. */\n  disableDownload?: boolean | null;\n  /** Cover image. */\n  coverImage?: V1Media;\n  /** Track name. */\n  name?: string | null;\n  /** Author name. */\n  authorName?: string | null;\n  /** An HTML version of the audio node. */\n  html?: string | null;\n}\n\nexport interface OrderedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n  /** List start number. */\n  start?: number | null;\n}\n\nexport interface BulletedListData {\n  /** Indentation level from 0-4. */\n  indentation?: number;\n  /** Offset level from 0-4. */\n  offset?: number | null;\n}\n\nexport interface BlockquoteData {\n  /** Indentation level from 1-4. */\n  indentation?: number;\n}\n\nexport interface CaptionData {\n  textStyle?: TextStyle;\n}\n\nexport interface LayoutCellData {\n  /** Size of the cell in 12 columns grid. */\n  colSpan?: number | null;\n}\n\nexport interface Metadata {\n  /** Schema version. */\n  version?: number;\n  /**\n   * When the object was created.\n   * @readonly\n   * @deprecated\n   */\n  createdTimestamp?: Date | null;\n  /**\n   * When the object was most recently updated.\n   * @deprecated\n   */\n  updatedTimestamp?: Date | null;\n  /** Object ID. */\n  _id?: string | null;\n}\n\nexport interface DocumentStyle {\n  /** Styling for H1 nodes. */\n  headerOne?: TextNodeStyle;\n  /** Styling for H2 nodes. */\n  headerTwo?: TextNodeStyle;\n  /** Styling for H3 nodes. */\n  headerThree?: TextNodeStyle;\n  /** Styling for H4 nodes. */\n  headerFour?: TextNodeStyle;\n  /** Styling for H5 nodes. */\n  headerFive?: TextNodeStyle;\n  /** Styling for H6 nodes. */\n  headerSix?: TextNodeStyle;\n  /** Styling for paragraph nodes. */\n  paragraph?: TextNodeStyle;\n  /** Styling for block quote nodes. */\n  blockquote?: TextNodeStyle;\n  /** Styling for code block nodes. */\n  codeBlock?: TextNodeStyle;\n}\n\nexport interface TextNodeStyle {\n  /** The decorations to apply to the node. */\n  decorations?: Decoration[];\n  /** Padding and background color for the node. */\n  nodeStyle?: NodeStyle;\n  /** Line height for text in the node. */\n  lineHeight?: string | null;\n}\n\nexport interface Media {\n  /**\n   * Main media (image, video, etc.) associated with this product.\n   * @readonly\n   */\n  main?: ProductMedia;\n  /**\n   * All media items.\n   * > **Note:** Returned only when you pass `\"MEDIA_ITEMS_INFO\"` to the `fields` array in Products API requests.\n   */\n  itemsInfo?: MediaItemsInfo;\n}\n\nexport interface ProductMedia\n  extends ProductMediaSetByOneOf,\n    ProductMediaMediaOneOf {\n  /**\n   * Set media by ID of an existing file in Wix Media Manager.\n   * @minLength 1\n   * @maxLength 200\n   */\n  _id?: string;\n  /**\n   * Set media using an external media URL.\n   * @format WEB_URL\n   */\n  url?: string;\n  /**\n   * Product image.\n   * @readonly\n   */\n  image?: string;\n  /**\n   * Product video.\n   * @readonly\n   */\n  video?: string;\n  /**\n   * Image alt text.\n   * @minLength 1\n   * @maxLength 1000\n   */\n  altText?: string | null;\n  /**\n   * Media display name.\n   * Allows to override the default media name. Can be passed only when `setBy: url`.\n   * @maxLength 80\n   */\n  displayName?: string | null;\n  /**\n   * Media type.\n   * @readonly\n   */\n  mediaType?: MediaTypeWithLiterals;\n  /**\n   * Media thumbnail.\n   * > **Note:** Returned only when you pass `\"THUMBNAIL\"` to the `fields` array in Products API requests.\n   */\n  thumbnail?: Thumbnail;\n  /**\n   * ID used to upload media to Wix Media Manager.\n   * @readonly\n   * @format GUID\n   */\n  uploadId?: string;\n}\n\n/** @oneof */\nexport interface ProductMediaSetByOneOf {\n  /**\n   * Set media by ID of an existing file in Wix Media Manager.\n   * @minLength 1\n   * @maxLength 200\n   */\n  _id?: string;\n  /**\n   * Set media using an external media URL.\n   * @format WEB_URL\n   */\n  url?: string;\n}\n\n/** @oneof */\nexport interface ProductMediaMediaOneOf {\n  /**\n   * Product image.\n   * @readonly\n   */\n  image?: string;\n  /**\n   * Product video.\n   * @readonly\n   */\n  video?: string;\n}\n\nexport interface VideoResolution {\n  /**\n   * Video URL.\n   * @format WEB_URL\n   */\n  url?: string;\n  /** Video height. */\n  height?: number;\n  /** Video width. */\n  width?: number;\n  /**\n   * Video format for example, mp4, hls.\n   * @maxLength 200\n   */\n  format?: string;\n}\n\nexport enum MediaType {\n  UNKNOWN_MEDIA_TYPE = 'UNKNOWN_MEDIA_TYPE',\n  /** Image media type. */\n  IMAGE = 'IMAGE',\n  /** Video media type. */\n  VIDEO = 'VIDEO',\n}\n\n/** @enumType */\nexport type MediaTypeWithLiterals =\n  | MediaType\n  | 'UNKNOWN_MEDIA_TYPE'\n  | 'IMAGE'\n  | 'VIDEO';\n\nexport interface Thumbnail {\n  /**\n   * Thumbnail url.\n   * @format WEB_URL\n   */\n  url?: string;\n  /** Thumbnail height. */\n  height?: number;\n  /** Thumbnail width. */\n  width?: number;\n  /**\n   * Thumbnail alt text.\n   * @minLength 1\n   * @maxLength 1000\n   */\n  altText?: string | null;\n}\n\nexport interface MediaItemsInfo {\n  /**\n   * All media items (images, videos etc) associated with this product.\n   * @maxSize 15\n   */\n  items?: ProductMedia[];\n}\n\n/**\n * The SEO schema object contains data about different types of meta tags. It makes sure that the information about your page is presented properly to search engines.\n * The search engines use this information for ranking purposes, or to display snippets in the search results.\n * This data will override other sources of tags (for example patterns) and will be included in the <head> section of the HTML document, while not being displayed on the page itself.\n */\nexport interface SeoSchema {\n  /** SEO tag information. */\n  tags?: Tag[];\n  /** SEO general settings. */\n  settings?: Settings;\n}\n\nexport interface Keyword {\n  /** Keyword value. */\n  term?: string;\n  /** Whether the keyword is the main focus keyword. */\n  isMain?: boolean;\n  /**\n   * The source that added the keyword terms to the SEO settings.\n   * @maxLength 1000\n   */\n  origin?: string | null;\n}\n\nexport interface Tag {\n  /**\n   * SEO tag type.\n   *\n   *\n   * Supported values: `title`, `meta`, `script`, `link`.\n   */\n  type?: string;\n  /**\n   * A `{\"key\": \"value\"}` pair object where each SEO tag property (`\"name\"`, `\"content\"`, `\"rel\"`, `\"href\"`) contains a value.\n   * For example: `{\"name\": \"description\", \"content\": \"the description itself\"}`.\n   */\n  props?: Record<string, any> | null;\n  /** SEO tag meta data. For example, `{\"height\": 300, \"width\": 240}`. */\n  meta?: Record<string, any> | null;\n  /** SEO tag inner content. For example, `<title> inner content </title>`. */\n  children?: string;\n  /** Whether the tag is a custom tag. */\n  custom?: boolean;\n  /** Whether the tag is disabled. */\n  disabled?: boolean;\n}\n\nexport interface Settings {\n  /**\n   * Whether the Auto Redirect feature, which creates `301 redirects` on a slug change, is enabled.\n   *\n   *\n   * Default: `false` (Auto Redirect is enabled.)\n   */\n  preventAutoRedirect?: boolean;\n  /**\n   * User-selected keyword terms for a specific page.\n   * @maxSize 5\n   */\n  keywords?: Keyword[];\n}\n\nexport interface ConnectedOption extends ConnectedOptionOptionSettingsOneOf {\n  /** Choices settings. */\n  choicesSettings?: ChoicesSettings;\n  /**\n   * ID of a customization with `customizationType: PRODUCT_OPTION`.\n   * @minLength 1\n   * @maxLength 36\n   */\n  _id?: string | null;\n  /**\n   * Option name.\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string | null;\n  /** Option render type. */\n  optionRenderType?: ProductOptionRenderTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface ConnectedOptionOptionSettingsOneOf {\n  /** Choices settings. */\n  choicesSettings?: ChoicesSettings;\n}\n\nexport enum ProductOptionRenderType {\n  /** Not implemented. */\n  UNKNOWN_OPTION_RENDER_TYPE = 'UNKNOWN_OPTION_RENDER_TYPE',\n  /** Text choices. */\n  TEXT_CHOICES = 'TEXT_CHOICES',\n  /** Swatch choices. */\n  SWATCH_CHOICES = 'SWATCH_CHOICES',\n}\n\n/** @enumType */\nexport type ProductOptionRenderTypeWithLiterals =\n  | ProductOptionRenderType\n  | 'UNKNOWN_OPTION_RENDER_TYPE'\n  | 'TEXT_CHOICES'\n  | 'SWATCH_CHOICES';\n\nexport interface ChoicesSettings {\n  /**\n   * List of available choices for the option.\n   * @minSize 1\n   * @maxSize 100\n   * @immutable\n   */\n  choices?: ConnectedOptionChoice[];\n}\n\nexport interface ConnectedOptionChoice extends ConnectedOptionChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   */\n  colorCode?: string;\n  /**\n   * The id of the choice.\n   * @format GUID\n   */\n  choiceId?: string | null;\n  /**\n   * Product media overrides. When not empty only these images will be shown when such choices selected by customer. Otherwise all images of product.\n   * When several choices from different options selected only media filter present in `media_overrides` of ALL choices will be shown.\n   * For example if Color:red has images 1,2,3 and Material:Silk has images 2,3,5 then only images 2,3 will be shown when both of them selected.\n   * @maxSize 100\n   */\n  linkedMedia?: ProductMedia[];\n  /** The type of this choice. */\n  choiceType?: ChoiceTypeWithLiterals;\n  /**\n   * Choice name.\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string | null;\n  /**\n   * A flag that indicates if at least one variant with this choice is in stock in the default store's location.\n   * For example, a product with 'Color' and 'Size' options with variants: [Blue, Small] which is out of stock and [Red Large] which is in stock. For choice 'Blue' ths flag will be 'false' and for 'Red' the flag will be true\n   * @readonly\n   */\n  inStock?: boolean;\n  /**\n   * Whether at least one variant with this choice is visible.\n   *\n   * Default: `false`\n   * @readonly\n   */\n  visible?: boolean;\n}\n\n/** @oneof */\nexport interface ConnectedOptionChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   */\n  colorCode?: string;\n}\n\nexport enum ChoiceType {\n  UNKNOWN_CHOICE_TYPE = 'UNKNOWN_CHOICE_TYPE',\n  /** Text choice. */\n  CHOICE_TEXT = 'CHOICE_TEXT',\n  /** Single color choice. */\n  ONE_COLOR = 'ONE_COLOR',\n  /** Multiple colors choice. */\n  MULTIPLE_COLORS = 'MULTIPLE_COLORS',\n  /** Image choice. */\n  IMAGE = 'IMAGE',\n}\n\n/** @enumType */\nexport type ChoiceTypeWithLiterals =\n  | ChoiceType\n  | 'UNKNOWN_CHOICE_TYPE'\n  | 'CHOICE_TEXT'\n  | 'ONE_COLOR'\n  | 'MULTIPLE_COLORS'\n  | 'IMAGE';\n\nexport interface MultipleColors {\n  /**\n   * List of color codes.\n   * @minLength 3\n   * @maxLength 20\n   * @minSize 2\n   * @maxSize 2\n   */\n  colorCodes?: string[];\n}\n\nexport interface ConnectedModifier\n  extends ConnectedModifierModifierSettingsOneOf {\n  /** Free text modifier settings. */\n  freeTextSettings?: FreeTextSettings;\n  /** Choice settings. */\n  choicesSettings?: ModifierChoicesSettings;\n  /**\n   * ID of a customization with `customizationType: MODIFIER`.\n   * @minLength 1\n   * @maxLength 36\n   */\n  _id?: string | null;\n  /**\n   * Modifier title.\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string | null;\n  /** Modifier render type. */\n  modifierRenderType?: ModifierRenderTypeWithLiterals;\n  /** Whether customer input is required for this modifier. */\n  mandatory?: boolean;\n}\n\n/** @oneof */\nexport interface ConnectedModifierModifierSettingsOneOf {\n  /** Free text modifier settings. */\n  freeTextSettings?: FreeTextSettings;\n  /** Choice settings. */\n  choicesSettings?: ModifierChoicesSettings;\n}\n\nexport enum ModifierRenderType {\n  /** Not implemented. */\n  UNKNOWN_MODIFIER_RENDER_TYPE = 'UNKNOWN_MODIFIER_RENDER_TYPE',\n  /** Free text. */\n  FREE_TEXT = 'FREE_TEXT',\n  /** Text choices. */\n  TEXT_CHOICES = 'TEXT_CHOICES',\n  /** Swatch choices. */\n  SWATCH_CHOICES = 'SWATCH_CHOICES',\n}\n\n/** @enumType */\nexport type ModifierRenderTypeWithLiterals =\n  | ModifierRenderType\n  | 'UNKNOWN_MODIFIER_RENDER_TYPE'\n  | 'FREE_TEXT'\n  | 'TEXT_CHOICES'\n  | 'SWATCH_CHOICES';\n\nexport interface FreeTextSettings {\n  /** Minimum number of characters. */\n  minCharCount?: number;\n  /**\n   * Maximum number of characters.\n   * @max 500\n   */\n  maxCharCount?: number;\n  /**\n   * Default amount to be added to the product's price.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  defaultAddedPrice?: string | null;\n  /**\n   * Title of the text to be input by the customer.\n   * @minLength 1\n   * @maxLength 150\n   */\n  title?: string;\n}\n\nexport interface ModifierChoicesSettings {\n  /**\n   * List of modifier choices.\n   * @minSize 1\n   * @maxSize 100\n   * @immutable\n   */\n  choices?: ConnectedModifierChoice[];\n}\n\nexport interface ConnectedModifierChoice\n  extends ConnectedModifierChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   */\n  colorCode?: string;\n  /**\n   * Choice ID.\n   * @format GUID\n   */\n  choiceId?: string | null;\n  /**\n   * Product media.\n   * @maxSize 100\n   */\n  linkedMedia?: ProductMedia[];\n  /** Choice type. */\n  choiceType?: ChoiceTypeWithLiterals;\n  /**\n   * Modifier key. Used for eCommerce integration.\n   * @readonly\n   * @minLength 1\n   * @maxLength 50\n   */\n  key?: string;\n  /**\n   * Choice name.\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string | null;\n  /**\n   * Added price.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  addedPrice?: string | null;\n}\n\n/** @oneof */\nexport interface ConnectedModifierChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   */\n  colorCode?: string;\n}\n\nexport interface Brand {\n  /**\n   * Brand ID.\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * Brand name.\n   * @maxLength 50\n   */\n  name?: string | null;\n}\n\nexport interface InfoSection {\n  /**\n   * Info section ID.\n   * @format GUID\n   */\n  _id?: string | null;\n  /**\n   * Info section unique name.\n   * > **Note:** Returned only when you pass `\"INFO_SECTION\"` to the `fields` array in Products API requests.\n   * @maxLength 100\n   */\n  uniqueName?: string | null;\n  /**\n   * Info section title.\n   * > **Note:** Returned only when you pass `\"INFO_SECTION\"` to the `fields` array in Products API requests.\n   * @minLength 1\n   * @maxLength 50\n   * @readonly\n   */\n  title?: string | null;\n  /**\n   * Info section description using rich content.\n   * > **Note:** Returned only when you pass `\"INFO_SECTION_DESCRIPTION\"` to the `fields` array in Products API requests.\n   *\n   * <widget src=\"https://apps.wix.com/_serverless/ricos-playground-services/goto/api-component\" plugins=\"indent.emoji.divider.codeBlock.file.gallery.giphy.image.table.link.textHighlight.textColor\" exampleid=\"7dc9240e-d548-417a-abcf-0291b68b4303\">\n   * <a href=\"https://dev.wix.com/docs/ricos/api-reference/ricos-document\">See Ricos document reference</a>\n   * </widget>\n   * @readonly\n   */\n  description?: RichContent;\n  /**\n   * Info section description in HTML.\n   *\n   * When provided on create/update, this string must be a valid HTML. It will then be converted to rich content.\n   * `plainDescription` is ignored when value is also passed to the `description` field.\n   * > **Note:** Returned only when you pass `\"INFO_SECTION_PLAIN_DESCRIPTION\"` to the `fields` array in Products API requests.\n   * @maxLength 16000\n   */\n  plainDescription?: string | null;\n}\n\nexport interface Ribbon {\n  /**\n   * Ribbon ID.\n   * @minLength 1\n   * @maxLength 36\n   */\n  _id?: string | null;\n  /**\n   * Ribbon name.\n   * @maxLength 30\n   */\n  name?: string | null;\n}\n\nexport interface ProductCategoriesInfo {\n  /**\n   * A list of categories related to product.\n   * @readonly\n   * @maxSize 2000\n   */\n  categories?: ProductCategory[];\n}\n\nexport interface ProductCategory {\n  /**\n   * Category ID.\n   * @format GUID\n   */\n  _id?: string;\n  /**\n   * Index location of the product within the category, which can be utilized for sorting products in a specific category. For detailed instructions on how to set this up, refer to the [Add and arrange products in category](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/sample-use-cases-and-flows#add-and-arrange-products-in-category) sample flow.\n   * @max 200\n   */\n  index?: number | null;\n}\n\nexport interface ProductCategoryIdsInfo {\n  /**\n   * A list of category ids related to product.\n   * @readonly\n   * @maxSize 2000\n   * @format GUID\n   */\n  categoryIds?: string[];\n}\n\nexport interface PriceRange {\n  /** Minimum value. */\n  minValue?: FixedMonetaryAmount;\n  /** Maximum value. */\n  maxValue?: FixedMonetaryAmount;\n}\n\nexport interface FixedMonetaryAmount {\n  /**\n   * Monetary amount. For example, `\"3.99\"`, or `\"-4.99\"` for a negative amount.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  amount?: string;\n  /**\n   * Formatted monetary amount. For example, `\"$3.99\"`.\n   * > **Note:** Returned only when you pass `\"CURRENCY\"` to the `fields` array in Products API requests.\n   * @readonly\n   * @maxLength 20\n   */\n  formattedAmount?: string | null;\n}\n\nexport interface Inventory {\n  /**\n   * Current availability status.\n   * @readonly\n   */\n  availabilityStatus?: AvailabilityStatusWithLiterals;\n  /**\n   * Current preorder status.\n   * @readonly\n   */\n  preorderStatus?: PreorderStatusWithLiterals;\n  /**\n   * Preorder availability status.\n   * @readonly\n   */\n  preorderAvailability?: ProductPreorderAvailabilityWithLiterals;\n}\n\nexport enum AvailabilityStatus {\n  UNKNOWN_AVAILABILITY_STATUS = 'UNKNOWN_AVAILABILITY_STATUS',\n  /** All variants are in stock and available for purchase. */\n  IN_STOCK = 'IN_STOCK',\n  /** All variants are out of stock. */\n  OUT_OF_STOCK = 'OUT_OF_STOCK',\n  /** Some variants are out of stock and some are in stock and available for purchase. */\n  PARTIALLY_OUT_OF_STOCK = 'PARTIALLY_OUT_OF_STOCK',\n}\n\n/** @enumType */\nexport type AvailabilityStatusWithLiterals =\n  | AvailabilityStatus\n  | 'UNKNOWN_AVAILABILITY_STATUS'\n  | 'IN_STOCK'\n  | 'OUT_OF_STOCK'\n  | 'PARTIALLY_OUT_OF_STOCK';\n\nexport enum PreorderStatus {\n  UNKNOWN_PREORDER_STATUS = 'UNKNOWN_PREORDER_STATUS',\n  /** All variants are enabled for preorder. */\n  ENABLED = 'ENABLED',\n  /** All variants are disabled for preorder. */\n  DISABLED = 'DISABLED',\n  /** Some variants are disabled and some are enabled for preorder. */\n  PARTIALLY_ENABLED = 'PARTIALLY_ENABLED',\n}\n\n/** @enumType */\nexport type PreorderStatusWithLiterals =\n  | PreorderStatus\n  | 'UNKNOWN_PREORDER_STATUS'\n  | 'ENABLED'\n  | 'DISABLED'\n  | 'PARTIALLY_ENABLED';\n\nexport enum ProductPreorderAvailability {\n  UNKNOWN_PREORDER_AVAILABILITY_STATUS = 'UNKNOWN_PREORDER_AVAILABILITY_STATUS',\n  /** All the product variants are available for preorder. */\n  ALL_VARIANTS = 'ALL_VARIANTS',\n  /** None of the product variants are available for preorder. */\n  NO_VARIANTS = 'NO_VARIANTS',\n  /** Some of the product variants are available for preorder. */\n  SOME_VARIANTS = 'SOME_VARIANTS',\n}\n\n/** @enumType */\nexport type ProductPreorderAvailabilityWithLiterals =\n  | ProductPreorderAvailability\n  | 'UNKNOWN_PREORDER_AVAILABILITY_STATUS'\n  | 'ALL_VARIANTS'\n  | 'NO_VARIANTS'\n  | 'SOME_VARIANTS';\n\nexport enum ProductType {\n  /** Not implemented. */\n  UNKNOWN_PRODUCT_TYPE = 'UNKNOWN_PRODUCT_TYPE',\n  /** Physical product. */\n  PHYSICAL = 'PHYSICAL',\n  /** Digital product. */\n  DIGITAL = 'DIGITAL',\n}\n\n/** @enumType */\nexport type ProductTypeWithLiterals =\n  | ProductType\n  | 'UNKNOWN_PRODUCT_TYPE'\n  | 'PHYSICAL'\n  | 'DIGITAL';\n\nexport interface PhysicalProperties {\n  /**\n   * Price per unit settings.\n   * > **Note:** Use this field only when relevant. For example, for products that are sold by weight, volume, or length.\n   */\n  pricePerUnit?: PricePerUnitSettings;\n  /**\n   * Fulfiller ID.\n   * @format GUID\n   */\n  fulfillerId?: string | null;\n  /**\n   * Product shipping weight range - Calculated from the lightest and heaviest variant shipping weights.\n   * @readonly\n   */\n  shippingWeightRange?: WeightRange;\n  /**\n   * Product price per unit range. The minimum and maximum price per unit of all the variants.\n   * @readonly\n   */\n  pricePerUnitRange?: PricePerUnitRange;\n  /**\n   * Weight measurement unit.\n   * > **Note:** Returned only when you pass `\"WEIGHT_MEASUREMENT_UNIT_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  weightMeasurementUnitInfo?: WeightMeasurementUnitInfo;\n  /**\n   * Delivery profile ID.\n   * @format GUID\n   */\n  deliveryProfileId?: string | null;\n}\n\nexport interface PricePerUnitSettings {\n  /**\n   * Quantity.\n   * For example, to define price per per 100 grams, set this field to `100`.\n   * @min 0.01\n   * @max 999999999.99\n   */\n  quantity?: number;\n  /**\n   * Measurement unit.\n   * For example, to define price per 100 grams, set this field to \"G\".\n   */\n  measurementUnit?: MeasurementUnitWithLiterals;\n}\n\nexport interface WeightRange {\n  /**\n   * Minimum weight across all variants associated with this product.\n   * @max 999999999.99\n   */\n  minValue?: number;\n  /**\n   * Maximum weight across all variants associated with this product.\n   * @max 999999999.99\n   */\n  maxValue?: number;\n}\n\nexport interface PricePerUnitRange {\n  /** Minimum price per unit across all variants. */\n  minValue?: PricePerUnitRangePricePerUnit;\n  /** Maximum price per unit across all variants. */\n  maxValue?: PricePerUnitRangePricePerUnit;\n}\n\nexport interface PricePerUnitRangePricePerUnit {\n  /**\n   * Calculated value of price per unit. Takes into account pricePerUnit settings of product and variants and price of variants.\n   * For example if discounted price is 2$, product's price per unit setting is 1 Kg, variant price per unit setting is 0.5 Kg then this value is 4$ (means variant weight is 0.5 Kg and it costs 2$ but we want to show price per 1 Kg so we show 4$).\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  value?: string;\n  /**\n   * Price per unit info in the format of variant specific data / product setting, for example €4.00 / 1 Kg.\n   * > **Note:** This field is returned by the API only when you pass `fields: \"CURRENCY\"` in a request.\n   * @readonly\n   * @maxLength 100\n   */\n  description?: string | null;\n}\n\nexport interface WeightMeasurementUnitInfo {\n  /**\n   * Weight measurement unit.\n   * @readonly\n   */\n  weightMeasurementUnit?: WeightUnitWithLiterals;\n}\n\nexport interface BreadcrumbsInfo {\n  /**\n   * Breadcrumbs.\n   * @readonly\n   * @maxSize 5\n   */\n  breadcrumbs?: BreadCrumb[];\n}\n\nexport interface BreadCrumb {\n  /**\n   * Category ID.\n   * @format GUID\n   */\n  categoryId?: string;\n  /**\n   * Category name.\n   * @minLength 1\n   * @maxLength 80\n   */\n  categoryName?: string;\n  /**\n   * Category slug.\n   * @minLength 1\n   * @maxLength 100\n   */\n  categorySlug?: string;\n}\n\nexport interface VariantsInfo {\n  /**\n   * List of related variants.\n   * @minSize 1\n   * @maxSize 1000\n   */\n  variants?: Variant[];\n}\n\nexport interface Variant extends VariantTypedPropertiesOneOf {\n  /** Physical properties. Must be passed when `productType: PHYSICAL` */\n  physicalProperties?: VariantPhysicalProperties;\n  /** Digital properties. Must be passed when `productType: DIGITAL` */\n  digitalProperties?: VariantDigitalProperties;\n  /**\n   * Variant ID.\n   * @format GUID\n   * @immutable\n   */\n  _id?: string | null;\n  /**\n   * Whether the variant is visible to site visitors.\n   *\n   * Default: `true`\n   */\n  visible?: boolean | null;\n  /**\n   * Variant SKU (stock keeping unit).\n   * @minLength 1\n   * @maxLength 40\n   */\n  sku?: string | null;\n  /**\n   * Variant barcode.\n   * @minLength 1\n   * @maxLength 40\n   */\n  barcode?: string | null;\n  /**\n   * List of choices that define the product's variant, which requires exactly one choice per product option.\n   * Must use `optionChoiceNames` in all requests this field is required.\n   * Empty only for default variants of unmanaged products.\n   * @maxSize 6\n   * @immutable\n   */\n  choices?: OptionChoice[];\n  /** Variant price. */\n  price?: PriceInfo;\n  /**\n   * Variant revenue details.\n   *\n   * > **Note:** Returned only when the following conditions are met:\n   * > + You pass `\"MERCHANT_DATA\"` to the `fields` array in Products API requests.\n   * > + Your app has the required `SCOPE.STORES.PRODUCT_READ_ADMIN` permission scope.\n   */\n  revenueDetails?: RevenueDetails;\n  /**\n   * Variant media.\n   * @readonly\n   */\n  media?: ProductMedia;\n  /**\n   * Subscription prices calculated by applying subscription discount to the variant `price.actual_price`.\n   * > **Note:** Returned only when you pass `\"SUBSCRIPTION_PRICES_INFO\"` to the `fields` array in Products API requests.\n   * @readonly\n   */\n  subscriptionPricesInfo?: SubscriptionPricesInfo;\n  /**\n   * Variant inventory status.\n   * @readonly\n   */\n  inventoryStatus?: InventoryStatus;\n}\n\n/** @oneof */\nexport interface VariantTypedPropertiesOneOf {\n  /** Physical properties. Must be passed when `productType: PHYSICAL` */\n  physicalProperties?: VariantPhysicalProperties;\n  /** Digital properties. Must be passed when `productType: DIGITAL` */\n  digitalProperties?: VariantDigitalProperties;\n}\n\nexport interface OptionChoice {\n  /** Option and choice IDs. These match the IDs of the option and choice from the product's options field. */\n  optionChoiceIds?: OptionChoiceIds;\n  /**\n   * Option and choice names.\n   * This needs to be used in all requests `OptionChoice` is needed, and all `OptionChoiceNames` fields are required.\n   * > **Note:** Returned only when you pass `\"VARIANT_OPTION_CHOICE_NAMES\"` to the `fields` array in Products API requests.\n   */\n  optionChoiceNames?: OptionChoiceNames;\n}\n\nexport interface OptionChoiceIds {\n  /**\n   * Option ID.\n   * @minLength 1\n   * @maxLength 36\n   * @immutable\n   */\n  optionId?: string;\n  /**\n   * Choice ID.\n   * @format GUID\n   * @immutable\n   */\n  choiceId?: string;\n}\n\nexport interface OptionChoiceNames {\n  /**\n   * Option name.\n   * @minLength 1\n   */\n  optionName?: string;\n  /**\n   * Choice name.\n   * @minLength 1\n   */\n  choiceName?: string;\n  /** Render type. */\n  renderType?: ProductOptionRenderTypeWithLiterals;\n}\n\nexport interface PriceInfo {\n  /** Variant price. Must be greater or equal to 0. */\n  actualPrice?: FixedMonetaryAmount;\n  /** The compare-at-price represents the original price of a product before any discount. It is optional and should only be set if a discount applies. When set, it must be higher than the current price to reflect accurate savings. */\n  compareAtPrice?: FixedMonetaryAmount;\n}\n\nexport interface RevenueDetails {\n  /** Item cost. */\n  cost?: FixedMonetaryAmount;\n  /**\n   * Profit. Calculated by reducing `cost` from `discountedPrice`.\n   * @readonly\n   */\n  profit?: FixedMonetaryAmount;\n  /**\n   * Profit Margin. Calculated by dividing `profit` by `discountedPrice`.\n   * The result is rounded to 4 decimal places.\n   * @readonly\n   * @max 1\n   */\n  profitMargin?: number;\n}\n\nexport interface VariantPhysicalProperties {\n  /**\n   * Variant shipping weight.\n   * product.physicalProperties.shipping_weight_range values are taken from here.\n   * @max 999999999.99\n   */\n  weight?: number | null;\n  /**\n   * Price per unit info, in order to show price per unit on the product page.\n   * For example if one sells cheese and defines 100g here then we know that buying this variant buyer receives 100g of cheese.\n   * But on product page price will be displayed for units defined on product level. See `pricePerUnit.value` to understand how it's calculated.\n   */\n  pricePerUnit?: PricePerUnit;\n}\n\nexport interface PricePerUnit {\n  /**\n   * Price per unit data for this variant.\n   * `measurementUnit` value must correspond to the measurement unit set on the product.\n   */\n  settings?: PricePerUnitSettings;\n  /**\n   * Calculated value of price per unit. Takes into account `pricePerUnit` settings of parent product, of this variant, and discounted price of variant.\n   * For example if discounted price is 2$, product's price per unit setting is 1 Kg, variant price per unit setting is 0.5 Kg then this value is 4$ (means variant weight is 0.5 Kg and it costs 2$ but we want to show price per 1 Kg so we show 4$).\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  value?: string;\n  /**\n   * Price per unit description.\n   * > **Note:** Returned only when you pass `\"CURRENCY\"` to the `fields` array in Products API requests.\n   * @readonly\n   * @maxLength 100\n   */\n  description?: string | null;\n}\n\nexport interface VariantDigitalProperties {\n  /** Digital file which will be downloaded by customer after successful purchase. */\n  digitalFile?: SecuredMedia;\n}\n\nexport interface SecuredMedia {\n  /**\n   * Media ID in media manager.\n   * @minLength 1\n   * @maxLength 100\n   */\n  _id?: string;\n  /**\n   * Original file name.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   */\n  fileName?: string;\n  /**\n   * Original file size.\n   * @minLength 1\n   * @maxLength 1000\n   * @readonly\n   * @format DECIMAL_VALUE\n   * @decimalValue options { maxScale:0 }\n   */\n  fileSize?: string | null;\n  /**\n   * File type.\n   * @readonly\n   */\n  fileType?: FileTypeWithLiterals;\n}\n\nexport enum FileType {\n  /** Unspecified file type. */\n  UNSPECIFIED = 'UNSPECIFIED',\n  /** Secure picture file. */\n  SECURE_PICTURE = 'SECURE_PICTURE',\n  /** Secure video file. */\n  SECURE_VIDEO = 'SECURE_VIDEO',\n  /** Secure document file. */\n  SECURE_DOCUMENT = 'SECURE_DOCUMENT',\n  /** Secure music file. */\n  SECURE_MUSIC = 'SECURE_MUSIC',\n  /** Secure archive file. */\n  SECURE_ARCHIVE = 'SECURE_ARCHIVE',\n}\n\n/** @enumType */\nexport type FileTypeWithLiterals =\n  | FileType\n  | 'UNSPECIFIED'\n  | 'SECURE_PICTURE'\n  | 'SECURE_VIDEO'\n  | 'SECURE_DOCUMENT'\n  | 'SECURE_MUSIC'\n  | 'SECURE_ARCHIVE';\n\nexport interface SubscriptionPricesInfo {\n  /**\n   * Subscription prices.\n   * @maxSize 6\n   */\n  subscriptionPrices?: SubscriptionPrice[];\n}\n\nexport interface SubscriptionPrice {\n  /**\n   * Subscription ID.\n   * @format GUID\n   * @readonly\n   */\n  subscriptionId?: string;\n  /**\n   * Subscription price calculated by applying subscription discount to the variant `price.actual_price`\n   * @readonly\n   */\n  price?: FixedMonetaryAmount;\n  /**\n   * Price per unit info.\n   * @readonly\n   */\n  pricePerUnit?: SubscriptionPricePerUnit;\n}\n\nexport interface SubscriptionPricePerUnit {\n  /**\n   * Calculated value of price per unit. Takes into account `pricePerUnit` settings of parent product, `pricePerUnit` settings of this variant, and the variant subscription price.\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  value?: string;\n  /**\n   * Price per unit description.\n   * > **Note:** Returned only when you pass `\"CURRENCY\"` to the `fields` array in Products API requests.\n   * @readonly\n   * @maxLength 20\n   */\n  description?: string | null;\n}\n\nexport interface InventoryStatus {\n  /** Whether the variant is in stock. */\n  inStock?: boolean;\n  /** Whether preorder is enabled for this variant. */\n  preorderEnabled?: boolean;\n}\n\nexport interface ExtendedFields {\n  /**\n   * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.\n   * The value of each key is structured according to the schema defined when the extended fields were configured.\n   *\n   * You can only access fields for which you have the appropriate permissions.\n   *\n   * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).\n   */\n  namespaces?: Record<string, Record<string, any>>;\n}\n\nexport interface SubscriptionDetails {\n  /**\n   * Subscriptions.\n   * @minSize 1\n   * @maxSize 6\n   */\n  subscriptions?: Subscription[];\n  /**\n   * Whether to allow one-time purchases in addition to subscription-based purchases.\n   *\n   * Default: `false`\n   */\n  allowOneTimePurchases?: boolean | null;\n}\n\nexport interface Subscription extends SubscriptionCyclesOneOf {\n  /** Whether subscription is renewed automatically at the end of each period. Cannot be `false`, instead set `billingCycles`. */\n  autoRenewal?: boolean;\n  /**\n   * Number of billing cycles before subscription ends.\n   * @min 2\n   * @max 999\n   */\n  billingCycles?: number;\n  /**\n   * Subscription ID.\n   * @format GUID\n   * @immutable\n   */\n  _id?: string | null;\n  /**\n   * Subscription title.\n   * @minLength 1\n   * @maxLength 20\n   */\n  title?: string;\n  /**\n   * Subscription description.\n   * @maxLength 60\n   */\n  description?: string | null;\n  /**\n   * Whether the subscription is visible to site visitors.\n   *\n   * Default: `true`\n   */\n  visible?: boolean | null;\n  /**\n   * Frequency of recurring payment.\n   * For example, if `frequency: MONTH` and `billingCycles: 6`; payment will be made monthly for 6 months.\n   */\n  frequency?: SubscriptionFrequencyWithLiterals;\n  /**\n   * Interval of recurring payment. Default: `1`. For example, if `frequency: MONTH`, `billingCycles: 3` and `interval: 2`; payment will be made every 2 months for a total of 6 months.\n   * @min 1\n   * @max 50\n   */\n  interval?: number | null;\n  /**\n   * Discount info (optional).\n   * For example, a $20 discount would be `amount: 20`, `type: AMOUNT`.\n   */\n  discount?: SubscriptionDiscount;\n}\n\n/** @oneof */\nexport interface SubscriptionCyclesOneOf {\n  /** Whether subscription is renewed automatically at the end of each period. Cannot be `false`, instead set `billingCycles`. */\n  autoRenewal?: boolean;\n  /**\n   * Number of billing cycles before subscription ends.\n   * @min 2\n   * @max 999\n   */\n  billingCycles?: number;\n}\n\n/** Frequency unit of recurring payment */\nexport enum SubscriptionFrequency {\n  UNDEFINED = 'UNDEFINED',\n  DAY = 'DAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH',\n  YEAR = 'YEAR',\n}\n\n/** @enumType */\nexport type SubscriptionFrequencyWithLiterals =\n  | SubscriptionFrequency\n  | 'UNDEFINED'\n  | 'DAY'\n  | 'WEEK'\n  | 'MONTH'\n  | 'YEAR';\n\nexport interface SubscriptionDiscount\n  extends SubscriptionDiscountDiscountOneOf {\n  /**\n   * Amount to discount from the variant discounted_price.\n   * @decimalValue options { gt:0, lte:999999999, maxScale:3 }\n   */\n  amountOff?: string;\n  /**\n   * Percentage to discount from variant discounted_price.\n   * @min 0.1\n   * @max 99.9\n   */\n  percentOff?: number;\n  /** Discount type. */\n  type?: DiscountTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface SubscriptionDiscountDiscountOneOf {\n  /**\n   * Amount to discount from the variant discounted_price.\n   * @decimalValue options { gt:0, lte:999999999, maxScale:3 }\n   */\n  amountOff?: string;\n  /**\n   * Percentage to discount from variant discounted_price.\n   * @min 0.1\n   * @max 99.9\n   */\n  percentOff?: number;\n}\n\nexport enum DiscountType {\n  UNKNOWN_DISCOUNT = 'UNKNOWN_DISCOUNT',\n  /** Discount by a specific amount. */\n  AMOUNT = 'AMOUNT',\n  /** Discount by a percentage. */\n  PERCENT = 'PERCENT',\n}\n\n/** @enumType */\nexport type DiscountTypeWithLiterals =\n  | DiscountType\n  | 'UNKNOWN_DISCOUNT'\n  | 'AMOUNT'\n  | 'PERCENT';\n\nexport interface VariantSummary {\n  /**\n   * The total number of variants for the product.\n   * @readonly\n   */\n  variantCount?: number;\n}\n\nexport interface MinVariantPriceInfo {\n  /**\n   * Subscription price calculated by applying subscription discount to the variant `price.actualPrice`\n   * @readonly\n   */\n  minSubscriptionPrice?: FixedMonetaryAmount;\n  /**\n   * Subscription price per unit calculated value of price per unit.\n   * Takes into account `pricePerUnit` settings of parent product, `pricePerUnit` settings of this variant, and the variant subscription price.\n   * @readonly\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  minSubscriptionPricePerUnit?: string | null;\n  /**\n   * Variant price per unit.\n   * @readonly\n   */\n  pricePerUnitData?: PricePerUnit;\n  /**\n   * Variant SKU (stock keeping unit).\n   * @readonly\n   * @minLength 1\n   * @maxLength 40\n   */\n  sku?: string | null;\n  /**\n   * Variant shipping weight.\n   * @readonly\n   * @max 999999999.99\n   */\n  weight?: number | null;\n  /**\n   * Variant revenue details.\n   *\n   * > **Note:** Returned only when the following conditions are met:\n   * > + You pass `\"MERCHANT_DATA\"` to the `fields` array in Products API requests.\n   * > + Your app has the required `SCOPE.STORES.PRODUCT_READ_ADMIN` permission scope.\n   * @readonly\n   */\n  revenueDetails?: RevenueDetails;\n  /** Variant price. Must be greater or equal to 0. */\n  actualPrice?: FixedMonetaryAmount;\n  /** The compare-at-price represents the original price of a product before any discount. It is optional and should only be set if a discount applies. When set, it must be higher than the current price to reflect accurate savings. */\n  compareAtPrice?: FixedMonetaryAmount;\n}\n\nexport interface MigrateProductVariantsResponse {}\n\nexport interface RecoverProductVariantsRequest {}\n\nexport interface RecoverProductVariantsResponse {}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\ntype ReadOnlyVariantNonNullablePaths =\n  | `physicalProperties.pricePerUnit.settings.quantity`\n  | `physicalProperties.pricePerUnit.settings.measurementUnit`\n  | `physicalProperties.pricePerUnit.value`\n  | `digitalProperties.digitalFile._id`\n  | `digitalProperties.digitalFile.fileName`\n  | `digitalProperties.digitalFile.fileType`\n  | `_id`\n  | `optionChoices`\n  | `optionChoices.${number}.optionChoiceIds.optionId`\n  | `optionChoices.${number}.optionChoiceIds.choiceId`\n  | `optionChoices.${number}.optionChoiceNames.optionName`\n  | `optionChoices.${number}.optionChoiceNames.choiceName`\n  | `optionChoices.${number}.optionChoiceNames.renderType`\n  | `price.actualPrice.amount`\n  | `revenueDetails.cost.amount`\n  | `revenueDetails.profitMargin`\n  | `media._id`\n  | `media.url`\n  | `media.mediaType`\n  | `media.thumbnail.url`\n  | `media.thumbnail.height`\n  | `media.thumbnail.width`\n  | `media.uploadId`\n  | `subscriptionPricesInfo.subscriptionPrices`\n  | `subscriptionPricesInfo.subscriptionPrices.${number}.subscriptionId`\n  | `subscriptionPricesInfo.subscriptionPrices.${number}.price.amount`\n  | `subscriptionPricesInfo.subscriptionPrices.${number}.pricePerUnit.value`\n  | `inventoryStatus.inStock`\n  | `inventoryStatus.preorderEnabled`\n  | `productData.physicalProperties.weightMeasurementUnitInfo.weightMeasurementUnit`\n  | `productData.productId`\n  | `productData.productType`;\n\n/**\n * Retrieves a list of ReadOnlyVariants, given the provided [paging, filtering, and sorting][1].\n * Up to 1,000 ReadOnlyVariants can be returned per request.\n * To learn how to query ReadOnlyVariants, see [API Query Language][2].\n * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n * @internal\n * @documentationMaturity preview\n * @permissionId WIX_STORES.READ_ONLY_VARIANT_READ\n * @permissionId WIX_STORES.READ_ONLY_VARIANT_READ_HIDDEN\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.QueryVariants\n */\nexport function queryVariants(\n  options?: QueryVariantsOptions\n): VariantsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    ReadOnlyVariant,\n    'CURSOR',\n    QueryVariantsRequest,\n    QueryVariantsResponse\n  >({\n    func: async (payload: QueryVariantsRequest) => {\n      const reqOpts = ambassadorWixStoresCatalogV3ReadOnlyVariant.queryVariants(\n        { ...payload, ...(options ?? {}) }\n      );\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryVariantsRequest['query']) => {\n      const args = [query, options] as [\n        QueryVariantsRequest['query'],\n        QueryVariantsOptions\n      ];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({ data }: HttpResponse<QueryVariantsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTImageToSDKImage,\n            paths: [{ path: 'variants.media.image' }],\n          },\n          {\n            transformFn: transformRESTVideoV2ToSDKVideoV2,\n            paths: [{ path: 'variants.media.video' }],\n          },\n        ])\n      );\n\n      return {\n        items: transformedData?.variants,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\nexport interface QueryVariantsOptions {\n  /**\n   * A list of requested fields to be included in the response.\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[] | undefined;\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface VariantsQueryResult extends QueryCursorResult {\n  items: ReadOnlyVariant[];\n  query: VariantsQueryBuilder;\n  next: () => Promise<VariantsQueryResult>;\n  prev: () => Promise<VariantsQueryResult>;\n}\n\nexport interface VariantsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName: '_id' | 'productData.productId',\n    value: string\n  ) => VariantsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName: '_id' | 'productData.productId',\n    value: any[]\n  ) => VariantsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName: '_id' | 'productData.productId',\n    value: any\n  ) => VariantsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName: '_id' | 'productData.productId',\n    value: boolean\n  ) => VariantsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  ascending: (\n    ...propertyNames: Array<'_id' | 'productData.productId'>\n  ) => VariantsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  descending: (\n    ...propertyNames: Array<'_id' | 'productData.productId'>\n  ) => VariantsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => VariantsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => VariantsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<VariantsQueryResult>;\n}\n\n/**\n * Search Variants using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n * >**Notes:**\n * + If you don't have permissions to read non visible products then variants related to non-visible products will be filtered out from response.\n * In such case non visible variants also will be filtered out.\n * @param search - WQL expression\n * @internal\n * @documentationMaturity preview\n * @requiredField search\n * @permissionId WIX_STORES.READ_ONLY_VARIANT_READ\n * @permissionId WIX_STORES.READ_ONLY_VARIANT_READ_HIDDEN\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.SearchVariants\n */\nexport async function searchVariants(\n  search: ReadOnlyVariantSearch,\n  options?: SearchVariantsOptions\n): Promise<\n  NonNullablePaths<\n    SearchVariantsResponse,\n    | {\n        [P in ReadOnlyVariantNonNullablePaths]: `variants.${number}.${P}`;\n      }[ReadOnlyVariantNonNullablePaths]\n    | `aggregationData.results`\n    | `aggregationData.results.${number}.scalar.type`\n    | `aggregationData.results.${number}.scalar.value`\n    | `aggregationData.results.${number}.name`\n    | `aggregationData.results.${number}.type`\n    | `aggregationData.results.${number}.fieldPath`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    search: search,\n    fields: options?.fields,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3ReadOnlyVariant.searchVariants(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'variants.media.image' }],\n        },\n        {\n          transformFn: transformRESTVideoV2ToSDKVideoV2,\n          paths: [{ path: 'variants.media.video' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { search: '$[0]', fields: '$[1].fields' },\n        singleArgumentUnchanged: false,\n      },\n      ['search', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface SearchVariantsOptions {\n  /**\n   * A list of requested fields to be included in the response.\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface ReadOnlyVariantSearchSpec extends SearchSpec {\n  aggregatable: [\n    'barcode',\n    'internalMetadata.rowState',\n    'inventoryStatus.inStock',\n    'inventoryStatus.preorderEnabled',\n    'optionChoices.optionChoiceIds.choiceId',\n    'optionChoices.optionChoiceIds.optionId',\n    'price.actualPrice.amount',\n    'price.compareAtPrice.amount',\n    'productData.directCategoryIds',\n    'productData.name',\n    'productData.productId',\n    'productData.productType',\n    'productData.slug',\n    'productData.visible',\n    'productData.visibleInPos',\n    'sku',\n    'visible'\n  ];\n  paging: 'cursor';\n  wql: [\n    {\n      operators: ['$hasAll', '$hasSome'];\n      fields: [\n        'optionChoices.optionChoiceIds.choiceId',\n        'optionChoices.optionChoiceIds.optionId'\n      ];\n      sort: 'NONE';\n    },\n    {\n      operators: '*';\n      fields: [\n        'barcode',\n        'internalMetadata.rowState',\n        'inventoryStatus.inStock',\n        'inventoryStatus.preorderEnabled',\n        'price.actualPrice.amount',\n        'price.compareAtPrice.amount',\n        'productData.directCategoryIds',\n        'productData.name',\n        'productData.productId',\n        'productData.productType',\n        'productData.slug',\n        'productData.visible',\n        'productData.visibleInPos',\n        'sku',\n        'visible'\n      ];\n      sort: 'NONE';\n    }\n  ];\n}\n\nexport type CommonSearchWithEntityContext = SearchSdkType<\n  ReadOnlyVariant,\n  ReadOnlyVariantSearchSpec\n>;\nexport type ReadOnlyVariantSearch = {\n  /** \n  Cursor pointing to page of results.\n  When requesting 'cursor_paging.cursor', no `filter`, `sort` or `search` can be provided.  \n  */\n  cursorPaging?: {\n    /** \n  Maximum number of items to return in the results. \n  @max: 1000 \n  */\n    limit?:\n      | NonNullable<CommonSearchWithEntityContext['cursorPaging']>['limit']\n      | null;\n    /** \n  Pointer to the next or previous page in the list of results.\n\n  Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n  Not relevant for the first request. \n  @maxLength: 16000 \n  */\n    cursor?:\n      | NonNullable<CommonSearchWithEntityContext['cursorPaging']>['cursor']\n      | null;\n  };\n  /** \n  A filter object. See documentation [here](https://bo.wix.com/wix-docs/rnd/platformization-guidelines/api-query-language#platformization-guidelines_api-query-language_defining-in-protobuf)  \n  */\n  filter?: CommonSearchWithEntityContext['filter'] | null;\n  /** \n  Sort object in the form [{\"fieldName\":\"sortField1\"},{\"fieldName\":\"sortField2\",\"direction\":\"DESC\"}] \n  @maxSize: 10 \n  */\n  sort?: {\n    /** \n  Name of the field to sort by. \n  @maxLength: 512 \n  */\n    fieldName?: NonNullable<\n      CommonSearchWithEntityContext['sort']\n    >[number]['fieldName'];\n    /** \n  Sort order.  \n  */\n    order?: NonNullable<CommonSearchWithEntityContext['sort']>[number]['order'];\n  }[];\n  /** \n  Aggregations | Faceted search: refers to a way to explore large amounts of data by displaying summaries about various partitions of the data and later allowing to narrow the navigation to a specific partition. \n  @maxSize: 10 \n  */\n  aggregations?: {\n    /** \n  Value aggregation  \n  */\n    value?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['value'];\n    /** \n  Range aggregation  \n  */\n    range?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['range'];\n    /** \n  Scalar aggregation  \n  */\n    scalar?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['scalar'];\n    /** \n  Date histogram aggregation  \n  */\n    dateHistogram?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['dateHistogram'];\n    /** \n  Nested aggregation  \n  */\n    nested?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['nested'];\n    /** \n  User-defined name of aggregation, should be unique, will appear in aggregation results \n  @maxLength: 100 \n  */\n    name?:\n      | NonNullable<\n          CommonSearchWithEntityContext['aggregations']\n        >[number]['name']\n      | null;\n    /** \n  Type of aggregation, client must provide matching aggregation field below  \n  */\n    type?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['type'];\n    /** \n  Field to aggregate by, use dot notation to specify json path \n  @maxLength: 200 \n  */\n    fieldPath?: NonNullable<\n      CommonSearchWithEntityContext['aggregations']\n    >[number]['fieldPath'];\n  }[];\n  /** \n  Free text to match in searchable fields  \n  */\n  search?: {\n    /** \n  Defines how separate search terms in `expression` are combined  \n  */\n    mode?: NonNullable<CommonSearchWithEntityContext['search']>['mode'];\n    /** \n  Search term or expression \n  @maxLength: 100 \n  */\n    expression?:\n      | NonNullable<CommonSearchWithEntityContext['search']>['expression']\n      | null;\n    /** \n  Fields to search in. If empty - will search in all searchable fields. Use dot notation to specify json path \n  @maxLength: 200,\n  @maxSize: 20 \n  */\n    fields?: NonNullable<CommonSearchWithEntityContext['search']>['fields'];\n    /** \n  Flag if should use auto fuzzy search (allowing typos by a managed proximity algorithm)  \n  */\n    fuzzy?: NonNullable<CommonSearchWithEntityContext['search']>['fuzzy'];\n  };\n  /** \n  UTC offset or IANA time zone. Valid values are\n  ISO 8601 UTC offsets, such as +02:00 or -06:00,\n  and IANA time zone IDs, such as Europe/Rome\n\n  Affects all filters and aggregations returned values.\n  You may override this behavior in a specific filter by providing\n  timestamps including time zone. e.g. `\"2023-12-20T10:52:34.795Z\"` \n  @maxLength: 50 \n  */\n  timeZone?: CommonSearchWithEntityContext['timeZone'] | null;\n};\n","import { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'api._api_base_domain_': [\n      {\n        srcPath: '/product-variants-reader',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/products/query-variants',\n        destPath: '/v3/products/query-variants',\n      },\n      {\n        srcPath: '/stores/v3/products/search-variants',\n        destPath: '/v3/products/search-variants',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_read-only-variants-v-3';\n\n/**\n * Retrieves a list of ReadOnlyVariants, given the provided [paging, filtering, and sorting][1].\n * Up to 1,000 ReadOnlyVariants can be returned per request.\n * To learn how to query ReadOnlyVariants, see [API Query Language][2].\n * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n */\nexport function queryVariants(payload: object): RequestOptionsFactory<any> {\n  function __queryVariants({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.read_only_variant',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.QueryVariants',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(\n        { protoPath: '/v3/products/query-variants', data: payload, host }\n      ),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'variants.physicalProperties.weight' },\n              {\n                path: 'variants.physicalProperties.pricePerUnit.settings.quantity',\n              },\n              { path: 'variants.revenueDetails.profitMargin' },\n            ],\n          },\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'variants.media.image.urlExpirationDate' },\n              { path: 'variants.media.video.urlExpirationDate' },\n              { path: 'variants.media.video.resolutions.urlExpirationDate' },\n              {\n                path: 'variants.media.video.resolutions.poster.urlExpirationDate',\n              },\n              { path: 'variants.media.video.posters.urlExpirationDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryVariants;\n}\n\n/**\n * Search Variants using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n * >**Notes:**\n * + If you don't have permissions to read non visible products then variants related to non-visible products will be filtered out from response.\n * In such case non visible variants also will be filtered out.\n */\nexport function searchVariants(payload: object): RequestOptionsFactory<any> {\n  function __searchVariants({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'search.aggregations.range.buckets.from' },\n          { path: 'search.aggregations.range.buckets.to' },\n          {\n            path: 'search.aggregations.nested.nestedAggregations.range.buckets.from',\n          },\n          {\n            path: 'search.aggregations.nested.nestedAggregations.range.buckets.to',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.read_only_variant',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.SearchVariants',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(\n        {\n          protoPath: '/v3/products/search-variants',\n          data: serializedData,\n          host,\n        }\n      ),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              { path: 'variants.physicalProperties.weight' },\n              { path: 'aggregationData.results.ranges.results.from' },\n              { path: 'aggregationData.results.ranges.results.to' },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from',\n              },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.range.from',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.range.to',\n              },\n              {\n                path: 'variants.physicalProperties.pricePerUnit.settings.quantity',\n              },\n              { path: 'variants.revenueDetails.profitMargin' },\n              { path: 'aggregationData.results.scalar.value' },\n              {\n                path: 'aggregationData.results.groupedByValue.results.nestedResults.scalar.value',\n              },\n              {\n                path: 'aggregationData.results.nested.results.results.*.scalar.value',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'variants.media.image.urlExpirationDate' },\n              { path: 'variants.media.video.urlExpirationDate' },\n              { path: 'variants.media.video.resolutions.urlExpirationDate' },\n              {\n                path: 'variants.media.video.resolutions.poster.urlExpirationDate',\n              },\n              { path: 'variants.media.video.posters.urlExpirationDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __searchVariants;\n}\n","import { HttpClient } from '@wix/sdk-types';\nimport {\n  QueryVariantsOptions,\n  ReadOnlyVariantSearch,\n  SearchVariantsOptions,\n  SearchVariantsResponse,\n  VariantsQueryBuilder,\n  queryVariants as universalQueryVariants,\n  searchVariants as universalSearchVariants,\n} from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/stores' };\n\n/** @internal */\nexport function queryVariants(httpClient: HttpClient): QueryVariantsSignature {\n  return (options?: QueryVariantsOptions) =>\n    universalQueryVariants(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryVariantsSignature {\n  /**\n   * Retrieves a list of ReadOnlyVariants, given the provided [paging, filtering, and sorting][1].\n   * Up to 1,000 ReadOnlyVariants can be returned per request.\n   * To learn how to query ReadOnlyVariants, see [API Query Language][2].\n   * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging\n   * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language\n   */\n  (options?: QueryVariantsOptions | undefined): VariantsQueryBuilder;\n}\n\n/** @internal */\nexport function searchVariants(\n  httpClient: HttpClient\n): SearchVariantsSignature {\n  return (search: ReadOnlyVariantSearch, options?: SearchVariantsOptions) =>\n    universalSearchVariants(\n      search,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface SearchVariantsSignature {\n  /**\n   * Search Variants using [WQL - Wix Query Language](https://dev.wix.com/api/rest/getting-started/api-query-language)\n   * >**Notes:**\n   * + If you don't have permissions to read non visible products then variants related to non-visible products will be filtered out from response.\n   * In such case non visible variants also will be filtered out.\n   * @param - WQL expression\n   */\n  (\n    search: ReadOnlyVariantSearch,\n    options?: SearchVariantsOptions | undefined\n  ): Promise<SearchVariantsResponse>;\n}\n\nexport {\n  ActionEvent,\n  Aggregation,\n  AggregationData,\n  AggregationDateHistogramAggregation,\n  AggregationKindOneOf,\n  AggregationNestedAggregation,\n  AggregationRangeAggregation,\n  AggregationResults,\n  AggregationResultsResultOneOf,\n  AggregationResultsScalarResult,\n  AggregationScalarAggregation,\n  AggregationType,\n  AggregationValueAggregation,\n  AggregationValueAggregationOptionsOneOf,\n  Alignment,\n  AnchorData,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  AppType,\n  AudioData,\n  AvailabilityStatus,\n  Background,\n  BackgroundBackgroundOneOf,\n  BackgroundType,\n  BlockquoteData,\n  BookingData,\n  Border,\n  BorderColors,\n  Brand,\n  BreadCrumb,\n  BreadcrumbsInfo,\n  BulletedListData,\n  ButtonData,\n  CaptionData,\n  CellStyle,\n  ChoiceType,\n  ChoicesSettings,\n  CodeBlockData,\n  CollapsibleListData,\n  ColorData,\n  Colors,\n  CommonAggregation,\n  CommonAggregationKindOneOf,\n  CommonAggregationType,\n  CommonScalarType,\n  CommonSearchDetails,\n  CommonSortOrder,\n  CommonSorting,\n  CommonVideoResolution,\n  ConnectedModifier,\n  ConnectedModifierChoice,\n  ConnectedModifierChoiceValueOneOf,\n  ConnectedModifierModifierSettingsOneOf,\n  ConnectedOption,\n  ConnectedOptionChoice,\n  ConnectedOptionChoiceValueOneOf,\n  ConnectedOptionOptionSettingsOneOf,\n  Crop,\n  CursorPaging,\n  CursorPagingMetadata,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  CursorSearch,\n  CursorSearchPagingMethodOneOf,\n  Cursors,\n  DateHistogramAggregation,\n  DateHistogramAggregationInterval,\n  DateHistogramResult,\n  DateHistogramResults,\n  Decoration,\n  DecorationDataOneOf,\n  DecorationType,\n  DeprecatedSearchVariantsWithOffsetRequest,\n  DeprecatedSearchVariantsWithOffsetResponse,\n  Design,\n  Dimensions,\n  Direction,\n  DiscountType,\n  DividerData,\n  DocumentStyle,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EmbedData,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventData,\n  ExtendedFields,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  FileType,\n  FixedMonetaryAmount,\n  FontSizeData,\n  FontType,\n  FreeTextSettings,\n  GIF,\n  GIFData,\n  GIFType,\n  GalleryData,\n  GalleryOptions,\n  Gradient,\n  GroupByAggregation,\n  GroupByAggregationKindOneOf,\n  GroupByValueResults,\n  HTMLData,\n  HTMLDataDataOneOf,\n  HeadingData,\n  Height,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  Image,\n  ImageData,\n  ImageDataStyles,\n  IncludeMissingValuesOptions,\n  InfoSection,\n  InitialExpandedItems,\n  InternalMetadata,\n  InternalRowState,\n  Interval,\n  Inventory,\n  InventoryStatus,\n  Item,\n  ItemDataOneOf,\n  ItemStyle,\n  Keyword,\n  Layout,\n  LayoutCellData,\n  LayoutType,\n  LineStyle,\n  Link,\n  LinkData,\n  LinkDataOneOf,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  ListValue,\n  MapData,\n  MapSettings,\n  MapType,\n  MeasurementUnit,\n  Media,\n  MediaItemsInfo,\n  MediaType,\n  MentionData,\n  MessageEnvelope,\n  Metadata,\n  MigrateProductVariantsRequest,\n  MigrateProductVariantsResponse,\n  MinVariantPriceInfo,\n  MissingValues,\n  Mode,\n  ModifierChoicesSettings,\n  ModifierRenderType,\n  MultipleColors,\n  NestedAggregation,\n  NestedAggregationItem,\n  NestedAggregationItemKindOneOf,\n  NestedAggregationNestedAggregationItem,\n  NestedAggregationNestedAggregationItemKindOneOf,\n  NestedAggregationNestedAggregationType,\n  NestedAggregationResults,\n  NestedAggregationResultsResultOneOf,\n  NestedAggregationType,\n  NestedResultValue,\n  NestedResultValueResultOneOf,\n  NestedResults,\n  NestedValueAggregationResult,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  NodeType,\n  NullValue,\n  Oembed,\n  Option,\n  OptionChoice,\n  OptionChoiceIds,\n  OptionChoiceNames,\n  OptionDesign,\n  OptionLayout,\n  OrderedListData,\n  Orientation,\n  PDFSettings,\n  PagingMetadata,\n  ParagraphData,\n  Permissions,\n  PhysicalProperties,\n  PlatformOffsetSearch,\n  PlatformOffsetSearchPagingMethodOneOf,\n  PlatformPaging,\n  PlaybackOptions,\n  PluginContainerData,\n  PluginContainerDataAlignment,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Poll,\n  PollData,\n  PollDataLayout,\n  PollDesign,\n  PollLayout,\n  PollLayoutDirection,\n  PollLayoutType,\n  PollSettings,\n  Position,\n  PreorderStatus,\n  PriceInfo,\n  PricePerUnit,\n  PricePerUnitRange,\n  PricePerUnitRangePricePerUnit,\n  PricePerUnitSettings,\n  PriceRange,\n  Product,\n  ProductCategoriesInfo,\n  ProductCategory,\n  ProductCategoryIdsInfo,\n  ProductFields,\n  ProductFieldsTypedPropertiesOneOf,\n  ProductMedia,\n  ProductMediaMediaOneOf,\n  ProductMediaMediaType,\n  ProductMediaSetByOneOf,\n  ProductOptionRenderType,\n  ProductPreorderAvailability,\n  ProductType,\n  ProductTypedPropertiesOneOf,\n  QueryVariantsOptions,\n  QueryVariantsRequest,\n  QueryVariantsResponse,\n  RangeAggregation,\n  RangeAggregationRangeBucket,\n  RangeAggregationResult,\n  RangeBucket,\n  RangeResult,\n  RangeResults,\n  ReadOnlyVariant,\n  ReadOnlyVariantSearchSpec,\n  ReadOnlyVariantTypedPropertiesOneOf,\n  RecoverProductVariantsRequest,\n  RecoverProductVariantsResponse,\n  Rel,\n  RequestedFields,\n  RestoreInfo,\n  Results,\n  RevenueDetails,\n  Ribbon,\n  RichContent,\n  ScalarAggregation,\n  ScalarResult,\n  ScalarType,\n  SearchDetails,\n  SearchDetailsMode,\n  SearchVariantsOptions,\n  SearchVariantsRequest,\n  SearchVariantsResponse,\n  SecuredMedia,\n  SecuredMediaFileType,\n  SeoSchema,\n  Settings,\n  SortDirection,\n  SortOrder,\n  SortType,\n  Sorting,\n  Source,\n  Spoiler,\n  SpoilerData,\n  Styles,\n  StylesBorder,\n  Subscription,\n  SubscriptionCyclesOneOf,\n  SubscriptionDetails,\n  SubscriptionDiscount,\n  SubscriptionDiscountDiscountOneOf,\n  SubscriptionFrequency,\n  SubscriptionPrice,\n  SubscriptionPricePerUnit,\n  SubscriptionPricesInfo,\n  TableCellData,\n  TableData,\n  Tag,\n  Target,\n  TextAlignment,\n  TextData,\n  TextNodeStyle,\n  TextStyle,\n  Thumbnail,\n  Thumbnails,\n  ThumbnailsAlignment,\n  Type,\n  V1Media,\n  V3FixedMonetaryAmount,\n  V3InventoryStatus,\n  V3OptionChoice,\n  V3OptionChoiceIds,\n  V3OptionChoiceNames,\n  V3PhysicalProperties,\n  V3PriceInfo,\n  V3PricePerUnit,\n  V3PricePerUnitSettings,\n  V3ProductMedia,\n  V3ProductMediaMediaOneOf,\n  V3ProductMediaSetByOneOf,\n  V3ProductType,\n  V3RevenueDetails,\n  V3SecuredMedia,\n  V3SubscriptionPrice,\n  V3SubscriptionPricePerUnit,\n  V3SubscriptionPricesInfo,\n  V3Thumbnail,\n  V3VariantDigitalProperties,\n  V3VariantPhysicalProperties,\n  V3WeightMeasurementUnitInfo,\n  ValueAggregation,\n  ValueAggregationIncludeMissingValuesOptions,\n  ValueAggregationMissingValues,\n  ValueAggregationOptionsOneOf,\n  ValueAggregationResult,\n  ValueAggregationSortDirection,\n  ValueAggregationSortType,\n  ValueResult,\n  ValueResults,\n  Variant,\n  VariantDigitalProperties,\n  VariantPhysicalProperties,\n  VariantSummary,\n  VariantTypedPropertiesOneOf,\n  VariantsInfo,\n  VariantsQueryBuilder,\n  VariantsQueryResult,\n  VerticalAlignment,\n  Video,\n  VideoData,\n  VideoResolution,\n  ViewMode,\n  ViewRole,\n  VoteRole,\n  WebhookIdentityType,\n  WeightMeasurementUnitInfo,\n  WeightRange,\n  WeightUnit,\n  Width,\n  WidthType,\n} from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.js';\n","import {\n  queryVariants as publicQueryVariants,\n  searchVariants as publicSearchVariants,\n} from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';\n\n/** @internal */\nexport const queryVariants: MaybeContext<\n  BuildRESTFunction<typeof publicQueryVariants> & typeof publicQueryVariants\n> = /*#__PURE__*/ createRESTModule(publicQueryVariants);\n/** @internal */\nexport const searchVariants: MaybeContext<\n  BuildRESTFunction<typeof publicSearchVariants> & typeof publicSearchVariants\n> = /*#__PURE__*/ createRESTModule(publicSearchVariants);\n\nexport {\n  ProductMediaMediaType,\n  MeasurementUnit,\n  SecuredMediaFileType,\n  V3ProductType,\n  WeightUnit,\n  InternalRowState,\n  SortOrder,\n  RequestedFields,\n  SortType,\n  SortDirection,\n  MissingValues,\n  ScalarType,\n  NestedAggregationType,\n  Interval,\n  AggregationType,\n  Mode,\n  CommonSortOrder,\n  ValueAggregationSortType,\n  ValueAggregationSortDirection,\n  ValueAggregationMissingValues,\n  CommonScalarType,\n  NestedAggregationNestedAggregationType,\n  DateHistogramAggregationInterval,\n  CommonAggregationType,\n  SearchDetailsMode,\n  NodeType,\n  WidthType,\n  PluginContainerDataAlignment,\n  Type,\n  Target,\n  TextAlignment,\n  LineStyle,\n  Width,\n  Alignment,\n  ViewMode,\n  LayoutType,\n  Orientation,\n  Crop,\n  ThumbnailsAlignment,\n  GIFType,\n  Source,\n  Position,\n  MapType,\n  ViewRole,\n  VoteRole,\n  PollLayoutType,\n  PollLayoutDirection,\n  BackgroundType,\n  DecorationType,\n  FontType,\n  AppType,\n  InitialExpandedItems,\n  Direction,\n  VerticalAlignment,\n  NullValue,\n  MediaType,\n  ProductOptionRenderType,\n  ChoiceType,\n  ModifierRenderType,\n  AvailabilityStatus,\n  PreorderStatus,\n  ProductPreorderAvailability,\n  ProductType,\n  FileType,\n  SubscriptionFrequency,\n  DiscountType,\n  WebhookIdentityType,\n} from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.js';\nexport {\n  ReadOnlyVariant,\n  ReadOnlyVariantTypedPropertiesOneOf,\n  V3OptionChoice,\n  V3OptionChoiceIds,\n  V3OptionChoiceNames,\n  V3PriceInfo,\n  V3FixedMonetaryAmount,\n  V3RevenueDetails,\n  V3ProductMedia,\n  V3ProductMediaSetByOneOf,\n  V3ProductMediaMediaOneOf,\n  CommonVideoResolution,\n  V3Thumbnail,\n  V3VariantPhysicalProperties,\n  V3PricePerUnit,\n  V3PricePerUnitSettings,\n  V3VariantDigitalProperties,\n  V3SecuredMedia,\n  V3SubscriptionPricesInfo,\n  V3SubscriptionPrice,\n  V3SubscriptionPricePerUnit,\n  V3InventoryStatus,\n  ProductFields,\n  ProductFieldsTypedPropertiesOneOf,\n  V3PhysicalProperties,\n  V3WeightMeasurementUnitInfo,\n  InternalMetadata,\n  QueryVariantsRequest,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Sorting,\n  CursorPaging,\n  QueryVariantsResponse,\n  CursorPagingMetadata,\n  Cursors,\n  SearchVariantsRequest,\n  CursorSearch,\n  CursorSearchPagingMethodOneOf,\n  Aggregation,\n  AggregationKindOneOf,\n  RangeBucket,\n  IncludeMissingValuesOptions,\n  ValueAggregation,\n  ValueAggregationOptionsOneOf,\n  RangeAggregation,\n  ScalarAggregation,\n  DateHistogramAggregation,\n  NestedAggregationItem,\n  NestedAggregationItemKindOneOf,\n  NestedAggregation,\n  SearchDetails,\n  SearchVariantsResponse,\n  AggregationData,\n  ValueAggregationResult,\n  RangeAggregationResult,\n  NestedAggregationResults,\n  NestedAggregationResultsResultOneOf,\n  ValueResults,\n  RangeResults,\n  AggregationResultsScalarResult,\n  NestedValueAggregationResult,\n  ValueResult,\n  RangeResult,\n  ScalarResult,\n  NestedResultValue,\n  NestedResultValueResultOneOf,\n  Results,\n  DateHistogramResult,\n  GroupByValueResults,\n  DateHistogramResults,\n  NestedResults,\n  AggregationResults,\n  AggregationResultsResultOneOf,\n  DeprecatedSearchVariantsWithOffsetRequest,\n  PlatformOffsetSearch,\n  PlatformOffsetSearchPagingMethodOneOf,\n  CommonSorting,\n  CommonAggregation,\n  CommonAggregationKindOneOf,\n  RangeAggregationRangeBucket,\n  ValueAggregationIncludeMissingValuesOptions,\n  AggregationValueAggregation,\n  AggregationValueAggregationOptionsOneOf,\n  AggregationRangeAggregation,\n  AggregationScalarAggregation,\n  AggregationDateHistogramAggregation,\n  NestedAggregationNestedAggregationItem,\n  NestedAggregationNestedAggregationItemKindOneOf,\n  AggregationNestedAggregation,\n  GroupByAggregation,\n  GroupByAggregationKindOneOf,\n  CommonSearchDetails,\n  PlatformPaging,\n  DeprecatedSearchVariantsWithOffsetResponse,\n  PagingMetadata,\n  MigrateProductVariantsRequest,\n  Product,\n  ProductTypedPropertiesOneOf,\n  RichContent,\n  Node,\n  NodeDataOneOf,\n  NodeStyle,\n  ButtonData,\n  Border,\n  Colors,\n  PluginContainerData,\n  PluginContainerDataWidth,\n  PluginContainerDataWidthDataOneOf,\n  Spoiler,\n  Height,\n  Styles,\n  Link,\n  LinkDataOneOf,\n  Rel,\n  CodeBlockData,\n  TextStyle,\n  DividerData,\n  FileData,\n  FileSource,\n  FileSourceDataOneOf,\n  PDFSettings,\n  GalleryData,\n  V1Media,\n  Image,\n  Video,\n  Item,\n  ItemDataOneOf,\n  GalleryOptions,\n  Layout,\n  ItemStyle,\n  Thumbnails,\n  GIFData,\n  GIF,\n  HeadingData,\n  HTMLData,\n  HTMLDataDataOneOf,\n  ImageData,\n  StylesBorder,\n  ImageDataStyles,\n  LinkPreviewData,\n  LinkPreviewDataStyles,\n  MapData,\n  MapSettings,\n  ParagraphData,\n  PollData,\n  Permissions,\n  Option,\n  PollSettings,\n  PollLayout,\n  OptionLayout,\n  Gradient,\n  Background,\n  BackgroundBackgroundOneOf,\n  PollDesign,\n  OptionDesign,\n  Poll,\n  PollDataLayout,\n  Design,\n  TextData,\n  Decoration,\n  DecorationDataOneOf,\n  AnchorData,\n  ColorData,\n  LinkData,\n  MentionData,\n  FontSizeData,\n  SpoilerData,\n  AppEmbedData,\n  AppEmbedDataAppDataOneOf,\n  BookingData,\n  EventData,\n  VideoData,\n  PlaybackOptions,\n  EmbedData,\n  Oembed,\n  CollapsibleListData,\n  TableData,\n  Dimensions,\n  TableCellData,\n  CellStyle,\n  BorderColors,\n  ListValue,\n  AudioData,\n  OrderedListData,\n  BulletedListData,\n  BlockquoteData,\n  CaptionData,\n  LayoutCellData,\n  Metadata,\n  DocumentStyle,\n  TextNodeStyle,\n  Media,\n  ProductMedia,\n  ProductMediaSetByOneOf,\n  ProductMediaMediaOneOf,\n  VideoResolution,\n  Thumbnail,\n  MediaItemsInfo,\n  SeoSchema,\n  Keyword,\n  Tag,\n  Settings,\n  ConnectedOption,\n  ConnectedOptionOptionSettingsOneOf,\n  ChoicesSettings,\n  ConnectedOptionChoice,\n  ConnectedOptionChoiceValueOneOf,\n  MultipleColors,\n  ConnectedModifier,\n  ConnectedModifierModifierSettingsOneOf,\n  FreeTextSettings,\n  ModifierChoicesSettings,\n  ConnectedModifierChoice,\n  ConnectedModifierChoiceValueOneOf,\n  Brand,\n  InfoSection,\n  Ribbon,\n  ProductCategoriesInfo,\n  ProductCategory,\n  ProductCategoryIdsInfo,\n  PriceRange,\n  FixedMonetaryAmount,\n  Inventory,\n  PhysicalProperties,\n  PricePerUnitSettings,\n  WeightRange,\n  PricePerUnitRange,\n  PricePerUnitRangePricePerUnit,\n  WeightMeasurementUnitInfo,\n  BreadcrumbsInfo,\n  BreadCrumb,\n  VariantsInfo,\n  Variant,\n  VariantTypedPropertiesOneOf,\n  OptionChoice,\n  OptionChoiceIds,\n  OptionChoiceNames,\n  PriceInfo,\n  RevenueDetails,\n  VariantPhysicalProperties,\n  PricePerUnit,\n  VariantDigitalProperties,\n  SecuredMedia,\n  SubscriptionPricesInfo,\n  SubscriptionPrice,\n  SubscriptionPricePerUnit,\n  InventoryStatus,\n  ExtendedFields,\n  SubscriptionDetails,\n  Subscription,\n  SubscriptionCyclesOneOf,\n  SubscriptionDiscount,\n  SubscriptionDiscountDiscountOneOf,\n  VariantSummary,\n  MinVariantPriceInfo,\n  MigrateProductVariantsResponse,\n  RecoverProductVariantsRequest,\n  RecoverProductVariantsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  QueryVariantsOptions,\n  VariantsQueryResult,\n  VariantsQueryBuilder,\n  SearchVariantsOptions,\n  ReadOnlyVariantSearchSpec,\n} from './stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.js';\n"],"mappings":"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","names":["queryVariants","searchVariants","import_float","payload","import_transform_paths","ProductMediaMediaType","MeasurementUnit","SecuredMediaFileType","V3ProductType","WeightUnit","InternalRowState","SortOrder","RequestedFields","SortType","SortDirection","MissingValues","ScalarType","NestedAggregationType","Interval","AggregationType","Mode","CommonSortOrder","ValueAggregationSortType","ValueAggregationSortDirection","ValueAggregationMissingValues","CommonScalarType","NestedAggregationNestedAggregationType","DateHistogramAggregationInterval","CommonAggregationType","SearchDetailsMode","NodeType","WidthType","PluginContainerDataAlignment","Type","Target","TextAlignment","LineStyle","Width","Alignment","ViewMode","LayoutType","Orientation","Crop","ThumbnailsAlignment","GIFType","Source","Position","MapType","ViewRole","VoteRole","PollLayoutType","PollLayoutDirection","BackgroundType","DecorationType","FontType","AppType","InitialExpandedItems","Direction","VerticalAlignment","NullValue","MediaType","ProductOptionRenderType","ChoiceType","ModifierRenderType","AvailabilityStatus","PreorderStatus","ProductPreorderAvailability","ProductType","FileType","SubscriptionFrequency","DiscountType","WebhookIdentityType","queryVariants","sdkTransformError","searchVariants","queryVariants","searchVariants","import_rest_modules","queryVariants","searchVariants"]}