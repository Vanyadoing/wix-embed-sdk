"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// index.ts
var index_exports = {};
__export(index_exports, {
  AggregationType: () => AggregationType,
  Alignment: () => Alignment,
  AppType: () => AppType,
  AvailabilityStatus: () => AvailabilityStatus,
  BackgroundType: () => BackgroundType,
  ChoiceType: () => ChoiceType,
  CommonAggregationType: () => CommonAggregationType,
  CommonScalarType: () => CommonScalarType,
  CommonSortOrder: () => CommonSortOrder,
  Crop: () => Crop,
  DateHistogramAggregationInterval: () => DateHistogramAggregationInterval,
  DecorationType: () => DecorationType,
  Direction: () => Direction,
  DiscountType: () => DiscountType,
  FileType: () => FileType,
  FontType: () => FontType,
  GIFType: () => GIFType,
  InitialExpandedItems: () => InitialExpandedItems,
  InternalRowState: () => InternalRowState,
  Interval: () => Interval,
  LayoutType: () => LayoutType,
  LineStyle: () => LineStyle,
  MapType: () => MapType,
  MeasurementUnit: () => MeasurementUnit,
  MediaType: () => MediaType,
  MissingValues: () => MissingValues,
  Mode: () => Mode,
  ModifierRenderType: () => ModifierRenderType,
  NestedAggregationNestedAggregationType: () => NestedAggregationNestedAggregationType,
  NestedAggregationType: () => NestedAggregationType,
  NodeType: () => NodeType,
  NullValue: () => NullValue,
  Orientation: () => Orientation,
  PluginContainerDataAlignment: () => PluginContainerDataAlignment,
  PollLayoutDirection: () => PollLayoutDirection,
  PollLayoutType: () => PollLayoutType,
  Position: () => Position,
  PreorderStatus: () => PreorderStatus,
  ProductMediaMediaType: () => ProductMediaMediaType,
  ProductOptionRenderType: () => ProductOptionRenderType,
  ProductPreorderAvailability: () => ProductPreorderAvailability,
  ProductType: () => ProductType,
  RequestedFields: () => RequestedFields,
  ScalarType: () => ScalarType,
  SearchDetailsMode: () => SearchDetailsMode,
  SecuredMediaFileType: () => SecuredMediaFileType,
  SortDirection: () => SortDirection,
  SortOrder: () => SortOrder,
  SortType: () => SortType,
  Source: () => Source,
  SubscriptionFrequency: () => SubscriptionFrequency,
  Target: () => Target,
  TextAlignment: () => TextAlignment,
  ThumbnailsAlignment: () => ThumbnailsAlignment,
  Type: () => Type,
  V3ProductType: () => V3ProductType,
  ValueAggregationMissingValues: () => ValueAggregationMissingValues,
  ValueAggregationSortDirection: () => ValueAggregationSortDirection,
  ValueAggregationSortType: () => ValueAggregationSortType,
  VerticalAlignment: () => VerticalAlignment,
  ViewMode: () => ViewMode,
  ViewRole: () => ViewRole,
  VoteRole: () => VoteRole,
  WebhookIdentityType: () => WebhookIdentityType,
  WeightUnit: () => WeightUnit,
  Width: () => Width,
  WidthType: () => WidthType,
  queryVariants: () => queryVariants4,
  searchVariants: () => searchVariants4
});
module.exports = __toCommonJS(index_exports);

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.ts
var import_transform_error = require("@wix/sdk-runtime/transform-error");
var import_query_builder = require("@wix/sdk-runtime/query-builder");
var import_rename_all_nested_keys = require("@wix/sdk-runtime/rename-all-nested-keys");

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.http.ts
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/product-variants-reader",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/products/query-variants",
        destPath: "/v3/products/query-variants"
      },
      {
        srcPath: "/stores/v3/products/search-variants",
        destPath: "/v3/products/search-variants"
      }
    ]
  };
  return (0, import_rest_modules.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_read-only-variants-v-3";
function queryVariants(payload) {
  function __queryVariants({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.read_only_variant",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.QueryVariants",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(
        { protoPath: "/v3/products/query-variants", data: payload, host }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "variants.physicalProperties.weight" },
            {
              path: "variants.physicalProperties.pricePerUnit.settings.quantity"
            },
            { path: "variants.revenueDetails.profitMargin" }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "variants.media.image.urlExpirationDate" },
            { path: "variants.media.video.urlExpirationDate" },
            { path: "variants.media.video.resolutions.urlExpirationDate" },
            {
              path: "variants.media.video.resolutions.poster.urlExpirationDate"
            },
            { path: "variants.media.video.posters.urlExpirationDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryVariants;
}
function searchVariants(payload) {
  function __searchVariants({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "search.aggregations.range.buckets.from" },
          { path: "search.aggregations.range.buckets.to" },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.from"
          },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.to"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.read_only_variant",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.SearchVariants",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(
        {
          protoPath: "/v3/products/search-variants",
          data: serializedData,
          host
        }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "variants.physicalProperties.weight" },
            { path: "aggregationData.results.ranges.results.from" },
            { path: "aggregationData.results.ranges.results.to" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from"
            },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.from"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.to"
            },
            {
              path: "variants.physicalProperties.pricePerUnit.settings.quantity"
            },
            { path: "variants.revenueDetails.profitMargin" },
            { path: "aggregationData.results.scalar.value" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.scalar.value"
            },
            {
              path: "aggregationData.results.nested.results.results.*.scalar.value"
            }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "variants.media.image.urlExpirationDate" },
            { path: "variants.media.video.urlExpirationDate" },
            { path: "variants.media.video.resolutions.urlExpirationDate" },
            {
              path: "variants.media.video.resolutions.poster.urlExpirationDate"
            },
            { path: "variants.media.video.posters.urlExpirationDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchVariants;
}

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.universal.ts
var import_image = require("@wix/sdk-runtime/transformations/image");
var import_video_v2 = require("@wix/sdk-runtime/transformations/video-v2");
var import_transform_paths2 = require("@wix/sdk-runtime/transformations/transform-paths");
var ProductMediaMediaType = /* @__PURE__ */ ((ProductMediaMediaType2) => {
  ProductMediaMediaType2["UNKNOWN_MEDIA_TYPE"] = "UNKNOWN_MEDIA_TYPE";
  ProductMediaMediaType2["IMAGE"] = "IMAGE";
  ProductMediaMediaType2["VIDEO"] = "VIDEO";
  return ProductMediaMediaType2;
})(ProductMediaMediaType || {});
var MeasurementUnit = /* @__PURE__ */ ((MeasurementUnit2) => {
  MeasurementUnit2["UNSPECIFIED"] = "UNSPECIFIED";
  MeasurementUnit2["ML"] = "ML";
  MeasurementUnit2["CL"] = "CL";
  MeasurementUnit2["L"] = "L";
  MeasurementUnit2["CBM"] = "CBM";
  MeasurementUnit2["MG"] = "MG";
  MeasurementUnit2["G"] = "G";
  MeasurementUnit2["KG"] = "KG";
  MeasurementUnit2["MM"] = "MM";
  MeasurementUnit2["CM"] = "CM";
  MeasurementUnit2["M"] = "M";
  MeasurementUnit2["SQM"] = "SQM";
  MeasurementUnit2["OZ"] = "OZ";
  MeasurementUnit2["LB"] = "LB";
  MeasurementUnit2["FLOZ"] = "FLOZ";
  MeasurementUnit2["PT"] = "PT";
  MeasurementUnit2["QT"] = "QT";
  MeasurementUnit2["GAL"] = "GAL";
  MeasurementUnit2["IN"] = "IN";
  MeasurementUnit2["FT"] = "FT";
  MeasurementUnit2["YD"] = "YD";
  MeasurementUnit2["SQFT"] = "SQFT";
  return MeasurementUnit2;
})(MeasurementUnit || {});
var SecuredMediaFileType = /* @__PURE__ */ ((SecuredMediaFileType2) => {
  SecuredMediaFileType2["UNSPECIFIED"] = "UNSPECIFIED";
  SecuredMediaFileType2["SECURE_PICTURE"] = "SECURE_PICTURE";
  SecuredMediaFileType2["SECURE_VIDEO"] = "SECURE_VIDEO";
  SecuredMediaFileType2["SECURE_DOCUMENT"] = "SECURE_DOCUMENT";
  SecuredMediaFileType2["SECURE_MUSIC"] = "SECURE_MUSIC";
  SecuredMediaFileType2["SECURE_ARCHIVE"] = "SECURE_ARCHIVE";
  return SecuredMediaFileType2;
})(SecuredMediaFileType || {});
var V3ProductType = /* @__PURE__ */ ((V3ProductType2) => {
  V3ProductType2["UNKNOWN_PRODUCT_TYPE"] = "UNKNOWN_PRODUCT_TYPE";
  V3ProductType2["PHYSICAL"] = "PHYSICAL";
  V3ProductType2["DIGITAL"] = "DIGITAL";
  return V3ProductType2;
})(V3ProductType || {});
var WeightUnit = /* @__PURE__ */ ((WeightUnit2) => {
  WeightUnit2["UNSPECIFIED_WEIGHT_UNIT"] = "UNSPECIFIED_WEIGHT_UNIT";
  WeightUnit2["KG"] = "KG";
  WeightUnit2["LB"] = "LB";
  return WeightUnit2;
})(WeightUnit || {});
var InternalRowState = /* @__PURE__ */ ((InternalRowState2) => {
  InternalRowState2["UNKNOWN_ROW_STATE"] = "UNKNOWN_ROW_STATE";
  InternalRowState2["READY"] = "READY";
  InternalRowState2["IN_PROCESS"] = "IN_PROCESS";
  InternalRowState2["SOFT_DELETED"] = "SOFT_DELETED";
  InternalRowState2["PERMANENTLY_DELETED"] = "PERMANENTLY_DELETED";
  return InternalRowState2;
})(InternalRowState || {});
var SortOrder = /* @__PURE__ */ ((SortOrder2) => {
  SortOrder2["ASC"] = "ASC";
  SortOrder2["DESC"] = "DESC";
  return SortOrder2;
})(SortOrder || {});
var RequestedFields = /* @__PURE__ */ ((RequestedFields2) => {
  RequestedFields2["UNKNOWN_REQUESTED_FIELD"] = "UNKNOWN_REQUESTED_FIELD";
  RequestedFields2["CURRENCY"] = "CURRENCY";
  RequestedFields2["MERCHANT_DATA"] = "MERCHANT_DATA";
  RequestedFields2["SUBSCRIPTION_PRICES_INFO"] = "SUBSCRIPTION_PRICES_INFO";
  RequestedFields2["WEIGHT_MEASUREMENT_UNIT_INFO"] = "WEIGHT_MEASUREMENT_UNIT_INFO";
  return RequestedFields2;
})(RequestedFields || {});
var SortType = /* @__PURE__ */ ((SortType2) => {
  SortType2["COUNT"] = "COUNT";
  SortType2["VALUE"] = "VALUE";
  return SortType2;
})(SortType || {});
var SortDirection = /* @__PURE__ */ ((SortDirection2) => {
  SortDirection2["DESC"] = "DESC";
  SortDirection2["ASC"] = "ASC";
  return SortDirection2;
})(SortDirection || {});
var MissingValues = /* @__PURE__ */ ((MissingValues2) => {
  MissingValues2["EXCLUDE"] = "EXCLUDE";
  MissingValues2["INCLUDE"] = "INCLUDE";
  return MissingValues2;
})(MissingValues || {});
var ScalarType = /* @__PURE__ */ ((ScalarType2) => {
  ScalarType2["UNKNOWN_SCALAR_TYPE"] = "UNKNOWN_SCALAR_TYPE";
  ScalarType2["COUNT_DISTINCT"] = "COUNT_DISTINCT";
  ScalarType2["MIN"] = "MIN";
  ScalarType2["MAX"] = "MAX";
  return ScalarType2;
})(ScalarType || {});
var NestedAggregationType = /* @__PURE__ */ ((NestedAggregationType2) => {
  NestedAggregationType2["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
  NestedAggregationType2["VALUE"] = "VALUE";
  NestedAggregationType2["RANGE"] = "RANGE";
  NestedAggregationType2["SCALAR"] = "SCALAR";
  NestedAggregationType2["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
  return NestedAggregationType2;
})(NestedAggregationType || {});
var Interval = /* @__PURE__ */ ((Interval2) => {
  Interval2["UNKNOWN_INTERVAL"] = "UNKNOWN_INTERVAL";
  Interval2["YEAR"] = "YEAR";
  Interval2["MONTH"] = "MONTH";
  Interval2["WEEK"] = "WEEK";
  Interval2["DAY"] = "DAY";
  Interval2["HOUR"] = "HOUR";
  Interval2["MINUTE"] = "MINUTE";
  Interval2["SECOND"] = "SECOND";
  return Interval2;
})(Interval || {});
var AggregationType = /* @__PURE__ */ ((AggregationType2) => {
  AggregationType2["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
  AggregationType2["VALUE"] = "VALUE";
  AggregationType2["RANGE"] = "RANGE";
  AggregationType2["SCALAR"] = "SCALAR";
  AggregationType2["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
  AggregationType2["NESTED"] = "NESTED";
  return AggregationType2;
})(AggregationType || {});
var Mode = /* @__PURE__ */ ((Mode2) => {
  Mode2["OR"] = "OR";
  Mode2["AND"] = "AND";
  return Mode2;
})(Mode || {});
var CommonSortOrder = /* @__PURE__ */ ((CommonSortOrder2) => {
  CommonSortOrder2["ASC"] = "ASC";
  CommonSortOrder2["DESC"] = "DESC";
  return CommonSortOrder2;
})(CommonSortOrder || {});
var ValueAggregationSortType = /* @__PURE__ */ ((ValueAggregationSortType2) => {
  ValueAggregationSortType2["COUNT"] = "COUNT";
  ValueAggregationSortType2["VALUE"] = "VALUE";
  return ValueAggregationSortType2;
})(ValueAggregationSortType || {});
var ValueAggregationSortDirection = /* @__PURE__ */ ((ValueAggregationSortDirection2) => {
  ValueAggregationSortDirection2["DESC"] = "DESC";
  ValueAggregationSortDirection2["ASC"] = "ASC";
  return ValueAggregationSortDirection2;
})(ValueAggregationSortDirection || {});
var ValueAggregationMissingValues = /* @__PURE__ */ ((ValueAggregationMissingValues2) => {
  ValueAggregationMissingValues2["EXCLUDE"] = "EXCLUDE";
  ValueAggregationMissingValues2["INCLUDE"] = "INCLUDE";
  return ValueAggregationMissingValues2;
})(ValueAggregationMissingValues || {});
var CommonScalarType = /* @__PURE__ */ ((CommonScalarType2) => {
  CommonScalarType2["UNKNOWN_SCALAR_TYPE"] = "UNKNOWN_SCALAR_TYPE";
  CommonScalarType2["COUNT_DISTINCT"] = "COUNT_DISTINCT";
  CommonScalarType2["MIN"] = "MIN";
  CommonScalarType2["MAX"] = "MAX";
  return CommonScalarType2;
})(CommonScalarType || {});
var NestedAggregationNestedAggregationType = /* @__PURE__ */ ((NestedAggregationNestedAggregationType2) => {
  NestedAggregationNestedAggregationType2["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
  NestedAggregationNestedAggregationType2["VALUE"] = "VALUE";
  NestedAggregationNestedAggregationType2["RANGE"] = "RANGE";
  NestedAggregationNestedAggregationType2["SCALAR"] = "SCALAR";
  NestedAggregationNestedAggregationType2["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
  return NestedAggregationNestedAggregationType2;
})(NestedAggregationNestedAggregationType || {});
var DateHistogramAggregationInterval = /* @__PURE__ */ ((DateHistogramAggregationInterval2) => {
  DateHistogramAggregationInterval2["UNKNOWN_INTERVAL"] = "UNKNOWN_INTERVAL";
  DateHistogramAggregationInterval2["YEAR"] = "YEAR";
  DateHistogramAggregationInterval2["MONTH"] = "MONTH";
  DateHistogramAggregationInterval2["WEEK"] = "WEEK";
  DateHistogramAggregationInterval2["DAY"] = "DAY";
  DateHistogramAggregationInterval2["HOUR"] = "HOUR";
  DateHistogramAggregationInterval2["MINUTE"] = "MINUTE";
  DateHistogramAggregationInterval2["SECOND"] = "SECOND";
  return DateHistogramAggregationInterval2;
})(DateHistogramAggregationInterval || {});
var CommonAggregationType = /* @__PURE__ */ ((CommonAggregationType2) => {
  CommonAggregationType2["UNKNOWN_AGGREGATION_TYPE"] = "UNKNOWN_AGGREGATION_TYPE";
  CommonAggregationType2["VALUE"] = "VALUE";
  CommonAggregationType2["RANGE"] = "RANGE";
  CommonAggregationType2["SCALAR"] = "SCALAR";
  CommonAggregationType2["DATE_HISTOGRAM"] = "DATE_HISTOGRAM";
  CommonAggregationType2["NESTED"] = "NESTED";
  return CommonAggregationType2;
})(CommonAggregationType || {});
var SearchDetailsMode = /* @__PURE__ */ ((SearchDetailsMode2) => {
  SearchDetailsMode2["OR"] = "OR";
  SearchDetailsMode2["AND"] = "AND";
  return SearchDetailsMode2;
})(SearchDetailsMode || {});
var NodeType = /* @__PURE__ */ ((NodeType2) => {
  NodeType2["PARAGRAPH"] = "PARAGRAPH";
  NodeType2["TEXT"] = "TEXT";
  NodeType2["HEADING"] = "HEADING";
  NodeType2["BULLETED_LIST"] = "BULLETED_LIST";
  NodeType2["ORDERED_LIST"] = "ORDERED_LIST";
  NodeType2["LIST_ITEM"] = "LIST_ITEM";
  NodeType2["BLOCKQUOTE"] = "BLOCKQUOTE";
  NodeType2["CODE_BLOCK"] = "CODE_BLOCK";
  NodeType2["VIDEO"] = "VIDEO";
  NodeType2["DIVIDER"] = "DIVIDER";
  NodeType2["FILE"] = "FILE";
  NodeType2["GALLERY"] = "GALLERY";
  NodeType2["GIF"] = "GIF";
  NodeType2["HTML"] = "HTML";
  NodeType2["IMAGE"] = "IMAGE";
  NodeType2["LINK_PREVIEW"] = "LINK_PREVIEW";
  NodeType2["MAP"] = "MAP";
  NodeType2["POLL"] = "POLL";
  NodeType2["APP_EMBED"] = "APP_EMBED";
  NodeType2["BUTTON"] = "BUTTON";
  NodeType2["COLLAPSIBLE_LIST"] = "COLLAPSIBLE_LIST";
  NodeType2["TABLE"] = "TABLE";
  NodeType2["EMBED"] = "EMBED";
  NodeType2["COLLAPSIBLE_ITEM"] = "COLLAPSIBLE_ITEM";
  NodeType2["COLLAPSIBLE_ITEM_TITLE"] = "COLLAPSIBLE_ITEM_TITLE";
  NodeType2["COLLAPSIBLE_ITEM_BODY"] = "COLLAPSIBLE_ITEM_BODY";
  NodeType2["TABLE_CELL"] = "TABLE_CELL";
  NodeType2["TABLE_ROW"] = "TABLE_ROW";
  NodeType2["EXTERNAL"] = "EXTERNAL";
  NodeType2["AUDIO"] = "AUDIO";
  NodeType2["CAPTION"] = "CAPTION";
  NodeType2["LAYOUT"] = "LAYOUT";
  NodeType2["LAYOUT_CELL"] = "LAYOUT_CELL";
  return NodeType2;
})(NodeType || {});
var WidthType = /* @__PURE__ */ ((WidthType2) => {
  WidthType2["CONTENT"] = "CONTENT";
  WidthType2["SMALL"] = "SMALL";
  WidthType2["ORIGINAL"] = "ORIGINAL";
  WidthType2["FULL_WIDTH"] = "FULL_WIDTH";
  return WidthType2;
})(WidthType || {});
var PluginContainerDataAlignment = /* @__PURE__ */ ((PluginContainerDataAlignment2) => {
  PluginContainerDataAlignment2["CENTER"] = "CENTER";
  PluginContainerDataAlignment2["LEFT"] = "LEFT";
  PluginContainerDataAlignment2["RIGHT"] = "RIGHT";
  return PluginContainerDataAlignment2;
})(PluginContainerDataAlignment || {});
var Type = /* @__PURE__ */ ((Type2) => {
  Type2["LINK"] = "LINK";
  Type2["ACTION"] = "ACTION";
  return Type2;
})(Type || {});
var Target = /* @__PURE__ */ ((Target2) => {
  Target2["SELF"] = "SELF";
  Target2["BLANK"] = "BLANK";
  Target2["PARENT"] = "PARENT";
  Target2["TOP"] = "TOP";
  return Target2;
})(Target || {});
var TextAlignment = /* @__PURE__ */ ((TextAlignment2) => {
  TextAlignment2["AUTO"] = "AUTO";
  TextAlignment2["LEFT"] = "LEFT";
  TextAlignment2["RIGHT"] = "RIGHT";
  TextAlignment2["CENTER"] = "CENTER";
  TextAlignment2["JUSTIFY"] = "JUSTIFY";
  return TextAlignment2;
})(TextAlignment || {});
var LineStyle = /* @__PURE__ */ ((LineStyle2) => {
  LineStyle2["SINGLE"] = "SINGLE";
  LineStyle2["DOUBLE"] = "DOUBLE";
  LineStyle2["DASHED"] = "DASHED";
  LineStyle2["DOTTED"] = "DOTTED";
  return LineStyle2;
})(LineStyle || {});
var Width = /* @__PURE__ */ ((Width2) => {
  Width2["LARGE"] = "LARGE";
  Width2["MEDIUM"] = "MEDIUM";
  Width2["SMALL"] = "SMALL";
  return Width2;
})(Width || {});
var Alignment = /* @__PURE__ */ ((Alignment2) => {
  Alignment2["CENTER"] = "CENTER";
  Alignment2["LEFT"] = "LEFT";
  Alignment2["RIGHT"] = "RIGHT";
  return Alignment2;
})(Alignment || {});
var ViewMode = /* @__PURE__ */ ((ViewMode2) => {
  ViewMode2["NONE"] = "NONE";
  ViewMode2["FULL"] = "FULL";
  ViewMode2["MINI"] = "MINI";
  return ViewMode2;
})(ViewMode || {});
var LayoutType = /* @__PURE__ */ ((LayoutType2) => {
  LayoutType2["COLLAGE"] = "COLLAGE";
  LayoutType2["MASONRY"] = "MASONRY";
  LayoutType2["GRID"] = "GRID";
  LayoutType2["THUMBNAIL"] = "THUMBNAIL";
  LayoutType2["SLIDER"] = "SLIDER";
  LayoutType2["SLIDESHOW"] = "SLIDESHOW";
  LayoutType2["PANORAMA"] = "PANORAMA";
  LayoutType2["COLUMN"] = "COLUMN";
  LayoutType2["MAGIC"] = "MAGIC";
  LayoutType2["FULLSIZE"] = "FULLSIZE";
  return LayoutType2;
})(LayoutType || {});
var Orientation = /* @__PURE__ */ ((Orientation2) => {
  Orientation2["ROWS"] = "ROWS";
  Orientation2["COLUMNS"] = "COLUMNS";
  return Orientation2;
})(Orientation || {});
var Crop = /* @__PURE__ */ ((Crop2) => {
  Crop2["FILL"] = "FILL";
  Crop2["FIT"] = "FIT";
  return Crop2;
})(Crop || {});
var ThumbnailsAlignment = /* @__PURE__ */ ((ThumbnailsAlignment2) => {
  ThumbnailsAlignment2["TOP"] = "TOP";
  ThumbnailsAlignment2["RIGHT"] = "RIGHT";
  ThumbnailsAlignment2["BOTTOM"] = "BOTTOM";
  ThumbnailsAlignment2["LEFT"] = "LEFT";
  ThumbnailsAlignment2["NONE"] = "NONE";
  return ThumbnailsAlignment2;
})(ThumbnailsAlignment || {});
var GIFType = /* @__PURE__ */ ((GIFType2) => {
  GIFType2["NORMAL"] = "NORMAL";
  GIFType2["STICKER"] = "STICKER";
  return GIFType2;
})(GIFType || {});
var Source = /* @__PURE__ */ ((Source2) => {
  Source2["HTML"] = "HTML";
  Source2["ADSENSE"] = "ADSENSE";
  return Source2;
})(Source || {});
var Position = /* @__PURE__ */ ((Position2) => {
  Position2["START"] = "START";
  Position2["END"] = "END";
  Position2["TOP"] = "TOP";
  Position2["HIDDEN"] = "HIDDEN";
  return Position2;
})(Position || {});
var MapType = /* @__PURE__ */ ((MapType2) => {
  MapType2["ROADMAP"] = "ROADMAP";
  MapType2["SATELITE"] = "SATELITE";
  MapType2["HYBRID"] = "HYBRID";
  MapType2["TERRAIN"] = "TERRAIN";
  return MapType2;
})(MapType || {});
var ViewRole = /* @__PURE__ */ ((ViewRole2) => {
  ViewRole2["CREATOR"] = "CREATOR";
  ViewRole2["VOTERS"] = "VOTERS";
  ViewRole2["EVERYONE"] = "EVERYONE";
  return ViewRole2;
})(ViewRole || {});
var VoteRole = /* @__PURE__ */ ((VoteRole2) => {
  VoteRole2["SITE_MEMBERS"] = "SITE_MEMBERS";
  VoteRole2["ALL"] = "ALL";
  return VoteRole2;
})(VoteRole || {});
var PollLayoutType = /* @__PURE__ */ ((PollLayoutType2) => {
  PollLayoutType2["LIST"] = "LIST";
  PollLayoutType2["GRID"] = "GRID";
  return PollLayoutType2;
})(PollLayoutType || {});
var PollLayoutDirection = /* @__PURE__ */ ((PollLayoutDirection2) => {
  PollLayoutDirection2["LTR"] = "LTR";
  PollLayoutDirection2["RTL"] = "RTL";
  return PollLayoutDirection2;
})(PollLayoutDirection || {});
var BackgroundType = /* @__PURE__ */ ((BackgroundType2) => {
  BackgroundType2["COLOR"] = "COLOR";
  BackgroundType2["IMAGE"] = "IMAGE";
  BackgroundType2["GRADIENT"] = "GRADIENT";
  return BackgroundType2;
})(BackgroundType || {});
var DecorationType = /* @__PURE__ */ ((DecorationType2) => {
  DecorationType2["BOLD"] = "BOLD";
  DecorationType2["ITALIC"] = "ITALIC";
  DecorationType2["UNDERLINE"] = "UNDERLINE";
  DecorationType2["SPOILER"] = "SPOILER";
  DecorationType2["ANCHOR"] = "ANCHOR";
  DecorationType2["MENTION"] = "MENTION";
  DecorationType2["LINK"] = "LINK";
  DecorationType2["COLOR"] = "COLOR";
  DecorationType2["FONT_SIZE"] = "FONT_SIZE";
  DecorationType2["EXTERNAL"] = "EXTERNAL";
  DecorationType2["STRIKETHROUGH"] = "STRIKETHROUGH";
  DecorationType2["SUPERSCRIPT"] = "SUPERSCRIPT";
  DecorationType2["SUBSCRIPT"] = "SUBSCRIPT";
  return DecorationType2;
})(DecorationType || {});
var FontType = /* @__PURE__ */ ((FontType2) => {
  FontType2["PX"] = "PX";
  FontType2["EM"] = "EM";
  return FontType2;
})(FontType || {});
var AppType = /* @__PURE__ */ ((AppType2) => {
  AppType2["PRODUCT"] = "PRODUCT";
  AppType2["EVENT"] = "EVENT";
  AppType2["BOOKING"] = "BOOKING";
  return AppType2;
})(AppType || {});
var InitialExpandedItems = /* @__PURE__ */ ((InitialExpandedItems2) => {
  InitialExpandedItems2["FIRST"] = "FIRST";
  InitialExpandedItems2["ALL"] = "ALL";
  InitialExpandedItems2["NONE"] = "NONE";
  return InitialExpandedItems2;
})(InitialExpandedItems || {});
var Direction = /* @__PURE__ */ ((Direction2) => {
  Direction2["LTR"] = "LTR";
  Direction2["RTL"] = "RTL";
  return Direction2;
})(Direction || {});
var VerticalAlignment = /* @__PURE__ */ ((VerticalAlignment2) => {
  VerticalAlignment2["TOP"] = "TOP";
  VerticalAlignment2["MIDDLE"] = "MIDDLE";
  VerticalAlignment2["BOTTOM"] = "BOTTOM";
  return VerticalAlignment2;
})(VerticalAlignment || {});
var NullValue = /* @__PURE__ */ ((NullValue2) => {
  NullValue2["NULL_VALUE"] = "NULL_VALUE";
  return NullValue2;
})(NullValue || {});
var MediaType = /* @__PURE__ */ ((MediaType2) => {
  MediaType2["UNKNOWN_MEDIA_TYPE"] = "UNKNOWN_MEDIA_TYPE";
  MediaType2["IMAGE"] = "IMAGE";
  MediaType2["VIDEO"] = "VIDEO";
  return MediaType2;
})(MediaType || {});
var ProductOptionRenderType = /* @__PURE__ */ ((ProductOptionRenderType2) => {
  ProductOptionRenderType2["UNKNOWN_OPTION_RENDER_TYPE"] = "UNKNOWN_OPTION_RENDER_TYPE";
  ProductOptionRenderType2["TEXT_CHOICES"] = "TEXT_CHOICES";
  ProductOptionRenderType2["SWATCH_CHOICES"] = "SWATCH_CHOICES";
  return ProductOptionRenderType2;
})(ProductOptionRenderType || {});
var ChoiceType = /* @__PURE__ */ ((ChoiceType2) => {
  ChoiceType2["UNKNOWN_CHOICE_TYPE"] = "UNKNOWN_CHOICE_TYPE";
  ChoiceType2["CHOICE_TEXT"] = "CHOICE_TEXT";
  ChoiceType2["ONE_COLOR"] = "ONE_COLOR";
  ChoiceType2["MULTIPLE_COLORS"] = "MULTIPLE_COLORS";
  ChoiceType2["IMAGE"] = "IMAGE";
  return ChoiceType2;
})(ChoiceType || {});
var ModifierRenderType = /* @__PURE__ */ ((ModifierRenderType2) => {
  ModifierRenderType2["UNKNOWN_MODIFIER_RENDER_TYPE"] = "UNKNOWN_MODIFIER_RENDER_TYPE";
  ModifierRenderType2["FREE_TEXT"] = "FREE_TEXT";
  ModifierRenderType2["TEXT_CHOICES"] = "TEXT_CHOICES";
  ModifierRenderType2["SWATCH_CHOICES"] = "SWATCH_CHOICES";
  return ModifierRenderType2;
})(ModifierRenderType || {});
var AvailabilityStatus = /* @__PURE__ */ ((AvailabilityStatus2) => {
  AvailabilityStatus2["UNKNOWN_AVAILABILITY_STATUS"] = "UNKNOWN_AVAILABILITY_STATUS";
  AvailabilityStatus2["IN_STOCK"] = "IN_STOCK";
  AvailabilityStatus2["OUT_OF_STOCK"] = "OUT_OF_STOCK";
  AvailabilityStatus2["PARTIALLY_OUT_OF_STOCK"] = "PARTIALLY_OUT_OF_STOCK";
  return AvailabilityStatus2;
})(AvailabilityStatus || {});
var PreorderStatus = /* @__PURE__ */ ((PreorderStatus2) => {
  PreorderStatus2["UNKNOWN_PREORDER_STATUS"] = "UNKNOWN_PREORDER_STATUS";
  PreorderStatus2["ENABLED"] = "ENABLED";
  PreorderStatus2["DISABLED"] = "DISABLED";
  PreorderStatus2["PARTIALLY_ENABLED"] = "PARTIALLY_ENABLED";
  return PreorderStatus2;
})(PreorderStatus || {});
var ProductPreorderAvailability = /* @__PURE__ */ ((ProductPreorderAvailability2) => {
  ProductPreorderAvailability2["UNKNOWN_PREORDER_AVAILABILITY_STATUS"] = "UNKNOWN_PREORDER_AVAILABILITY_STATUS";
  ProductPreorderAvailability2["ALL_VARIANTS"] = "ALL_VARIANTS";
  ProductPreorderAvailability2["NO_VARIANTS"] = "NO_VARIANTS";
  ProductPreorderAvailability2["SOME_VARIANTS"] = "SOME_VARIANTS";
  return ProductPreorderAvailability2;
})(ProductPreorderAvailability || {});
var ProductType = /* @__PURE__ */ ((ProductType2) => {
  ProductType2["UNKNOWN_PRODUCT_TYPE"] = "UNKNOWN_PRODUCT_TYPE";
  ProductType2["PHYSICAL"] = "PHYSICAL";
  ProductType2["DIGITAL"] = "DIGITAL";
  return ProductType2;
})(ProductType || {});
var FileType = /* @__PURE__ */ ((FileType2) => {
  FileType2["UNSPECIFIED"] = "UNSPECIFIED";
  FileType2["SECURE_PICTURE"] = "SECURE_PICTURE";
  FileType2["SECURE_VIDEO"] = "SECURE_VIDEO";
  FileType2["SECURE_DOCUMENT"] = "SECURE_DOCUMENT";
  FileType2["SECURE_MUSIC"] = "SECURE_MUSIC";
  FileType2["SECURE_ARCHIVE"] = "SECURE_ARCHIVE";
  return FileType2;
})(FileType || {});
var SubscriptionFrequency = /* @__PURE__ */ ((SubscriptionFrequency2) => {
  SubscriptionFrequency2["UNDEFINED"] = "UNDEFINED";
  SubscriptionFrequency2["DAY"] = "DAY";
  SubscriptionFrequency2["WEEK"] = "WEEK";
  SubscriptionFrequency2["MONTH"] = "MONTH";
  SubscriptionFrequency2["YEAR"] = "YEAR";
  return SubscriptionFrequency2;
})(SubscriptionFrequency || {});
var DiscountType = /* @__PURE__ */ ((DiscountType2) => {
  DiscountType2["UNKNOWN_DISCOUNT"] = "UNKNOWN_DISCOUNT";
  DiscountType2["AMOUNT"] = "AMOUNT";
  DiscountType2["PERCENT"] = "PERCENT";
  return DiscountType2;
})(DiscountType || {});
var WebhookIdentityType = /* @__PURE__ */ ((WebhookIdentityType2) => {
  WebhookIdentityType2["UNKNOWN"] = "UNKNOWN";
  WebhookIdentityType2["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
  WebhookIdentityType2["MEMBER"] = "MEMBER";
  WebhookIdentityType2["WIX_USER"] = "WIX_USER";
  WebhookIdentityType2["APP"] = "APP";
  return WebhookIdentityType2;
})(WebhookIdentityType || {});
function queryVariants2(options) {
  const { httpClient, sideEffects } = arguments[1];
  return (0, import_query_builder.queryBuilder)({
    func: async (payload) => {
      const reqOpts = queryVariants(
        { ...payload, ...options ?? {} }
      );
      sideEffects?.onSiteCall?.();
      try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return result;
      } catch (err) {
        sideEffects?.onError?.(err);
        throw err;
      }
    },
    requestTransformer: (query) => {
      const args = [query, options];
      return (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
        ...args?.[1],
        query: args?.[0]
      });
    },
    responseTransformer: ({ data }) => {
      const transformedData = (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
        (0, import_transform_paths2.transformPaths)(data, [
          {
            transformFn: import_image.transformRESTImageToSDKImage,
            paths: [{ path: "variants.media.image" }]
          },
          {
            transformFn: import_video_v2.transformRESTVideoV2ToSDKVideoV2,
            paths: [{ path: "variants.media.video" }]
          }
        ])
      );
      return {
        items: transformedData?.variants,
        pagingMetadata: transformedData?.pagingMetadata
      };
    },
    errorTransformer: (err) => {
      const transformedError = (0, import_transform_error.transformError)(err, {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { query: "$[0]" },
        singleArgumentUnchanged: false
      });
      throw transformedError;
    },
    pagingMethod: "CURSOR",
    transformationPaths: {}
  });
}
async function searchVariants2(search, options) {
  const { httpClient, sideEffects } = arguments[2];
  const payload = (0, import_rename_all_nested_keys.renameKeysFromSDKRequestToRESTRequest)({
    search,
    fields: options?.fields
  });
  const reqOpts = searchVariants(payload);
  sideEffects?.onSiteCall?.();
  try {
    const result = await httpClient.request(reqOpts);
    sideEffects?.onSuccess?.(result);
    return (0, import_rename_all_nested_keys.renameKeysFromRESTResponseToSDKResponse)(
      (0, import_transform_paths2.transformPaths)(result.data, [
        {
          transformFn: import_image.transformRESTImageToSDKImage,
          paths: [{ path: "variants.media.image" }]
        },
        {
          transformFn: import_video_v2.transformRESTVideoV2ToSDKVideoV2,
          paths: [{ path: "variants.media.video" }]
        }
      ])
    );
  } catch (err) {
    const transformedError = (0, import_transform_error.transformError)(
      err,
      {
        spreadPathsToArguments: {},
        explicitPathsToArguments: { search: "$[0]", fields: "$[1].fields" },
        singleArgumentUnchanged: false
      },
      ["search", "options"]
    );
    sideEffects?.onError?.(err);
    throw transformedError;
  }
}

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.public.ts
function queryVariants3(httpClient) {
  return (options) => queryVariants2(
    options,
    // @ts-ignore
    { httpClient }
  );
}
function searchVariants3(httpClient) {
  return (search, options) => searchVariants2(
    search,
    options,
    // @ts-ignore
    { httpClient }
  );
}

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.context.ts
var import_rest_modules2 = require("@wix/sdk-runtime/rest-modules");
var queryVariants4 = /* @__PURE__ */ (0, import_rest_modules2.createRESTModule)(queryVariants3);
var searchVariants4 = /* @__PURE__ */ (0, import_rest_modules2.createRESTModule)(searchVariants3);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  AggregationType,
  Alignment,
  AppType,
  AvailabilityStatus,
  BackgroundType,
  ChoiceType,
  CommonAggregationType,
  CommonScalarType,
  CommonSortOrder,
  Crop,
  DateHistogramAggregationInterval,
  DecorationType,
  Direction,
  DiscountType,
  FileType,
  FontType,
  GIFType,
  InitialExpandedItems,
  InternalRowState,
  Interval,
  LayoutType,
  LineStyle,
  MapType,
  MeasurementUnit,
  MediaType,
  MissingValues,
  Mode,
  ModifierRenderType,
  NestedAggregationNestedAggregationType,
  NestedAggregationType,
  NodeType,
  NullValue,
  Orientation,
  PluginContainerDataAlignment,
  PollLayoutDirection,
  PollLayoutType,
  Position,
  PreorderStatus,
  ProductMediaMediaType,
  ProductOptionRenderType,
  ProductPreorderAvailability,
  ProductType,
  RequestedFields,
  ScalarType,
  SearchDetailsMode,
  SecuredMediaFileType,
  SortDirection,
  SortOrder,
  SortType,
  Source,
  SubscriptionFrequency,
  Target,
  TextAlignment,
  ThumbnailsAlignment,
  Type,
  V3ProductType,
  ValueAggregationMissingValues,
  ValueAggregationSortDirection,
  ValueAggregationSortType,
  VerticalAlignment,
  ViewMode,
  ViewRole,
  VoteRole,
  WebhookIdentityType,
  WeightUnit,
  Width,
  WidthType,
  queryVariants,
  searchVariants
});
//# sourceMappingURL=index.js.map