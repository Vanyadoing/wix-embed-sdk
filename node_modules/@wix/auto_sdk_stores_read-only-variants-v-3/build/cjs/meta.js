"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// meta.ts
var meta_exports = {};
__export(meta_exports, {
  queryVariants: () => queryVariants2,
  searchVariants: () => searchVariants2
});
module.exports = __toCommonJS(meta_exports);

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.http.ts
var import_float = require("@wix/sdk-runtime/transformations/float");
var import_float2 = require("@wix/sdk-runtime/transformations/float");
var import_timestamp = require("@wix/sdk-runtime/transformations/timestamp");
var import_transform_paths = require("@wix/sdk-runtime/transformations/transform-paths");
var import_rest_modules = require("@wix/sdk-runtime/rest-modules");
function resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(opts) {
  const domainToMappings = {
    "api._api_base_domain_": [
      {
        srcPath: "/product-variants-reader",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/products/query-variants",
        destPath: "/v3/products/query-variants"
      },
      {
        srcPath: "/stores/v3/products/search-variants",
        destPath: "/v3/products/search-variants"
      }
    ]
  };
  return (0, import_rest_modules.resolveUrl)(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_read-only-variants-v-3";
function queryVariants(payload) {
  function __queryVariants({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.read_only_variant",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.QueryVariants",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(
        { protoPath: "/v3/products/query-variants", data: payload, host }
      ),
      data: payload,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "variants.physicalProperties.weight" },
            {
              path: "variants.physicalProperties.pricePerUnit.settings.quantity"
            },
            { path: "variants.revenueDetails.profitMargin" }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "variants.media.image.urlExpirationDate" },
            { path: "variants.media.video.urlExpirationDate" },
            { path: "variants.media.video.resolutions.urlExpirationDate" },
            {
              path: "variants.media.video.resolutions.poster.urlExpirationDate"
            },
            { path: "variants.media.video.posters.urlExpirationDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryVariants;
}
function searchVariants(payload) {
  function __searchVariants({ host }) {
    const serializedData = (0, import_transform_paths.transformPaths)(payload, [
      {
        transformFn: import_float.transformSDKFloatToRESTFloat,
        paths: [
          { path: "search.aggregations.range.buckets.from" },
          { path: "search.aggregations.range.buckets.to" },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.from"
          },
          {
            path: "search.aggregations.nested.nestedAggregations.range.buckets.to"
          }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.read_only_variant",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.product.variants.reader.api.v3.ProductVariantsReader.SearchVariants",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogProductVariantsReaderApiV3ProductVariantsReaderUrl(
        {
          protoPath: "/v3/products/search-variants",
          data: serializedData,
          host
        }
      ),
      data: serializedData,
      transformResponse: (payload2) => (0, import_transform_paths.transformPaths)(payload2, [
        {
          transformFn: import_float2.transformRESTFloatToSDKFloat,
          paths: [
            { path: "variants.physicalProperties.weight" },
            { path: "aggregationData.results.ranges.results.from" },
            { path: "aggregationData.results.ranges.results.to" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.from"
            },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.ranges.results.to"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.from"
            },
            {
              path: "aggregationData.results.nested.results.results.*.range.to"
            },
            {
              path: "variants.physicalProperties.pricePerUnit.settings.quantity"
            },
            { path: "variants.revenueDetails.profitMargin" },
            { path: "aggregationData.results.scalar.value" },
            {
              path: "aggregationData.results.groupedByValue.results.nestedResults.scalar.value"
            },
            {
              path: "aggregationData.results.nested.results.results.*.scalar.value"
            }
          ]
        },
        {
          transformFn: import_timestamp.transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "variants.media.image.urlExpirationDate" },
            { path: "variants.media.video.urlExpirationDate" },
            { path: "variants.media.video.resolutions.urlExpirationDate" },
            {
              path: "variants.media.video.resolutions.poster.urlExpirationDate"
            },
            { path: "variants.media.video.posters.urlExpirationDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __searchVariants;
}

// src/stores-catalog-v3-read-only-variant-read-only-variants-v-3.meta.ts
function queryVariants2() {
  const payload = {};
  const getRequestOptions = queryVariants(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/products/query-variants",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function searchVariants2() {
  const payload = {};
  const getRequestOptions = searchVariants(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/products/search-variants",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  queryVariants,
  searchVariants
});
//# sourceMappingURL=meta.js.map