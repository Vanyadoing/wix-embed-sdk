{"version":3,"sources":["../../index.ts","../../src/stores-catalog-v3-customization-customizations-v-3.public.ts","../../src/stores-catalog-v3-customization-customizations-v-3.universal.ts","../../src/stores-catalog-v3-customization-customizations-v-3.http.ts","../../src/stores-catalog-v3-customization-customizations-v-3.context.ts"],"sourcesContent":["export * from './src/stores-catalog-v3-customization-customizations-v-3.context.js';\n","import { renameKeysFromRESTResponseToSDKResponse } from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { EventDefinition, HttpClient, NonNullablePaths } from '@wix/sdk-types';\nimport {\n  AddCustomizationChoicesOptions,\n  AddCustomizationChoicesResponse,\n  BulkAddCustomizationChoicesOptions,\n  BulkAddCustomizationChoicesResponse,\n  BulkCreateCustomizationsOptions,\n  BulkCreateCustomizationsResponse,\n  BulkUpdateCustomizationsOptions,\n  BulkUpdateCustomizationsResponse,\n  Choice,\n  Customization,\n  CustomizationChoices,\n  CustomizationCreatedEnvelope,\n  CustomizationDeletedEnvelope,\n  CustomizationUpdatedEnvelope,\n  CustomizationsQueryBuilder,\n  GetCustomizationOptions,\n  MaskedCustomization,\n  QueryCustomizationsOptions,\n  RemoveCustomizationChoicesOptions,\n  RemoveCustomizationChoicesResponse,\n  SetCustomizationChoicesOptions,\n  SetCustomizationChoicesResponse,\n  UpdateCustomization,\n  UpdateCustomizationOptions,\n  addCustomizationChoices as universalAddCustomizationChoices,\n  bulkAddCustomizationChoices as universalBulkAddCustomizationChoices,\n  bulkCreateCustomizations as universalBulkCreateCustomizations,\n  bulkUpdateCustomizations as universalBulkUpdateCustomizations,\n  createCustomization as universalCreateCustomization,\n  deleteCustomization as universalDeleteCustomization,\n  getCustomization as universalGetCustomization,\n  queryCustomizations as universalQueryCustomizations,\n  removeCustomizationChoices as universalRemoveCustomizationChoices,\n  setCustomizationChoices as universalSetCustomizationChoices,\n  updateCustomization as universalUpdateCustomization,\n} from './stores-catalog-v3-customization-customizations-v-3.universal.js';\n\nexport const __metadata = { PACKAGE_NAME: '@wix/stores' };\n\nexport function createCustomization(\n  httpClient: HttpClient\n): CreateCustomizationSignature {\n  return (\n    customization: NonNullablePaths<\n      Customization,\n      | `choicesSettings.choices`\n      | `customizationRenderType`\n      | `customizationType`\n      | `freeTextInput.title`\n      | `name`\n    >\n  ) =>\n    universalCreateCustomization(\n      customization,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface CreateCustomizationSignature {\n  /**\n   * Creates a customization.\n   * @param - Customization to create.\n   * @returns Created customization.\n   */\n  (customization: Customization): Promise<Customization>;\n}\n\nexport function getCustomization(\n  httpClient: HttpClient\n): GetCustomizationSignature {\n  return (customizationId: string, options?: GetCustomizationOptions) =>\n    universalGetCustomization(\n      customizationId,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface GetCustomizationSignature {\n  /**\n   * Retrieves a customization.\n   * @param - Customization ID.\n   * @returns Customization.\n   */\n  (\n    customizationId: string,\n    options?: GetCustomizationOptions | undefined\n  ): Promise<Customization>;\n}\n\nexport function updateCustomization(\n  httpClient: HttpClient\n): UpdateCustomizationSignature {\n  return (\n    _id: string,\n    customization: NonNullablePaths<UpdateCustomization, `revision`>,\n    options?: UpdateCustomizationOptions\n  ) =>\n    universalUpdateCustomization(\n      _id,\n      customization,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface UpdateCustomizationSignature {\n  /**\n   * Updates a customization.\n   *\n   * Each time the customization is updated, `revision` increments by 1.\n   * The current `revision` must be passed when updating the customization.\n   * This ensures you're working with the latest customization and prevents unintended overwrites.\n   * @param - Customization ID.\n   * @returns Updated customization.\n   */\n  (\n    _id: string,\n    customization: UpdateCustomization,\n    options?: UpdateCustomizationOptions | undefined\n  ): Promise<Customization>;\n}\n\nexport function deleteCustomization(\n  httpClient: HttpClient\n): DeleteCustomizationSignature {\n  return (customizationId: string) =>\n    universalDeleteCustomization(\n      customizationId,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface DeleteCustomizationSignature {\n  /**\n   * Deletes a customization.\n   *\n   * > **Note:** A customization cannot be deleted if it is assigned to one or more products.\n   * @param - Customization ID.\n   */\n  (customizationId: string): Promise<void>;\n}\n\nexport function queryCustomizations(\n  httpClient: HttpClient\n): QueryCustomizationsSignature {\n  return (options?: QueryCustomizationsOptions) =>\n    universalQueryCustomizations(\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface QueryCustomizationsSignature {\n  /**\n   * Retrieves a list of up to 100 customizations, given the provided filtering, sorting, and cursor paging.\n   * Pass supported values to the `fields` array in the request to include those fields in the response.\n   *\n   *\n   * Query Customizations runs with these defaults, which you can override:\n   *\n   * - `createdDate` is sorted in `DESC` order\n   * - `cursorPaging.limit` is `100`\n   *\n   * For field support for filters and sorting,\n   * see [Customizations: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/customizations-v3/supported-filters-and-sorting).\n   *\n   * To learn about working with _Query_ endpoints, see\n   * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n   * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n   */\n  (\n    options?: QueryCustomizationsOptions | undefined\n  ): CustomizationsQueryBuilder;\n}\n\nexport function bulkCreateCustomizations(\n  httpClient: HttpClient\n): BulkCreateCustomizationsSignature {\n  return (\n    customizations: Customization[],\n    options?: BulkCreateCustomizationsOptions\n  ) =>\n    universalBulkCreateCustomizations(\n      customizations,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkCreateCustomizationsSignature {\n  /**\n   * Creates multiple brands.\n   * @param - Customizations to create.\n   */\n  (\n    customizations: Customization[],\n    options?: BulkCreateCustomizationsOptions | undefined\n  ): Promise<BulkCreateCustomizationsResponse>;\n}\n\nexport function addCustomizationChoices(\n  httpClient: HttpClient\n): AddCustomizationChoicesSignature {\n  return (\n    customizationId: string,\n    choices: Choice[],\n    options?: AddCustomizationChoicesOptions\n  ) =>\n    universalAddCustomizationChoices(\n      customizationId,\n      choices,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface AddCustomizationChoicesSignature {\n  /**\n   * Adds choices to a customization.\n   * @param - Customization ID.\n   * @param - Choices to add.\n   */\n  (\n    customizationId: string,\n    choices: Choice[],\n    options?: AddCustomizationChoicesOptions | undefined\n  ): Promise<AddCustomizationChoicesResponse>;\n}\n\nexport function setCustomizationChoices(\n  httpClient: HttpClient\n): SetCustomizationChoicesSignature {\n  return (\n    customizationId: string,\n    choices: Choice[],\n    options?: SetCustomizationChoicesOptions\n  ) =>\n    universalSetCustomizationChoices(\n      customizationId,\n      choices,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface SetCustomizationChoicesSignature {\n  /**\n   * Sets a customization's choices. Any and all existing choices will be overridden.\n   *\n   * > **Note:** A choice cannot be overridden if it is assigned to one or more products.\n   * @param - Customization ID.\n   * @param - Choices to set.\n   */\n  (\n    customizationId: string,\n    choices: Choice[],\n    options?: SetCustomizationChoicesOptions | undefined\n  ): Promise<SetCustomizationChoicesResponse>;\n}\n\nexport function removeCustomizationChoices(\n  httpClient: HttpClient\n): RemoveCustomizationChoicesSignature {\n  return (\n    customizationId: string,\n    choiceIds: string[],\n    options?: RemoveCustomizationChoicesOptions\n  ) =>\n    universalRemoveCustomizationChoices(\n      customizationId,\n      choiceIds,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface RemoveCustomizationChoicesSignature {\n  /**\n   * Removes choices from a customization.\n   *\n   * +> **Note:** A choice cannot be removed if it is assigned to one or more products.\n   * @param - Customization ID.\n   * @param - IDs of choices to remove.\n   */\n  (\n    customizationId: string,\n    choiceIds: string[],\n    options?: RemoveCustomizationChoicesOptions | undefined\n  ): Promise<RemoveCustomizationChoicesResponse>;\n}\n\nexport function bulkAddCustomizationChoices(\n  httpClient: HttpClient\n): BulkAddCustomizationChoicesSignature {\n  return (\n    customizationsChoices: NonNullablePaths<\n      CustomizationChoices,\n      `choices` | `customizationId`\n    >[],\n    options?: BulkAddCustomizationChoicesOptions\n  ) =>\n    universalBulkAddCustomizationChoices(\n      customizationsChoices,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkAddCustomizationChoicesSignature {\n  /**\n   * Adds choices to multiple customizations.\n   * @param - List of customization IDs and choices.\n   */\n  (\n    customizationsChoices: CustomizationChoices[],\n    options?: BulkAddCustomizationChoicesOptions | undefined\n  ): Promise<BulkAddCustomizationChoicesResponse>;\n}\n\nexport function bulkUpdateCustomizations(\n  httpClient: HttpClient\n): BulkUpdateCustomizationsSignature {\n  return (\n    customizations: NonNullablePaths<\n      MaskedCustomization,\n      `customization._id` | `customization.name` | `customization.revision`\n    >[],\n    options?: BulkUpdateCustomizationsOptions\n  ) =>\n    universalBulkUpdateCustomizations(\n      customizations,\n      options,\n      // @ts-ignore\n      { httpClient }\n    );\n}\n\ninterface BulkUpdateCustomizationsSignature {\n  /**\n   * Updates multiple customizations.\n   *\n   * Each time the customization is updated, `revision` increments by 1.\n   * The current `revision` must be passed when updating the customization.\n   * This ensures you're working with the latest customization and prevents unintended overwrites.\n   * @param - List of customizations to update.\n   */\n  (\n    customizations: MaskedCustomization[],\n    options?: BulkUpdateCustomizationsOptions | undefined\n  ): Promise<BulkUpdateCustomizationsResponse>;\n}\n\nexport const onCustomizationCreated = EventDefinition(\n  'wix.stores.catalog.v3.customization_created',\n  true,\n  (event: CustomizationCreatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'entity.choicesSettings.choices.image' }],\n        },\n      ])\n    )\n)<CustomizationCreatedEnvelope>();\nexport const onCustomizationDeleted = EventDefinition(\n  'wix.stores.catalog.v3.customization_deleted',\n  true,\n  (event: CustomizationDeletedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'entity.choicesSettings.choices.image' }],\n        },\n      ])\n    )\n)<CustomizationDeletedEnvelope>();\nexport const onCustomizationUpdated = EventDefinition(\n  'wix.stores.catalog.v3.customization_updated',\n  true,\n  (event: CustomizationUpdatedEnvelope) =>\n    renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(event, [\n        {\n          transformFn: transformRESTTimestampToSDKTimestamp,\n          paths: [\n            { path: 'entity.createdDate' },\n            { path: 'entity.updatedDate' },\n            { path: 'metadata.eventTime' },\n          ],\n        },\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'entity.choicesSettings.choices.image' }],\n        },\n      ])\n    )\n)<CustomizationUpdatedEnvelope>();\n\nexport {\n  ActionEvent,\n  AddCustomizationChoicesOptions,\n  AddCustomizationChoicesRequest,\n  AddCustomizationChoicesResponse,\n  App,\n  ApplicationError,\n  BaseEventMetadata,\n  BulkActionMetadata,\n  BulkAddCustomizationChoicesOptions,\n  BulkAddCustomizationChoicesRequest,\n  BulkAddCustomizationChoicesResponse,\n  BulkCreateCustomizationsOptions,\n  BulkCreateCustomizationsRequest,\n  BulkCreateCustomizationsResponse,\n  BulkCustomizationResult,\n  BulkUpdateCustomizationsOptions,\n  BulkUpdateCustomizationsRequest,\n  BulkUpdateCustomizationsResponse,\n  Choice,\n  ChoiceType,\n  ChoiceValueOneOf,\n  ChoicesSettings,\n  CreateCustomizationRequest,\n  CreateCustomizationResponse,\n  CursorPaging,\n  CursorPagingMetadata,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Cursors,\n  CustomTag,\n  Customization,\n  CustomizationChoices,\n  CustomizationCreatedEnvelope,\n  CustomizationCustomizationSettingsOneOf,\n  CustomizationDeletedEnvelope,\n  CustomizationIdsWrapper,\n  CustomizationRenderType,\n  CustomizationType,\n  CustomizationUpdatedEnvelope,\n  CustomizationsQueryBuilder,\n  CustomizationsQueryResult,\n  DeleteCustomizationRequest,\n  DeleteCustomizationResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  Empty,\n  EntityCreatedEvent,\n  EntityDeletedEvent,\n  EntityUpdatedEvent,\n  EventMetadata,\n  File,\n  FocalPoint,\n  FreeTextSettings,\n  GetCustomizationOptions,\n  GetCustomizationRequest,\n  GetCustomizationResponse,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  ItemMetadata,\n  MaskedCustomization,\n  MessageEnvelope,\n  MultipleColors,\n  Page,\n  QueryCustomizationsOptions,\n  QueryCustomizationsRequest,\n  QueryCustomizationsResponse,\n  RemoveCustomizationChoicesOptions,\n  RemoveCustomizationChoicesRequest,\n  RemoveCustomizationChoicesResponse,\n  RequestedFields,\n  RestoreInfo,\n  SetCustomizationChoicesOptions,\n  SetCustomizationChoicesRequest,\n  SetCustomizationChoicesResponse,\n  SortOrder,\n  Sorting,\n  URI,\n  UpdateCustomization,\n  UpdateCustomizationOptions,\n  UpdateCustomizationRequest,\n  UpdateCustomizationResponse,\n  WebhookIdentityType,\n} from './stores-catalog-v3-customization-customizations-v-3.universal.js';\n","import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';\nimport { queryBuilder } from '@wix/sdk-runtime/query-builder';\nimport {\n  renameKeysFromSDKRequestToRESTRequest,\n  renameKeysFromRESTResponseToSDKResponse,\n} from '@wix/sdk-runtime/rename-all-nested-keys';\nimport { HttpClient, HttpResponse, NonNullablePaths } from '@wix/sdk-types';\nimport * as ambassadorWixStoresCatalogV3Customization from './stores-catalog-v3-customization-customizations-v-3.http.js';\n// @ts-ignore\nimport { transformSDKImageToRESTImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformRESTImageToSDKImage } from '@wix/sdk-runtime/transformations/image';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\n\n/**\n * Customizations include options and modifiers which can later be applied to products.\n * Options are designed to add variations to a product, where modifiers add a customizable change to the product but without creating another variant.\n */\nexport interface Customization extends CustomizationCustomizationSettingsOneOf {\n  /**\n   * Free text input settings.\n   *\n   * > **Note:** To be passed along with `customizationRenderType: FREE_TEXT`.\n   * @immutable\n   */\n  freeTextInput?: FreeTextSettings;\n  /**\n   * Choices settings.\n   *\n   * > **Note:** Must be passed along with `customizationRenderType` of `SWATCH_CHOICES` and `TEXT_CHOICES`.\n   */\n  choicesSettings?: ChoicesSettings;\n  /**\n   * Customization ID.\n   * @minLength 1\n   * @maxLength 36\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Revision number, which increments by 1 each time the customization is updated.\n   * To prevent conflicting changes,\n   * the current revision must be passed when updating the customization.\n   *\n   * Ignored when creating a customization.\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Date and time the customization was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the customization was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Customization name for options (for example, `\"color\"`, `\"size\"`) and modifiers (for example, `\"greeting card\"`).\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string;\n  /**\n   * Customization type.\n   * @immutable\n   */\n  customizationType?: CustomizationTypeWithLiterals;\n  /**\n   * Customization render type.\n   *\n   * Defines how the customization will be displayed in the storefront.\n   * @immutable\n   */\n  customizationRenderType?: CustomizationRenderTypeWithLiterals;\n  /**\n   * Number of products this customization is assigned to.\n   * > **Note:** Returned only when you pass `\"ASSIGNED_PRODUCTS_COUNT\"` to the `fields` array in Customizations API requests.\n   * @readonly\n   */\n  assignedProductsCount?: number | null;\n}\n\n/** @oneof */\nexport interface CustomizationCustomizationSettingsOneOf {\n  /**\n   * Free text input settings.\n   *\n   * > **Note:** To be passed along with `customizationRenderType: FREE_TEXT`.\n   * @immutable\n   */\n  freeTextInput?: FreeTextSettings;\n  /**\n   * Choices settings.\n   *\n   * > **Note:** Must be passed along with `customizationRenderType` of `SWATCH_CHOICES` and `TEXT_CHOICES`.\n   */\n  choicesSettings?: ChoicesSettings;\n}\n\nexport enum CustomizationType {\n  UNKNOWN_CUSTOMIZATION_TYPE = 'UNKNOWN_CUSTOMIZATION_TYPE',\n  PRODUCT_OPTION = 'PRODUCT_OPTION',\n  MODIFIER = 'MODIFIER',\n}\n\n/** @enumType */\nexport type CustomizationTypeWithLiterals =\n  | CustomizationType\n  | 'UNKNOWN_CUSTOMIZATION_TYPE'\n  | 'PRODUCT_OPTION'\n  | 'MODIFIER';\n\nexport enum CustomizationRenderType {\n  UNKNOWN_CUSTOMIZATION_RENDER_TYPE = 'UNKNOWN_CUSTOMIZATION_RENDER_TYPE',\n  /** Customization by free text input. */\n  FREE_TEXT = 'FREE_TEXT',\n  /** Customization by selection of text choices. */\n  TEXT_CHOICES = 'TEXT_CHOICES',\n  /** Customization by selection of colors. */\n  SWATCH_CHOICES = 'SWATCH_CHOICES',\n}\n\n/** @enumType */\nexport type CustomizationRenderTypeWithLiterals =\n  | CustomizationRenderType\n  | 'UNKNOWN_CUSTOMIZATION_RENDER_TYPE'\n  | 'FREE_TEXT'\n  | 'TEXT_CHOICES'\n  | 'SWATCH_CHOICES';\n\nexport interface FreeTextSettings {\n  /** Minimum text character length. */\n  minCharCount?: number;\n  /**\n   * Maximum text character length.\n   * @max 500\n   */\n  maxCharCount?: number;\n  /**\n   * Default amount added to a product's price when this choice is assigned to a modifier.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  defaultAddedPrice?: string | null;\n  /**\n   * Title to display to customer for their free-text input.\n   * @minLength 1\n   * @maxLength 100\n   */\n  title?: string;\n}\n\nexport interface ChoicesSettings {\n  /**\n   * List of choices.\n   * @minSize 1\n   * @maxSize 200\n   * @immutable\n   */\n  choices?: Choice[];\n}\n\nexport interface Choice extends ChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   * @format COLOR_HEX\n   */\n  colorCode?: string;\n  /**\n   * Choice ID.\n   * @format GUID\n   * @readonly\n   */\n  _id?: string;\n  /**\n   * Choice type.\n   *\n   * > **Notes:**\n   * > + For `customizationRenderType: SWATCH_CHOICES`, the supported `choiceType` values are: `ONE_COLOR`, `MULTIPLE_COLORS`, or `IMAGE`.\n   * > + For a `customizationRenderType` of `TEXT_CHOICES` and `FREE_TEXT`, the supported `choiceType` value is: `CHOICE_TEXT`.\n   * @immutable\n   */\n  choiceType?: ChoiceTypeWithLiterals;\n  /**\n   * A read-only key generated based on choice name. Used for eCommerce integration.\n   * @readonly\n   * @minLength 1\n   * @maxLength 50\n   */\n  key?: string | null;\n  /**\n   * Choice name.\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string;\n  /**\n   * Default amount added to a product's price when this customization is assigned to a modifier.\n   * @decimalValue options { gte:0, lte:999999999, maxScale:3 }\n   */\n  defaultAddedPrice?: string | null;\n  /**\n   * Number of products this choice is assigned to .\n   * @readonly\n   */\n  assignedProductsCount?: number;\n}\n\n/** @oneof */\nexport interface ChoiceValueOneOf {\n  /**\n   * Color code in HEX format, [as described by MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/hex-color).\n   * @minLength 3\n   * @maxLength 20\n   * @format COLOR_HEX\n   */\n  colorCode?: string;\n}\n\nexport enum ChoiceType {\n  UNKNOWN_CHOICE_TYPE = 'UNKNOWN_CHOICE_TYPE',\n  /** For a `customizationRenderType` of `TEXT_CHOICES` and `FREE_TEXT`. */\n  CHOICE_TEXT = 'CHOICE_TEXT',\n  /** For `customizationRenderType: SWATCH_CHOICES`. */\n  ONE_COLOR = 'ONE_COLOR',\n  /** For `customizationRenderType: SWATCH_CHOICES`. */\n  MULTIPLE_COLORS = 'MULTIPLE_COLORS',\n  /** For `customizationRenderType: SWATCH_CHOICES`. */\n  IMAGE = 'IMAGE',\n}\n\n/** @enumType */\nexport type ChoiceTypeWithLiterals =\n  | ChoiceType\n  | 'UNKNOWN_CHOICE_TYPE'\n  | 'CHOICE_TEXT'\n  | 'ONE_COLOR'\n  | 'MULTIPLE_COLORS'\n  | 'IMAGE';\n\nexport interface MultipleColors {\n  /**\n   * A list of color codes.\n   * @minLength 3\n   * @maxLength 20\n   * @minSize 2\n   * @maxSize 2\n   */\n  colorCodes?: string[];\n}\n\nexport interface FocalPoint {\n  /** X-coordinate of the focal point. */\n  x?: number;\n  /** Y-coordinate of the focal point. */\n  y?: number;\n  /** crop by height */\n  height?: number | null;\n  /** crop by width */\n  width?: number | null;\n}\n\nexport interface InvalidateCache extends InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n  /** Invalidate by custom tag. Tags used in BO invalidation are disabled for this endpoint (more info: https://wix-bo.com/dev/clear-ssr-cache) */\n  customTag?: CustomTag;\n  /**\n   * tell us why you're invalidating the cache. You don't need to add your app name\n   * @maxLength 256\n   */\n  reason?: string | null;\n  /** Is local DS */\n  localDc?: boolean;\n  hardPurge?: boolean;\n}\n\n/** @oneof */\nexport interface InvalidateCacheGetByOneOf {\n  /**\n   * Invalidate by msId. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Site ID. NOT recommended, as this will invalidate the entire site cache!\n   * @format GUID\n   */\n  siteId?: string;\n  /** Invalidate by App */\n  app?: App;\n  /** Invalidate by page id */\n  page?: Page;\n  /** Invalidate by URI path */\n  uri?: URI;\n  /** Invalidate by file (for media files such as PDFs) */\n  file?: File;\n  /** Invalidate by custom tag. Tags used in BO invalidation are disabled for this endpoint (more info: https://wix-bo.com/dev/clear-ssr-cache) */\n  customTag?: CustomTag;\n}\n\nexport interface App {\n  /**\n   * The AppDefId\n   * @minLength 1\n   */\n  appDefId?: string;\n  /**\n   * The instance Id\n   * @format GUID\n   */\n  instanceId?: string;\n}\n\nexport interface Page {\n  /**\n   * the msid the page is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by Page ID\n   * @minLength 1\n   */\n  pageId?: string;\n}\n\nexport interface URI {\n  /**\n   * the msid the URI is on\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * URI path to invalidate (e.g. page/my/path) - without leading/trailing slashes\n   * @minLength 1\n   */\n  uriPath?: string;\n}\n\nexport interface File {\n  /**\n   * the msid the file is related to\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Invalidate by filename (for media files such as PDFs)\n   * @minLength 1\n   * @maxLength 256\n   */\n  fileName?: string;\n}\n\nexport interface CustomTag {\n  /**\n   * the msid the tag is related to\n   * @format GUID\n   */\n  metaSiteId?: string;\n  /**\n   * Tag to invalidate by\n   * @minLength 1\n   * @maxLength 256\n   */\n  tag?: string;\n}\n\nexport interface CreateCustomizationRequest {\n  /** Customization to create. */\n  customization: Customization;\n}\n\nexport interface CreateCustomizationResponse {\n  /** Created customization. */\n  customization?: Customization;\n}\n\nexport interface GetCustomizationRequest {\n  /**\n   * Customization ID.\n   * @format GUID\n   */\n  customizationId: string;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport enum RequestedFields {\n  /** Unknown requested field. */\n  UNKNOWN_REQUESTED_FIELD = 'UNKNOWN_REQUESTED_FIELD',\n  /** Assigned products count. */\n  ASSIGNED_PRODUCTS_COUNT = 'ASSIGNED_PRODUCTS_COUNT',\n}\n\n/** @enumType */\nexport type RequestedFieldsWithLiterals =\n  | RequestedFields\n  | 'UNKNOWN_REQUESTED_FIELD'\n  | 'ASSIGNED_PRODUCTS_COUNT';\n\nexport interface GetCustomizationResponse {\n  /** Customization. */\n  customization?: Customization;\n}\n\nexport interface UpdateCustomizationRequest {\n  /** Customization to update. */\n  customization: Customization;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface UpdateCustomizationResponse {\n  /** Updated customization. */\n  customization?: Customization;\n}\n\nexport interface DeleteCustomizationRequest {\n  /**\n   * Customization ID.\n   * @format GUID\n   */\n  customizationId: string;\n}\n\nexport interface DeleteCustomizationResponse {}\n\nexport interface QueryCustomizationsRequest {\n  /** Query options. */\n  query?: CursorQuery;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface CursorQuery extends CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n  /**\n   * Filter object in the following format:\n   * `\"filter\" : {\n   * \"fieldName1\": \"value1\",\n   * \"fieldName2\":{\"$operator\":\"value2\"}\n   * }`\n   * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n   */\n  filter?: Record<string, any> | null;\n  /**\n   * Sort object in the following format:\n   * `[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n   * @maxSize 5\n   */\n  sort?: Sorting[];\n}\n\n/** @oneof */\nexport interface CursorQueryPagingMethodOneOf {\n  /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */\n  cursorPaging?: CursorPaging;\n}\n\nexport interface Sorting {\n  /**\n   * Name of the field to sort by.\n   * @maxLength 512\n   */\n  fieldName?: string;\n  /** Sort order. */\n  order?: SortOrderWithLiterals;\n}\n\nexport enum SortOrder {\n  /** Ascending order. */\n  ASC = 'ASC',\n  /** Descending order. */\n  DESC = 'DESC',\n}\n\n/** @enumType */\nexport type SortOrderWithLiterals = SortOrder | 'ASC' | 'DESC';\n\nexport interface CursorPaging {\n  /**\n   * Maximum number of items to return in the results.\n   * @max 100\n   */\n  limit?: number | null;\n  /**\n   * Pointer to the next or previous page in the list of results.\n   *\n   * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.\n   * Not relevant for the first request.\n   * @maxLength 16000\n   */\n  cursor?: string | null;\n}\n\nexport interface QueryCustomizationsResponse {\n  /**\n   * List of customizations.\n   * @minSize 1\n   * @maxSize 200\n   */\n  customizations?: Customization[];\n  /** Details on the paged set of results returned. */\n  pagingMetadata?: CursorPagingMetadata;\n}\n\nexport interface CursorPagingMetadata {\n  /** Number of items returned in the response. */\n  count?: number | null;\n  /** Cursor strings that point to the next page, previous page, or both. */\n  cursors?: Cursors;\n  /**\n   * Whether there are more pages to retrieve following the current page.\n   *\n   * + `true`: Another page of results can be retrieved.\n   * + `false`: This is the last page.\n   */\n  hasNext?: boolean | null;\n}\n\nexport interface Cursors {\n  /**\n   * Cursor string pointing to the next page in the list of results.\n   * @maxLength 16000\n   */\n  next?: string | null;\n  /**\n   * Cursor pointing to the previous page in the list of results.\n   * @maxLength 16000\n   */\n  prev?: string | null;\n}\n\nexport interface BulkCreateCustomizationsRequest {\n  /**\n   * Customizations to create.\n   * @minSize 1\n   * @maxSize 100\n   */\n  customizations: Customization[];\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n}\n\nexport interface BulkCreateCustomizationsResponse {\n  /**\n   * Customizations created by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkCustomizationResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkCustomizationResult {\n  /** Bulk action metadata for customization. */\n  itemMetadata?: ItemMetadata;\n  /**\n   * Full customization entity.\n   *\n   * Returned only if `returnEntity: true` is passed in the request.\n   */\n  customization?: Customization;\n}\n\nexport interface ItemMetadata {\n  /**\n   * Item ID. Should always be available, unless it's impossible (for example, when failing to create an item).\n   * @minLength 1\n   * @maxLength 36\n   */\n  _id?: string | null;\n  /** Index of the item within the request array. Allows for correlation between request and response items. */\n  originalIndex?: number;\n  /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */\n  success?: boolean;\n  /** Details about the error in case of failure. */\n  error?: ApplicationError;\n}\n\nexport interface ApplicationError {\n  /** Error code. */\n  code?: string;\n  /** Description of the error. */\n  description?: string;\n  /** Data related to the error. */\n  data?: Record<string, any> | null;\n}\n\nexport interface BulkActionMetadata {\n  /** Number of items that were successfully processed. */\n  totalSuccesses?: number;\n  /** Number of items that couldn't be processed. */\n  totalFailures?: number;\n  /** Number of failures without details because detailed failure threshold was exceeded. */\n  undetailedFailures?: number;\n}\n\nexport interface CustomizationIdsWrapper {\n  /**\n   * list of all the customization ids that are invalid\n   * e.g list of failed choices ids\n   * @minSize 1\n   * @maxSize 100\n   * @minLength 1\n   * @maxLength 36\n   */\n  customizationIds?: string[];\n}\n\nexport interface AddCustomizationChoicesRequest {\n  /**\n   * Customization ID.\n   * @format GUID\n   */\n  customizationId: string;\n  /**\n   * Choices to add.\n   * @minSize 1\n   * @maxSize 100\n   */\n  choices: Choice[];\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface AddCustomizationChoicesResponse {\n  /** Updated customization. */\n  customization?: Customization;\n}\n\nexport interface SetCustomizationChoicesRequest {\n  /**\n   * Customization ID.\n   * @format GUID\n   */\n  customizationId: string;\n  /**\n   * Choices to set.\n   * @minSize 1\n   * @maxSize 100\n   */\n  choices: Choice[];\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface SetCustomizationChoicesResponse {\n  /** Updated customization. */\n  customization?: Customization;\n}\n\nexport interface RemoveCustomizationChoicesRequest {\n  /**\n   * Customization ID.\n   * @format GUID\n   */\n  customizationId: string;\n  /**\n   * IDs of choices to remove.\n   * @format GUID\n   * @minSize 1\n   * @maxSize 100\n   */\n  choiceIds: string[];\n  /** Customization revision. */\n  revision?: string;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface RemoveCustomizationChoicesResponse {\n  /** Updated customization. */\n  customization?: Customization;\n}\n\nexport interface BulkAddCustomizationChoicesRequest {\n  /**\n   * List of customization IDs and choices.\n   * @minSize 1\n   * @maxSize 100\n   */\n  customizationsChoices: CustomizationChoices[];\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface CustomizationChoices {\n  /**\n   * Customization ID.\n   * @minLength 1\n   * @maxLength 36\n   */\n  customizationId?: string;\n  /**\n   * Choices to add.\n   * @minSize 1\n   * @maxSize 100\n   */\n  choices?: Choice[];\n}\n\nexport interface BulkAddCustomizationChoicesResponse {\n  /**\n   * Customizations updated by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkCustomizationResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface BulkUpdateCustomizationsRequest {\n  /**\n   * List of customizations to update.\n   * @minSize 1\n   * @maxSize 100\n   */\n  customizations: MaskedCustomization[];\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\nexport interface MaskedCustomization {\n  /** Customization to update. */\n  customization?: Customization;\n}\n\nexport interface BulkUpdateCustomizationsResponse {\n  /**\n   * Customizations updated by bulk action.\n   * @minSize 1\n   * @maxSize 100\n   */\n  results?: BulkCustomizationResult[];\n  /** Bulk action metadata. */\n  bulkActionMetadata?: BulkActionMetadata;\n}\n\nexport interface DomainEvent extends DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\n/** @oneof */\nexport interface DomainEventBodyOneOf {\n  createdEvent?: EntityCreatedEvent;\n  updatedEvent?: EntityUpdatedEvent;\n  deletedEvent?: EntityDeletedEvent;\n  actionEvent?: ActionEvent;\n}\n\nexport interface EntityCreatedEvent {\n  entity?: string;\n}\n\nexport interface RestoreInfo {\n  deletedDate?: Date | null;\n}\n\nexport interface EntityUpdatedEvent {\n  /**\n   * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n   * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n   * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n   */\n  currentEntity?: string;\n}\n\nexport interface EntityDeletedEvent {\n  /** Entity that was deleted. */\n  deletedEntity?: string | null;\n}\n\nexport interface ActionEvent {\n  body?: string;\n}\n\nexport interface Empty {}\n\nexport interface MessageEnvelope {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n  /** Stringify payload. */\n  data?: string;\n}\n\nexport interface IdentificationData extends IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n  /** @readonly */\n  identityType?: WebhookIdentityTypeWithLiterals;\n}\n\n/** @oneof */\nexport interface IdentificationDataIdOneOf {\n  /**\n   * ID of a site visitor that has not logged in to the site.\n   * @format GUID\n   */\n  anonymousVisitorId?: string;\n  /**\n   * ID of a site visitor that has logged in to the site.\n   * @format GUID\n   */\n  memberId?: string;\n  /**\n   * ID of a Wix user (site owner, contributor, etc.).\n   * @format GUID\n   */\n  wixUserId?: string;\n  /**\n   * ID of an app.\n   * @format GUID\n   */\n  appId?: string;\n}\n\nexport enum WebhookIdentityType {\n  UNKNOWN = 'UNKNOWN',\n  ANONYMOUS_VISITOR = 'ANONYMOUS_VISITOR',\n  MEMBER = 'MEMBER',\n  WIX_USER = 'WIX_USER',\n  APP = 'APP',\n}\n\n/** @enumType */\nexport type WebhookIdentityTypeWithLiterals =\n  | WebhookIdentityType\n  | 'UNKNOWN'\n  | 'ANONYMOUS_VISITOR'\n  | 'MEMBER'\n  | 'WIX_USER'\n  | 'APP';\n\nexport interface BaseEventMetadata {\n  /**\n   * App instance ID.\n   * @format GUID\n   */\n  instanceId?: string | null;\n  /**\n   * Event type.\n   * @maxLength 150\n   */\n  eventType?: string;\n  /** The identification type and identity data. */\n  identity?: IdentificationData;\n}\n\nexport interface EventMetadata extends BaseEventMetadata {\n  /** Event ID. With this ID you can easily spot duplicated events and ignore them. */\n  _id?: string;\n  /**\n   * Fully Qualified Domain Name of an entity. This is a unique identifier assigned to the API main business entities.\n   * For example, `wix.stores.catalog.product`, `wix.bookings.session`, `wix.payments.transaction`.\n   */\n  entityFqdn?: string;\n  /**\n   * Event action name, placed at the top level to make it easier for users to dispatch messages.\n   * For example: `created`/`updated`/`deleted`/`started`/`completed`/`email_opened`.\n   */\n  slug?: string;\n  /** ID of the entity associated with the event. */\n  entityId?: string;\n  /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example, `2020-04-26T13:57:50.699Z`. */\n  eventTime?: Date | null;\n  /**\n   * Whether the event was triggered as a result of a privacy regulation application\n   * (for example, GDPR).\n   */\n  triggeredByAnonymizeRequest?: boolean | null;\n  /** If present, indicates the action that triggered the event. */\n  originatedFrom?: string | null;\n  /**\n   * A sequence number that indicates the order of updates to an entity. For example, if an entity was updated at 16:00 and then again at 16:01, the second update will always have a higher sequence number.\n   * You can use this number to make sure you're handling updates in the right order. Just save the latest sequence number on your end and compare it to the one in each new message. If the new message has an older (lower) number, you can safely ignore it.\n   */\n  entityEventSequence?: string | null;\n}\n\nexport interface CustomizationCreatedEnvelope {\n  entity: Customization;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a customization is created.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Read customizations in v3 catalog\n * @permissionScopeId SCOPE.STORES.CUSTOMIZATION_READ\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.CUSTOMIZATION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.customization_created\n * @serviceIdentifier wix.stores.catalog.customization.v3.CustomizationService\n * @slug created\n * @documentationMaturity preview\n */\nexport declare function onCustomizationCreated(\n  handler: (event: CustomizationCreatedEnvelope) => void | Promise<void>\n): void;\n\nexport interface CustomizationDeletedEnvelope {\n  entity: Customization;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a customization is deleted.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Read customizations in v3 catalog\n * @permissionScopeId SCOPE.STORES.CUSTOMIZATION_READ\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.CUSTOMIZATION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.customization_deleted\n * @serviceIdentifier wix.stores.catalog.customization.v3.CustomizationService\n * @slug deleted\n * @documentationMaturity preview\n */\nexport declare function onCustomizationDeleted(\n  handler: (event: CustomizationDeletedEnvelope) => void | Promise<void>\n): void;\n\nexport interface CustomizationUpdatedEnvelope {\n  entity: Customization;\n  metadata: EventMetadata;\n}\n\n/**\n * Triggered when a customization is updated.\n * @permissionScope Manage Stores - all permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES\n * @permissionScope Manage Stores\n * @permissionScopeId SCOPE.STORES.MANAGE-STORES\n * @permissionScope Read v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_READ\n * @permissionScope Manage Products\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-PRODUCTS\n * @permissionScope Read Stores - all read permissions\n * @permissionScopeId SCOPE.DC-STORES-MEGA.READ-STORES\n * @permissionScope Read Products\n * @permissionScopeId SCOPE.DC-STORES.READ-PRODUCTS\n * @permissionScope Manage Restaurants - all permissions\n * @permissionScopeId SCOPE.RESTAURANTS.MEGA-SCOPES\n * @permissionScope Product write in v3 catalog\n * @permissionScopeId SCOPE.STORES.PRODUCT_WRITE\n * @permissionScope Read customizations in v3 catalog\n * @permissionScopeId SCOPE.STORES.CUSTOMIZATION_READ\n * @permissionScope Manage v3 catalog\n * @permissionScopeId SCOPE.STORES.CATALOG_WRITE\n * @permissionScope Manage Orders\n * @permissionScopeId SCOPE.DC-STORES.MANAGE-ORDERS\n * @permissionId WIX_STORES.CUSTOMIZATION_READ\n * @webhook\n * @eventType wix.stores.catalog.v3.customization_updated\n * @serviceIdentifier wix.stores.catalog.customization.v3.CustomizationService\n * @slug updated\n * @documentationMaturity preview\n */\nexport declare function onCustomizationUpdated(\n  handler: (event: CustomizationUpdatedEnvelope) => void | Promise<void>\n): void;\n\ntype CustomizationNonNullablePaths =\n  | `freeTextInput.minCharCount`\n  | `freeTextInput.maxCharCount`\n  | `freeTextInput.title`\n  | `choicesSettings.choices`\n  | `choicesSettings.choices.${number}.colorCode`\n  | `choicesSettings.choices.${number}._id`\n  | `choicesSettings.choices.${number}.choiceType`\n  | `choicesSettings.choices.${number}.name`\n  | `choicesSettings.choices.${number}.assignedProductsCount`\n  | `name`\n  | `customizationType`\n  | `customizationRenderType`;\n\n/**\n * Creates a customization.\n * @param customization - Customization to create.\n * @public\n * @documentationMaturity preview\n * @requiredField customization\n * @requiredField customization.choicesSettings.choices\n * @requiredField customization.customizationRenderType\n * @requiredField customization.customizationSettings\n * @requiredField customization.customizationType\n * @requiredField customization.name\n * @permissionId WIX_STORES.CUSTOMIZATION_CREATE\n * @applicableIdentity APP\n * @returns Created customization.\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.CreateCustomization\n */\nexport async function createCustomization(\n  customization: NonNullablePaths<\n    Customization,\n    | `choicesSettings.choices`\n    | `customizationRenderType`\n    | `customizationType`\n    | `freeTextInput.title`\n    | `name`\n  >\n): Promise<NonNullablePaths<Customization, CustomizationNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({ customization: customization }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'customization.choicesSettings.choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.createCustomization(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )?.customization!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { customization: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['customization']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a customization.\n * @param customizationId - Customization ID.\n * @public\n * @documentationMaturity preview\n * @requiredField customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_READ\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @returns Customization.\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.GetCustomization\n */\nexport async function getCustomization(\n  customizationId: string,\n  options?: GetCustomizationOptions\n): Promise<NonNullablePaths<Customization, CustomizationNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    customizationId: customizationId,\n    fields: options?.fields,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.getCustomization(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )?.customization!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizationId: '$[0]',\n          fields: '$[1].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationId', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface GetCustomizationOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Updates a customization.\n *\n * Each time the customization is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the customization.\n * This ensures you're working with the latest customization and prevents unintended overwrites.\n * @param _id - Customization ID.\n * @public\n * @documentationMaturity preview\n * @requiredField _id\n * @requiredField customization\n * @requiredField customization.revision\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @returns Updated customization.\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.UpdateCustomization\n */\nexport async function updateCustomization(\n  _id: string,\n  customization: NonNullablePaths<UpdateCustomization, `revision`>,\n  options?: UpdateCustomizationOptions\n): Promise<NonNullablePaths<Customization, CustomizationNonNullablePaths>> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customization: { ...customization, id: _id },\n      fields: options?.fields,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'customization.choicesSettings.choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.updateCustomization(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )?.customization!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: { customization: '$[1]' },\n        explicitPathsToArguments: {\n          'customization.id': '$[0]',\n          fields: '$[2].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['_id', 'customization', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface UpdateCustomization {\n  /**\n   * Free text input settings.\n   *\n   * > **Note:** To be passed along with `customizationRenderType: FREE_TEXT`.\n   * @immutable\n   */\n  freeTextInput?: FreeTextSettings;\n  /**\n   * Choices settings.\n   *\n   * > **Note:** Must be passed along with `customizationRenderType` of `SWATCH_CHOICES` and `TEXT_CHOICES`.\n   */\n  choicesSettings?: ChoicesSettings;\n  /**\n   * Customization ID.\n   * @minLength 1\n   * @maxLength 36\n   * @readonly\n   */\n  _id?: string | null;\n  /**\n   * Revision number, which increments by 1 each time the customization is updated.\n   * To prevent conflicting changes,\n   * the current revision must be passed when updating the customization.\n   *\n   * Ignored when creating a customization.\n   * @readonly\n   */\n  revision?: string | null;\n  /**\n   * Date and time the customization was created.\n   * @readonly\n   */\n  _createdDate?: Date | null;\n  /**\n   * Date and time the customization was updated.\n   * @readonly\n   */\n  _updatedDate?: Date | null;\n  /**\n   * Customization name for options (for example, `\"color\"`, `\"size\"`) and modifiers (for example, `\"greeting card\"`).\n   * @minLength 1\n   * @maxLength 50\n   */\n  name?: string;\n  /**\n   * Customization type.\n   * @immutable\n   */\n  customizationType?: CustomizationTypeWithLiterals;\n  /**\n   * Customization render type.\n   *\n   * Defines how the customization will be displayed in the storefront.\n   * @immutable\n   */\n  customizationRenderType?: CustomizationRenderTypeWithLiterals;\n  /**\n   * Number of products this customization is assigned to.\n   * > **Note:** Returned only when you pass `\"ASSIGNED_PRODUCTS_COUNT\"` to the `fields` array in Customizations API requests.\n   * @readonly\n   */\n  assignedProductsCount?: number | null;\n}\n\nexport interface UpdateCustomizationOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Deletes a customization.\n *\n * > **Note:** A customization cannot be deleted if it is assigned to one or more products.\n * @param customizationId - Customization ID.\n * @public\n * @documentationMaturity preview\n * @requiredField customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_DELETE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.DeleteCustomization\n */\nexport async function deleteCustomization(\n  customizationId: string\n): Promise<void> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    customizationId: customizationId,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.deleteCustomization(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { customizationId: '$[0]' },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationId']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\n/**\n * Retrieves a list of up to 100 customizations, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Customizations runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Customizations: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/customizations-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n * @public\n * @documentationMaturity preview\n * @permissionId WIX_STORES.CUSTOMIZATION_READ\n * @applicableIdentity APP\n * @applicableIdentity VISITOR\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.QueryCustomizations\n */\nexport function queryCustomizations(\n  options?: QueryCustomizationsOptions\n): CustomizationsQueryBuilder {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[1] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  return queryBuilder<\n    Customization,\n    'CURSOR',\n    QueryCustomizationsRequest,\n    QueryCustomizationsResponse\n  >({\n    func: async (payload: QueryCustomizationsRequest) => {\n      const reqOpts =\n        ambassadorWixStoresCatalogV3Customization.queryCustomizations({\n          ...payload,\n          ...(options ?? {}),\n        });\n\n      sideEffects?.onSiteCall?.();\n      try {\n        const result = await httpClient.request(reqOpts);\n        sideEffects?.onSuccess?.(result);\n        return result;\n      } catch (err) {\n        sideEffects?.onError?.(err);\n        throw err;\n      }\n    },\n    requestTransformer: (query: QueryCustomizationsRequest['query']) => {\n      const args = [query, options] as [\n        QueryCustomizationsRequest['query'],\n        QueryCustomizationsOptions\n      ];\n      return renameKeysFromSDKRequestToRESTRequest({\n        ...args?.[1],\n        query: args?.[0],\n      });\n    },\n    responseTransformer: ({\n      data,\n    }: HttpResponse<QueryCustomizationsResponse>) => {\n      const transformedData = renameKeysFromRESTResponseToSDKResponse(\n        transformPaths(data, [\n          {\n            transformFn: transformRESTImageToSDKImage,\n            paths: [{ path: 'customizations.choicesSettings.choices.image' }],\n          },\n        ])\n      );\n\n      return {\n        items: transformedData?.customizations,\n        pagingMetadata: transformedData?.pagingMetadata,\n      };\n    },\n    errorTransformer: (err: unknown) => {\n      const transformedError = sdkTransformError(err, {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: { query: '$[0]' },\n        singleArgumentUnchanged: false,\n      });\n\n      throw transformedError;\n    },\n    pagingMethod: 'CURSOR',\n    transformationPaths: {},\n  });\n}\n\nexport interface QueryCustomizationsOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[] | undefined;\n}\n\ninterface QueryCursorResult {\n  cursors: Cursors;\n  hasNext: () => boolean;\n  hasPrev: () => boolean;\n  length: number;\n  pageSize: number;\n}\n\nexport interface CustomizationsQueryResult extends QueryCursorResult {\n  items: Customization[];\n  query: CustomizationsQueryBuilder;\n  next: () => Promise<CustomizationsQueryResult>;\n  prev: () => Promise<CustomizationsQueryResult>;\n}\n\nexport interface CustomizationsQueryBuilder {\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  eq: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'customizationType'\n      | 'customizationRenderType',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ne: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'customizationType'\n      | 'customizationRenderType',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  ge: (\n    propertyName: '_id' | '_createdDate' | '_updatedDate' | 'name',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  gt: (\n    propertyName: '_id' | '_createdDate' | '_updatedDate' | 'name',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  le: (\n    propertyName: '_id' | '_createdDate' | '_updatedDate' | 'name',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `value`.\n   * @param value - Value to compare against.\n   * @documentationMaturity preview\n   */\n  lt: (\n    propertyName: '_id' | '_createdDate' | '_updatedDate' | 'name',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `string`.\n   * @param string - String to compare against. Case-insensitive.\n   * @documentationMaturity preview\n   */\n  startsWith: (\n    propertyName: '_id' | 'name',\n    value: string\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyName - Property whose value is compared with `values`.\n   * @param values - List of values to compare against.\n   * @documentationMaturity preview\n   */\n  hasSome: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'customizationType'\n      | 'customizationRenderType',\n    value: any[]\n  ) => CustomizationsQueryBuilder;\n  /** @documentationMaturity preview */\n  in: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'customizationType'\n      | 'customizationRenderType',\n    value: any\n  ) => CustomizationsQueryBuilder;\n  /** @documentationMaturity preview */\n  exists: (\n    propertyName:\n      | '_id'\n      | '_createdDate'\n      | '_updatedDate'\n      | 'name'\n      | 'customizationType'\n      | 'customizationRenderType',\n    value: boolean\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  ascending: (\n    ...propertyNames: Array<'_id' | '_createdDate' | '_updatedDate' | 'name'>\n  ) => CustomizationsQueryBuilder;\n  /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.\n   * @documentationMaturity preview\n   */\n  descending: (\n    ...propertyNames: Array<'_id' | '_createdDate' | '_updatedDate' | 'name'>\n  ) => CustomizationsQueryBuilder;\n  /** @param limit - Number of items to return, which is also the `pageSize` of the results object.\n   * @documentationMaturity preview\n   */\n  limit: (limit: number) => CustomizationsQueryBuilder;\n  /** @param cursor - A pointer to specific record\n   * @documentationMaturity preview\n   */\n  skipTo: (cursor: string) => CustomizationsQueryBuilder;\n  /** @documentationMaturity preview */\n  find: () => Promise<CustomizationsQueryResult>;\n}\n\n/**\n * Creates multiple brands.\n * @param customizations - Customizations to create.\n * @public\n * @documentationMaturity preview\n * @requiredField customizations\n * @permissionId WIX_STORES.CUSTOMIZATION_CREATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.BulkCreateCustomizations\n */\nexport async function bulkCreateCustomizations(\n  customizations: Customization[],\n  options?: BulkCreateCustomizationsOptions\n): Promise<\n  NonNullablePaths<\n    BulkCreateCustomizationsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in CustomizationNonNullablePaths]: `results.${number}.customization.${P}`;\n      }[CustomizationNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customizations: customizations,\n      returnEntity: options?.returnEntity,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'customizations.choicesSettings.choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.bulkCreateCustomizations(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.customization.choicesSettings.choices.image' },\n          ],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizations: '$[0]',\n          returnEntity: '$[1].returnEntity',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizations', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkCreateCustomizationsOptions {\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n}\n\n/**\n * Adds choices to a customization.\n * @param customizationId - Customization ID.\n * @param choices - Choices to add.\n * @public\n * @documentationMaturity preview\n * @requiredField choices\n * @requiredField customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.AddCustomizationChoices\n */\nexport async function addCustomizationChoices(\n  customizationId: string,\n  choices: Choice[],\n  options?: AddCustomizationChoicesOptions\n): Promise<\n  NonNullablePaths<\n    AddCustomizationChoicesResponse,\n    {\n      [P in CustomizationNonNullablePaths]: `customization.${P}`;\n    }[CustomizationNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customizationId: customizationId,\n      choices: choices,\n      fields: options?.fields,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.addCustomizationChoices(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizationId: '$[0]',\n          choices: '$[1]',\n          fields: '$[2].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationId', 'choices', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface AddCustomizationChoicesOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Sets a customization's choices. Any and all existing choices will be overridden.\n *\n * > **Note:** A choice cannot be overridden if it is assigned to one or more products.\n * @param customizationId - Customization ID.\n * @param choices - Choices to set.\n * @public\n * @documentationMaturity preview\n * @requiredField choices\n * @requiredField customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.SetCustomizationChoices\n */\nexport async function setCustomizationChoices(\n  customizationId: string,\n  choices: Choice[],\n  options?: SetCustomizationChoicesOptions\n): Promise<\n  NonNullablePaths<\n    SetCustomizationChoicesResponse,\n    {\n      [P in CustomizationNonNullablePaths]: `customization.${P}`;\n    }[CustomizationNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customizationId: customizationId,\n      choices: choices,\n      fields: options?.fields,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.setCustomizationChoices(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizationId: '$[0]',\n          choices: '$[1]',\n          fields: '$[2].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationId', 'choices', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface SetCustomizationChoicesOptions {\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Removes choices from a customization.\n *\n * +> **Note:** A choice cannot be removed if it is assigned to one or more products.\n * @param customizationId - Customization ID.\n * @param choiceIds - IDs of choices to remove.\n * @public\n * @documentationMaturity preview\n * @requiredField choiceIds\n * @requiredField customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.RemoveCustomizationChoices\n */\nexport async function removeCustomizationChoices(\n  customizationId: string,\n  choiceIds: string[],\n  options?: RemoveCustomizationChoicesOptions\n): Promise<\n  NonNullablePaths<\n    RemoveCustomizationChoicesResponse,\n    {\n      [P in CustomizationNonNullablePaths]: `customization.${P}`;\n    }[CustomizationNonNullablePaths]\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[3] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = renameKeysFromSDKRequestToRESTRequest({\n    customizationId: customizationId,\n    choiceIds: choiceIds,\n    revision: options?.revision,\n    fields: options?.fields,\n  });\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.removeCustomizationChoices(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [{ path: 'customization.choicesSettings.choices.image' }],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizationId: '$[0]',\n          choiceIds: '$[1]',\n          revision: '$[2].revision',\n          fields: '$[2].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationId', 'choiceIds', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface RemoveCustomizationChoicesOptions {\n  /** Customization revision. */\n  revision?: string;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Adds choices to multiple customizations.\n * @param customizationsChoices - List of customization IDs and choices.\n * @public\n * @documentationMaturity preview\n * @requiredField customizationsChoices\n * @requiredField customizationsChoices.choices\n * @requiredField customizationsChoices.customizationId\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.BulkAddCustomizationChoices\n */\nexport async function bulkAddCustomizationChoices(\n  customizationsChoices: NonNullablePaths<\n    CustomizationChoices,\n    `choices` | `customizationId`\n  >[],\n  options?: BulkAddCustomizationChoicesOptions\n): Promise<\n  NonNullablePaths<\n    BulkAddCustomizationChoicesResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in CustomizationNonNullablePaths]: `results.${number}.customization.${P}`;\n      }[CustomizationNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customizationsChoices: customizationsChoices,\n      returnEntity: options?.returnEntity,\n      fields: options?.fields,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [{ path: 'customizationsChoices.choices.image' }],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.bulkAddCustomizationChoices(\n      payload\n    );\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.customization.choicesSettings.choices.image' },\n          ],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizationsChoices: '$[0]',\n          returnEntity: '$[1].returnEntity',\n          fields: '$[1].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizationsChoices', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkAddCustomizationChoicesOptions {\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n\n/**\n * Updates multiple customizations.\n *\n * Each time the customization is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the customization.\n * This ensures you're working with the latest customization and prevents unintended overwrites.\n * @param customizations - List of customizations to update.\n * @public\n * @documentationMaturity preview\n * @requiredField customizations\n * @requiredField customizations.customization._id\n * @requiredField customizations.customization.name\n * @requiredField customizations.customization.revision\n * @permissionId WIX_STORES.CUSTOMIZATION_UPDATE\n * @applicableIdentity APP\n * @fqn wix.stores.catalog.customization.v3.CustomizationService.BulkUpdateCustomizations\n */\nexport async function bulkUpdateCustomizations(\n  customizations: NonNullablePaths<\n    MaskedCustomization,\n    `customization._id` | `customization.name` | `customization.revision`\n  >[],\n  options?: BulkUpdateCustomizationsOptions\n): Promise<\n  NonNullablePaths<\n    BulkUpdateCustomizationsResponse,\n    | `results`\n    | `results.${number}.itemMetadata.originalIndex`\n    | `results.${number}.itemMetadata.success`\n    | `results.${number}.itemMetadata.error.code`\n    | `results.${number}.itemMetadata.error.description`\n    | {\n        [P in CustomizationNonNullablePaths]: `results.${number}.customization.${P}`;\n      }[CustomizationNonNullablePaths]\n    | `bulkActionMetadata.totalSuccesses`\n    | `bulkActionMetadata.totalFailures`\n    | `bulkActionMetadata.undetailedFailures`\n  >\n> {\n  // @ts-ignore\n  const { httpClient, sideEffects } = arguments[2] as {\n    httpClient: HttpClient;\n    sideEffects?: any;\n  };\n\n  const payload = transformPaths(\n    renameKeysFromSDKRequestToRESTRequest({\n      customizations: customizations,\n      returnEntity: options?.returnEntity,\n      fields: options?.fields,\n    }),\n    [\n      {\n        transformFn: transformSDKImageToRESTImage,\n        paths: [\n          {\n            path: 'customizations.customization.choicesSettings.choices.image',\n          },\n        ],\n      },\n    ]\n  );\n\n  const reqOpts =\n    ambassadorWixStoresCatalogV3Customization.bulkUpdateCustomizations(payload);\n\n  sideEffects?.onSiteCall?.();\n  try {\n    const result = await httpClient.request(reqOpts);\n    sideEffects?.onSuccess?.(result);\n\n    return renameKeysFromRESTResponseToSDKResponse(\n      transformPaths(result.data, [\n        {\n          transformFn: transformRESTImageToSDKImage,\n          paths: [\n            { path: 'results.customization.choicesSettings.choices.image' },\n          ],\n        },\n      ])\n    )!;\n  } catch (err: any) {\n    const transformedError = sdkTransformError(\n      err,\n      {\n        spreadPathsToArguments: {},\n        explicitPathsToArguments: {\n          customizations: '$[0]',\n          returnEntity: '$[1].returnEntity',\n          fields: '$[1].fields',\n        },\n        singleArgumentUnchanged: false,\n      },\n      ['customizations', 'options']\n    );\n    sideEffects?.onError?.(err);\n\n    throw transformedError;\n  }\n}\n\nexport interface BulkUpdateCustomizationsOptions {\n  /**\n   * Whether to return the full customization entities in the response.\n   *\n   * Default: `false`\n   */\n  returnEntity?: boolean;\n  /**\n   * Fields to include in the response.\n   *\n   * Supported values: `ASSIGNED_PRODUCTS_COUNT`\n   * @maxSize 100\n   */\n  fields?: RequestedFieldsWithLiterals[];\n}\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKFloatToRESTFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformRESTFloatToSDKFloat } from '@wix/sdk-runtime/transformations/float';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'manage._base_domain_': [\n      {\n        srcPath: '/customization',\n        destPath: '',\n      },\n    ],\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/customizations',\n        destPath: '/v3/customizations',\n      },\n      {\n        srcPath: '/stores/v3/bulk/customizations',\n        destPath: '/v3/bulk/customizations',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/customization',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/customization',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/customization',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/customization',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/customization',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_customizations-v-3';\n\n/** Creates a customization. */\nexport function createCustomization(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __createCustomization({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'customization.createdDate' },\n          { path: 'customization.updatedDate' },\n          {\n            path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'customization.choicesSettings.choices.image.focalPoint.x' },\n          { path: 'customization.choicesSettings.choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.CreateCustomization',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createCustomization;\n}\n\n/** Retrieves a customization. */\nexport function getCustomization(payload: object): RequestOptionsFactory<any> {\n  function __getCustomization({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'GET' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.GetCustomization',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customizationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getCustomization;\n}\n\n/**\n * Updates a customization.\n *\n * Each time the customization is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the customization.\n * This ensures you're working with the latest customization and prevents unintended overwrites.\n */\nexport function updateCustomization(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __updateCustomization({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'customization.createdDate' },\n          { path: 'customization.updatedDate' },\n          {\n            path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'customization.choicesSettings.choices.image.focalPoint.x' },\n          { path: 'customization.choicesSettings.choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'PATCH' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.UpdateCustomization',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customization.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateCustomization;\n}\n\n/**\n * Deletes a customization.\n *\n * > **Note:** A customization cannot be deleted if it is assigned to one or more products.\n */\nexport function deleteCustomization(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __deleteCustomization({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'DELETE' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.DeleteCustomization',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customizationId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteCustomization;\n}\n\n/**\n * Retrieves a list of up to 100 customizations, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Customizations runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Customizations: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/customizations-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryCustomizations(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __queryCustomizations({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.QueryCustomizations',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customizations.createdDate' },\n              { path: 'customizations.updatedDate' },\n              {\n                path: 'customizations.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customizations.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customizations.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryCustomizations;\n}\n\n/** Creates multiple brands. */\nexport function bulkCreateCustomizations(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkCreateCustomizations({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'customizations.createdDate' },\n          { path: 'customizations.updatedDate' },\n          {\n            path: 'customizations.choicesSettings.choices.image.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'customizations.choicesSettings.choices.image.focalPoint.x' },\n          { path: 'customizations.choicesSettings.choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.BulkCreateCustomizations',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/bulk/customizations/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.customization.createdDate' },\n              { path: 'results.customization.updatedDate' },\n              {\n                path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateCustomizations;\n}\n\n/** Adds choices to a customization. */\nexport function addCustomizationChoices(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __addCustomizationChoices({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'choices.image.urlExpirationDate' }],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'choices.image.focalPoint.x' },\n          { path: 'choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.AddCustomizationChoices',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customizationId}/add-choices',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __addCustomizationChoices;\n}\n\n/**\n * Sets a customization's choices. Any and all existing choices will be overridden.\n *\n * > **Note:** A choice cannot be overridden if it is assigned to one or more products.\n */\nexport function setCustomizationChoices(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __setCustomizationChoices({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'choices.image.urlExpirationDate' }],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'choices.image.focalPoint.x' },\n          { path: 'choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.SetCustomizationChoices',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customizationId}/set-choices',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __setCustomizationChoices;\n}\n\n/**\n * Removes choices from a customization.\n *\n * +> **Note:** A choice cannot be removed if it is assigned to one or more products.\n */\nexport function removeCustomizationChoices(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __removeCustomizationChoices({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.RemoveCustomizationChoices',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/customizations/{customizationId}/remove-choices',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'customization.createdDate' },\n              { path: 'customization.updatedDate' },\n              {\n                path: 'customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __removeCustomizationChoices;\n}\n\n/** Adds choices to multiple customizations. */\nexport function bulkAddCustomizationChoices(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkAddCustomizationChoices({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'customizationsChoices.choices.image.urlExpirationDate' },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          { path: 'customizationsChoices.choices.image.focalPoint.x' },\n          { path: 'customizationsChoices.choices.image.focalPoint.y' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.BulkAddCustomizationChoices',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/bulk/customizations/add-choices',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.customization.createdDate' },\n              { path: 'results.customization.updatedDate' },\n              {\n                path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkAddCustomizationChoices;\n}\n\n/**\n * Updates multiple customizations.\n *\n * Each time the customization is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the customization.\n * This ensures you're working with the latest customization and prevents unintended overwrites.\n */\nexport function bulkUpdateCustomizations(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkUpdateCustomizations({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'customizations.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'customizations.customization.createdDate' },\n          { path: 'customizations.customization.updatedDate' },\n          {\n            path: 'customizations.customization.choicesSettings.choices.image.urlExpirationDate',\n          },\n        ],\n      },\n      {\n        transformFn: transformSDKFloatToRESTFloat,\n        paths: [\n          {\n            path: 'customizations.customization.choicesSettings.choices.image.focalPoint.x',\n          },\n          {\n            path: 'customizations.customization.choicesSettings.choices.image.focalPoint.y',\n          },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.customization',\n      method: 'POST' as any,\n      methodFqn:\n        'wix.stores.catalog.customization.v3.CustomizationService.BulkUpdateCustomizations',\n      packageName: PACKAGE_NAME,\n      url: resolveWixStoresCatalogCustomizationV3CustomizationServiceUrl({\n        protoPath: '/v3/bulk/customizations/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.customization.createdDate' },\n              { path: 'results.customization.updatedDate' },\n              {\n                path: 'results.customization.choicesSettings.choices.image.urlExpirationDate',\n              },\n            ],\n          },\n          {\n            transformFn: transformRESTFloatToSDKFloat,\n            paths: [\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.x',\n              },\n              {\n                path: 'results.customization.choicesSettings.choices.image.focalPoint.y',\n              },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateCustomizations;\n}\n","import {\n  createCustomization as publicCreateCustomization,\n  getCustomization as publicGetCustomization,\n  updateCustomization as publicUpdateCustomization,\n  deleteCustomization as publicDeleteCustomization,\n  queryCustomizations as publicQueryCustomizations,\n  bulkCreateCustomizations as publicBulkCreateCustomizations,\n  addCustomizationChoices as publicAddCustomizationChoices,\n  setCustomizationChoices as publicSetCustomizationChoices,\n  removeCustomizationChoices as publicRemoveCustomizationChoices,\n  bulkAddCustomizationChoices as publicBulkAddCustomizationChoices,\n  bulkUpdateCustomizations as publicBulkUpdateCustomizations,\n} from './stores-catalog-v3-customization-customizations-v-3.public.js';\nimport { createRESTModule } from '@wix/sdk-runtime/rest-modules';\nimport { createEventModule } from '@wix/sdk-runtime/event-definition-modules';\nimport {\n  BuildRESTFunction,\n  MaybeContext,\n  BuildEventDefinition,\n} from '@wix/sdk-types';\nimport { onCustomizationCreated as publicOnCustomizationCreated } from './stores-catalog-v3-customization-customizations-v-3.public.js';\nimport { onCustomizationDeleted as publicOnCustomizationDeleted } from './stores-catalog-v3-customization-customizations-v-3.public.js';\nimport { onCustomizationUpdated as publicOnCustomizationUpdated } from './stores-catalog-v3-customization-customizations-v-3.public.js';\n\nexport const createCustomization: MaybeContext<\n  BuildRESTFunction<typeof publicCreateCustomization> &\n    typeof publicCreateCustomization\n> = /*#__PURE__*/ createRESTModule(publicCreateCustomization);\nexport const getCustomization: MaybeContext<\n  BuildRESTFunction<typeof publicGetCustomization> &\n    typeof publicGetCustomization\n> = /*#__PURE__*/ createRESTModule(publicGetCustomization);\nexport const updateCustomization: MaybeContext<\n  BuildRESTFunction<typeof publicUpdateCustomization> &\n    typeof publicUpdateCustomization\n> = /*#__PURE__*/ createRESTModule(publicUpdateCustomization);\nexport const deleteCustomization: MaybeContext<\n  BuildRESTFunction<typeof publicDeleteCustomization> &\n    typeof publicDeleteCustomization\n> = /*#__PURE__*/ createRESTModule(publicDeleteCustomization);\nexport const queryCustomizations: MaybeContext<\n  BuildRESTFunction<typeof publicQueryCustomizations> &\n    typeof publicQueryCustomizations\n> = /*#__PURE__*/ createRESTModule(publicQueryCustomizations);\nexport const bulkCreateCustomizations: MaybeContext<\n  BuildRESTFunction<typeof publicBulkCreateCustomizations> &\n    typeof publicBulkCreateCustomizations\n> = /*#__PURE__*/ createRESTModule(publicBulkCreateCustomizations);\nexport const addCustomizationChoices: MaybeContext<\n  BuildRESTFunction<typeof publicAddCustomizationChoices> &\n    typeof publicAddCustomizationChoices\n> = /*#__PURE__*/ createRESTModule(publicAddCustomizationChoices);\nexport const setCustomizationChoices: MaybeContext<\n  BuildRESTFunction<typeof publicSetCustomizationChoices> &\n    typeof publicSetCustomizationChoices\n> = /*#__PURE__*/ createRESTModule(publicSetCustomizationChoices);\nexport const removeCustomizationChoices: MaybeContext<\n  BuildRESTFunction<typeof publicRemoveCustomizationChoices> &\n    typeof publicRemoveCustomizationChoices\n> = /*#__PURE__*/ createRESTModule(publicRemoveCustomizationChoices);\nexport const bulkAddCustomizationChoices: MaybeContext<\n  BuildRESTFunction<typeof publicBulkAddCustomizationChoices> &\n    typeof publicBulkAddCustomizationChoices\n> = /*#__PURE__*/ createRESTModule(publicBulkAddCustomizationChoices);\nexport const bulkUpdateCustomizations: MaybeContext<\n  BuildRESTFunction<typeof publicBulkUpdateCustomizations> &\n    typeof publicBulkUpdateCustomizations\n> = /*#__PURE__*/ createRESTModule(publicBulkUpdateCustomizations);\n/**\n * Triggered when a customization is created.\n */\nexport const onCustomizationCreated: BuildEventDefinition<\n  typeof publicOnCustomizationCreated\n> = createEventModule(publicOnCustomizationCreated);\n/**\n * Triggered when a customization is deleted.\n */\nexport const onCustomizationDeleted: BuildEventDefinition<\n  typeof publicOnCustomizationDeleted\n> = createEventModule(publicOnCustomizationDeleted);\n/**\n * Triggered when a customization is updated.\n */\nexport const onCustomizationUpdated: BuildEventDefinition<\n  typeof publicOnCustomizationUpdated\n> = createEventModule(publicOnCustomizationUpdated);\n\nexport {\n  CustomizationType,\n  CustomizationRenderType,\n  ChoiceType,\n  RequestedFields,\n  SortOrder,\n  WebhookIdentityType,\n} from './stores-catalog-v3-customization-customizations-v-3.universal.js';\nexport {\n  Customization,\n  CustomizationCustomizationSettingsOneOf,\n  FreeTextSettings,\n  ChoicesSettings,\n  Choice,\n  ChoiceValueOneOf,\n  MultipleColors,\n  FocalPoint,\n  InvalidateCache,\n  InvalidateCacheGetByOneOf,\n  App,\n  Page,\n  URI,\n  File,\n  CustomTag,\n  CreateCustomizationRequest,\n  CreateCustomizationResponse,\n  GetCustomizationRequest,\n  GetCustomizationResponse,\n  UpdateCustomizationRequest,\n  UpdateCustomizationResponse,\n  DeleteCustomizationRequest,\n  DeleteCustomizationResponse,\n  QueryCustomizationsRequest,\n  CursorQuery,\n  CursorQueryPagingMethodOneOf,\n  Sorting,\n  CursorPaging,\n  QueryCustomizationsResponse,\n  CursorPagingMetadata,\n  Cursors,\n  BulkCreateCustomizationsRequest,\n  BulkCreateCustomizationsResponse,\n  BulkCustomizationResult,\n  ItemMetadata,\n  ApplicationError,\n  BulkActionMetadata,\n  CustomizationIdsWrapper,\n  AddCustomizationChoicesRequest,\n  AddCustomizationChoicesResponse,\n  SetCustomizationChoicesRequest,\n  SetCustomizationChoicesResponse,\n  RemoveCustomizationChoicesRequest,\n  RemoveCustomizationChoicesResponse,\n  BulkAddCustomizationChoicesRequest,\n  CustomizationChoices,\n  BulkAddCustomizationChoicesResponse,\n  BulkUpdateCustomizationsRequest,\n  MaskedCustomization,\n  BulkUpdateCustomizationsResponse,\n  DomainEvent,\n  DomainEventBodyOneOf,\n  EntityCreatedEvent,\n  RestoreInfo,\n  EntityUpdatedEvent,\n  EntityDeletedEvent,\n  ActionEvent,\n  Empty,\n  MessageEnvelope,\n  IdentificationData,\n  IdentificationDataIdOneOf,\n  BaseEventMetadata,\n  EventMetadata,\n  CustomizationCreatedEnvelope,\n  CustomizationDeletedEnvelope,\n  CustomizationUpdatedEnvelope,\n  GetCustomizationOptions,\n  UpdateCustomization,\n  UpdateCustomizationOptions,\n  QueryCustomizationsOptions,\n  CustomizationsQueryResult,\n  CustomizationsQueryBuilder,\n  BulkCreateCustomizationsOptions,\n  AddCustomizationChoicesOptions,\n  SetCustomizationChoicesOptions,\n  RemoveCustomizationChoicesOptions,\n  BulkAddCustomizationChoicesOptions,\n  BulkUpdateCustomizationsOptions,\n} from './stores-catalog-v3-customization-customizations-v-3.universal.js';\n"],"mappings":"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","names":["addCustomizationChoices","bulkAddCustomizationChoices","bulkCreateCustomizations","bulkUpdateCustomizations","createCustomization","deleteCustomization","getCustomization","onCustomizationCreated","onCustomizationDeleted","onCustomizationUpdated","queryCustomizations","removeCustomizationChoices","setCustomizationChoices","updateCustomization","import_rename_all_nested_keys","import_image","import_timestamp","import_transform_paths","import_float","import_timestamp","import_rest_modules","payload","import_image","import_transform_paths","CustomizationType","CustomizationRenderType","ChoiceType","RequestedFields","SortOrder","WebhookIdentityType","createCustomization","sdkTransformError","getCustomization","updateCustomization","deleteCustomization","queryCustomizations","bulkCreateCustomizations","addCustomizationChoices","setCustomizationChoices","removeCustomizationChoices","bulkAddCustomizationChoices","bulkUpdateCustomizations","createCustomization","getCustomization","updateCustomization","deleteCustomization","queryCustomizations","bulkCreateCustomizations","addCustomizationChoices","setCustomizationChoices","removeCustomizationChoices","bulkAddCustomizationChoices","bulkUpdateCustomizations","import_rest_modules","createCustomization","getCustomization","updateCustomization","deleteCustomization","queryCustomizations","bulkCreateCustomizations","addCustomizationChoices","setCustomizationChoices","removeCustomizationChoices","bulkAddCustomizationChoices","bulkUpdateCustomizations","onCustomizationCreated","onCustomizationDeleted","onCustomizationUpdated"]}