// src/stores-catalog-v3-brand-brands-v-3.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformSDKFieldMaskToRESTFieldMask } from "@wix/sdk-runtime/transformations/field-mask";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveComWixStoresCatalogBrandV3BrandServiceUrl(opts) {
  const domainToMappings = {
    "www.wixapis.com": [
      {
        srcPath: "/stores/v3/brands",
        destPath: "/v3/brands"
      },
      {
        srcPath: "/stores/v3/bulk/brands",
        destPath: "/v3/bulk/brands"
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/brand",
        destPath: ""
      }
    ],
    "editor._base_domain_": [
      {
        srcPath: "/_api/brand",
        destPath: ""
      }
    ],
    "blocks._base_domain_": [
      {
        srcPath: "/_api/brand",
        destPath: ""
      }
    ],
    "create.editorx": [
      {
        srcPath: "/_api/brand",
        destPath: ""
      }
    ],
    _: [
      {
        srcPath: "/_api/brand",
        destPath: ""
      }
    ],
    "*.dev.wix-code.com": [
      {
        srcPath: "/_api/brand",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_stores_brands-v-3";
function createBrand(payload) {
  function __createBrand({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "brand.createdDate" }, { path: "brand.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.CreateBrand",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "brand.createdDate" },
            { path: "brand.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __createBrand;
}
function getBrand(payload) {
  function __getBrand({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "GET",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.GetBrand",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands/{brandId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "brand.createdDate" },
            { path: "brand.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getBrand;
}
function updateBrand(payload) {
  function __updateBrand({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "brand.createdDate" }, { path: "brand.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "PATCH",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.UpdateBrand",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands/{brand.id}",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "brand.createdDate" },
            { path: "brand.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __updateBrand;
}
function deleteBrand(payload) {
  function __deleteBrand({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "DELETE",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.DeleteBrand",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands/{brandId}",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload)
    };
    return metadata;
  }
  return __deleteBrand;
}
function queryBrands(payload) {
  function __queryBrands({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.QueryBrands",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands/query",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "brands.createdDate" },
            { path: "brands.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __queryBrands;
}
function bulkCreateBrands(payload) {
  function __bulkCreateBrands({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "brands.createdDate" }, { path: "brands.updatedDate" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.BulkCreateBrands",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/bulk/brands/create",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkCreateBrands;
}
function bulkUpdateBrands(payload) {
  function __bulkUpdateBrands({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFieldMaskToRESTFieldMask,
        paths: [{ path: "brands.fieldMask" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [
          { path: "brands.brand.createdDate" },
          { path: "brands.brand.updatedDate" }
        ]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.BulkUpdateBrands",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/bulk/brands/update",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkUpdateBrands;
}
function getOrCreateBrand(payload) {
  function __getOrCreateBrand({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.GetOrCreateBrand",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/brands/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "brand.createdDate" },
            { path: "brand.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __getOrCreateBrand;
}
function bulkGetOrCreateBrands(payload) {
  function __bulkGetOrCreateBrands({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.BulkGetOrCreateBrands",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/bulk/brands/get-or-create",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "results.item.createdDate" },
            { path: "results.item.updatedDate" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __bulkGetOrCreateBrands;
}
function bulkDeleteBrands(payload) {
  function __bulkDeleteBrands({ host }) {
    const metadata = {
      entityFqdn: "wix.stores.catalog.v3.brand",
      method: "POST",
      methodFqn: "com.wix.stores.catalog.brand.v3.BrandService.BulkDeleteBrands",
      packageName: PACKAGE_NAME,
      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({
        protoPath: "/v3/bulk/brands/delete",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __bulkDeleteBrands;
}

// src/stores-catalog-v3-brand-brands-v-3.meta.ts
function createBrand2() {
  const payload = {};
  const getRequestOptions = createBrand(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/brands",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getBrand2() {
  const payload = { brandId: ":brandId" };
  const getRequestOptions = getBrand(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v3/brands/{brandId}",
    pathParams: { brandId: "brandId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function updateBrand2() {
  const payload = { brand: { id: ":brandId" } };
  const getRequestOptions = updateBrand(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "PATCH",
    path: "/v3/brands/{brand.id}",
    pathParams: { brandId: "brandId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function deleteBrand2() {
  const payload = { brandId: ":brandId" };
  const getRequestOptions = deleteBrand(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "DELETE",
    path: "/v3/brands/{brandId}",
    pathParams: { brandId: "brandId" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function queryBrands2() {
  const payload = {};
  const getRequestOptions = queryBrands(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/brands/query",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkCreateBrands2() {
  const payload = {};
  const getRequestOptions = bulkCreateBrands(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/brands/create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkUpdateBrands2() {
  const payload = {};
  const getRequestOptions = bulkUpdateBrands(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/brands/update",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function getOrCreateBrand2() {
  const payload = {};
  const getRequestOptions = getOrCreateBrand(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/brands/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkGetOrCreateBrands2() {
  const payload = {};
  const getRequestOptions = bulkGetOrCreateBrands(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/brands/get-or-create",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function bulkDeleteBrands2() {
  const payload = {};
  const getRequestOptions = bulkDeleteBrands(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v3/bulk/brands/delete",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  bulkCreateBrands2 as bulkCreateBrands,
  bulkDeleteBrands2 as bulkDeleteBrands,
  bulkGetOrCreateBrands2 as bulkGetOrCreateBrands,
  bulkUpdateBrands2 as bulkUpdateBrands,
  createBrand2 as createBrand,
  deleteBrand2 as deleteBrand,
  getBrand2 as getBrand,
  getOrCreateBrand2 as getOrCreateBrand,
  queryBrands2 as queryBrands,
  updateBrand2 as updateBrand
};
//# sourceMappingURL=meta.mjs.map