{"version":3,"sources":["../../meta.ts","../../src/stores-catalog-v3-brand-brands-v-3.http.ts","../../src/stores-catalog-v3-brand-brands-v-3.meta.ts"],"sourcesContent":["export * from './src/stores-catalog-v3-brand-brands-v-3.meta.js';\n","import { toURLSearchParams } from '@wix/sdk-runtime/rest-modules';\nimport { transformSDKTimestampToRESTTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformRESTTimestampToSDKTimestamp } from '@wix/sdk-runtime/transformations/timestamp';\nimport { transformSDKFieldMaskToRESTFieldMask } from '@wix/sdk-runtime/transformations/field-mask';\nimport { transformPaths } from '@wix/sdk-runtime/transformations/transform-paths';\nimport { resolveUrl } from '@wix/sdk-runtime/rest-modules';\nimport { ResolveUrlOpts } from '@wix/sdk-runtime/rest-modules';\nimport { RequestOptionsFactory } from '@wix/sdk-types';\n\nfunction resolveComWixStoresCatalogBrandV3BrandServiceUrl(\n  opts: Omit<ResolveUrlOpts, 'domainToMappings'>\n) {\n  const domainToMappings = {\n    'www.wixapis.com': [\n      {\n        srcPath: '/stores/v3/brands',\n        destPath: '/v3/brands',\n      },\n      {\n        srcPath: '/stores/v3/bulk/brands',\n        destPath: '/v3/bulk/brands',\n      },\n    ],\n    'manage._base_domain_': [\n      {\n        srcPath: '/brand',\n        destPath: '',\n      },\n    ],\n    'editor._base_domain_': [\n      {\n        srcPath: '/_api/brand',\n        destPath: '',\n      },\n    ],\n    'blocks._base_domain_': [\n      {\n        srcPath: '/_api/brand',\n        destPath: '',\n      },\n    ],\n    'create.editorx': [\n      {\n        srcPath: '/_api/brand',\n        destPath: '',\n      },\n    ],\n    _: [\n      {\n        srcPath: '/_api/brand',\n        destPath: '',\n      },\n    ],\n    '*.dev.wix-code.com': [\n      {\n        srcPath: '/_api/brand',\n        destPath: '',\n      },\n    ],\n  };\n\n  return resolveUrl(Object.assign(opts, { domainToMappings }));\n}\n\nconst PACKAGE_NAME = '@wix/auto_sdk_stores_brands-v-3';\n\n/**\n * Creates a brand.\n *\n * To assign the brand to a product, include the `brand.id` or `brand.name`\n * when [creating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/create-product) or\n * [updating](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/products-v3/update-product) a product.\n */\nexport function createBrand(payload: object): RequestOptionsFactory<any> {\n  function __createBrand({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'brand.createdDate' }, { path: 'brand.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.CreateBrand',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'brand.createdDate' },\n              { path: 'brand.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __createBrand;\n}\n\n/** Retrieves a brand. */\nexport function getBrand(payload: object): RequestOptionsFactory<any> {\n  function __getBrand({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'GET' as any,\n      methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.GetBrand',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands/{brandId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'brand.createdDate' },\n              { path: 'brand.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getBrand;\n}\n\n/**\n * Updates a brand.\n *\n * Each time the brand is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating the brand.\n * This ensures you're working with the latest brand and prevents unintended overwrites.\n */\nexport function updateBrand(payload: object): RequestOptionsFactory<any> {\n  function __updateBrand({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'brand.createdDate' }, { path: 'brand.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'PATCH' as any,\n      methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.UpdateBrand',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands/{brand.id}',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'brand.createdDate' },\n              { path: 'brand.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __updateBrand;\n}\n\n/**\n * Deletes a brand.\n *\n * > **Note:** Deleting a brand will also remove it from all products it is assigned to.\n */\nexport function deleteBrand(payload: object): RequestOptionsFactory<any> {\n  function __deleteBrand({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'DELETE' as any,\n      methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.DeleteBrand',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands/{brandId}',\n        data: payload,\n        host,\n      }),\n      params: toURLSearchParams(payload),\n    };\n\n    return metadata;\n  }\n\n  return __deleteBrand;\n}\n\n/**\n * Retrieves a list of up to 100 brands, given the provided filtering, sorting, and cursor paging.\n * Pass supported values to the `fields` array in the request to include those fields in the response.\n *\n *\n * Query Brands runs with these defaults, which you can override:\n *\n * - `createdDate` is sorted in `DESC` order\n * - `cursorPaging.limit` is `100`\n *\n * For field support for filters and sorting,\n * see [Brands: Supported Filters and Sorting](https://dev.wix.com/docs/rest/business-solutions/stores/catalog-v3/brands-v3/supported-filters-and-sorting).\n *\n * To learn about working with _Query_ endpoints, see\n * [API Query Language](https://dev.wix.com/docs/rest/articles/getting-started/api-query-language),\n * and [Sorting and Paging](https://dev.wix.com/docs/rest/articles/getting-started/sorting-and-paging).\n */\nexport function queryBrands(payload: object): RequestOptionsFactory<any> {\n  function __queryBrands({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn: 'com.wix.stores.catalog.brand.v3.BrandService.QueryBrands',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands/query',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'brands.createdDate' },\n              { path: 'brands.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __queryBrands;\n}\n\n/** Creates multiple brands. */\nexport function bulkCreateBrands(payload: object): RequestOptionsFactory<any> {\n  function __bulkCreateBrands({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [{ path: 'brands.createdDate' }, { path: 'brands.updatedDate' }],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.brand.v3.BrandService.BulkCreateBrands',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/bulk/brands/create',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkCreateBrands;\n}\n\n/**\n * Updates multiple brands.\n *\n * Each time a brand is updated, `revision` increments by 1.\n * The current `revision` must be passed when updating a brand.\n * This ensures you're working with the latest brand and prevents unintended overwrites.\n */\nexport function bulkUpdateBrands(payload: object): RequestOptionsFactory<any> {\n  function __bulkUpdateBrands({ host }: any) {\n    const serializedData = transformPaths(payload, [\n      {\n        transformFn: transformSDKFieldMaskToRESTFieldMask,\n        paths: [{ path: 'brands.fieldMask' }],\n      },\n      {\n        transformFn: transformSDKTimestampToRESTTimestamp,\n        paths: [\n          { path: 'brands.brand.createdDate' },\n          { path: 'brands.brand.updatedDate' },\n        ],\n      },\n    ]);\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.brand.v3.BrandService.BulkUpdateBrands',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/bulk/brands/update',\n        data: serializedData,\n        host,\n      }),\n      data: serializedData,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkUpdateBrands;\n}\n\n/** Retrieves a brand by name, or creates a brand if one with the passed `brandName` doesn't exist. */\nexport function getOrCreateBrand(payload: object): RequestOptionsFactory<any> {\n  function __getOrCreateBrand({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.brand.v3.BrandService.GetOrCreateBrand',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/brands/get-or-create',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'brand.createdDate' },\n              { path: 'brand.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __getOrCreateBrand;\n}\n\n/** Retrieves multiple brands by name, or creates multiple brands if those with the passed `ribbonNames` don't exist. */\nexport function bulkGetOrCreateBrands(\n  payload: object\n): RequestOptionsFactory<any> {\n  function __bulkGetOrCreateBrands({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.brand.v3.BrandService.BulkGetOrCreateBrands',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/bulk/brands/get-or-create',\n        data: payload,\n        host,\n      }),\n      data: payload,\n      transformResponse: (payload: any) =>\n        transformPaths(payload, [\n          {\n            transformFn: transformRESTTimestampToSDKTimestamp,\n            paths: [\n              { path: 'results.item.createdDate' },\n              { path: 'results.item.updatedDate' },\n            ],\n          },\n        ]),\n    };\n\n    return metadata;\n  }\n\n  return __bulkGetOrCreateBrands;\n}\n\n/** Deletes multiple brands. */\nexport function bulkDeleteBrands(payload: object): RequestOptionsFactory<any> {\n  function __bulkDeleteBrands({ host }: any) {\n    const metadata = {\n      entityFqdn: 'wix.stores.catalog.v3.brand',\n      method: 'POST' as any,\n      methodFqn:\n        'com.wix.stores.catalog.brand.v3.BrandService.BulkDeleteBrands',\n      packageName: PACKAGE_NAME,\n      url: resolveComWixStoresCatalogBrandV3BrandServiceUrl({\n        protoPath: '/v3/bulk/brands/delete',\n        data: payload,\n        host,\n      }),\n      data: payload,\n    };\n\n    return metadata;\n  }\n\n  return __bulkDeleteBrands;\n}\n","import * as ambassadorWixStoresCatalogV3Brand from './stores-catalog-v3-brand-brands-v-3.http.js';\nimport * as ambassadorWixStoresCatalogV3BrandTypes from './stores-catalog-v3-brand-brands-v-3.types.js';\nimport * as ambassadorWixStoresCatalogV3BrandUniversalTypes from './stores-catalog-v3-brand-brands-v-3.universal.js';\n\nexport type __PublicMethodMetaInfo<\n  K = string,\n  M = unknown,\n  T = unknown,\n  S = unknown,\n  Q = unknown,\n  R = unknown\n> = {\n  getUrl: (context: any) => string;\n  httpMethod: K;\n  path: string;\n  pathParams: M;\n  __requestType: T;\n  __originalRequestType: S;\n  __responseType: Q;\n  __originalResponseType: R;\n};\n\nexport function createBrand(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.CreateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.CreateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.CreateBrandResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.CreateBrandResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.createBrand(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/brands',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getBrand(): __PublicMethodMetaInfo<\n  'GET',\n  { brandId: string },\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.GetBrandRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.GetBrandRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.GetBrandResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.GetBrandResponse\n> {\n  const payload = { brandId: ':brandId' } as any;\n\n  const getRequestOptions = ambassadorWixStoresCatalogV3Brand.getBrand(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'GET',\n    path: '/v3/brands/{brandId}',\n    pathParams: { brandId: 'brandId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function updateBrand(): __PublicMethodMetaInfo<\n  'PATCH',\n  { brandId: string },\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.UpdateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.UpdateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.UpdateBrandResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.UpdateBrandResponse\n> {\n  const payload = { brand: { id: ':brandId' } } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.updateBrand(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'PATCH',\n    path: '/v3/brands/{brand.id}',\n    pathParams: { brandId: 'brandId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function deleteBrand(): __PublicMethodMetaInfo<\n  'DELETE',\n  { brandId: string },\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.DeleteBrandRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.DeleteBrandRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.DeleteBrandResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.DeleteBrandResponse\n> {\n  const payload = { brandId: ':brandId' } as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.deleteBrand(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'DELETE',\n    path: '/v3/brands/{brandId}',\n    pathParams: { brandId: 'brandId' },\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function queryBrands(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.QueryBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.QueryBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.QueryBrandsResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.QueryBrandsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.queryBrands(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/brands/query',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkCreateBrands(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkCreateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkCreateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkCreateBrandsResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkCreateBrandsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.bulkCreateBrands(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/brands/create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkUpdateBrands(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkUpdateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkUpdateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkUpdateBrandsResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkUpdateBrandsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.bulkUpdateBrands(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/brands/update',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function getOrCreateBrand(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.GetOrCreateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.GetOrCreateBrandRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.GetOrCreateBrandResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.GetOrCreateBrandResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.getOrCreateBrand(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/brands/get-or-create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkGetOrCreateBrands(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkGetOrCreateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkGetOrCreateBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkGetOrCreateBrandsResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkGetOrCreateBrandsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.bulkGetOrCreateBrands(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/brands/get-or-create',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n\nexport function bulkDeleteBrands(): __PublicMethodMetaInfo<\n  'POST',\n  {},\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkDeleteBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkDeleteBrandsRequest,\n  ambassadorWixStoresCatalogV3BrandUniversalTypes.BulkDeleteBrandsResponse,\n  ambassadorWixStoresCatalogV3BrandTypes.BulkDeleteBrandsResponse\n> {\n  const payload = {} as any;\n\n  const getRequestOptions =\n    ambassadorWixStoresCatalogV3Brand.bulkDeleteBrands(payload);\n\n  const getUrl = (context: any): string => {\n    const { url } = getRequestOptions(context);\n    return url!;\n  };\n\n  return {\n    getUrl,\n    httpMethod: 'POST',\n    path: '/v3/bulk/brands/delete',\n    pathParams: {},\n    __requestType: null as any,\n    __originalRequestType: null as any,\n    __responseType: null as any,\n    __originalResponseType: null as any,\n  };\n}\n"],"mappings":"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","names":["bulkCreateBrands","bulkDeleteBrands","bulkGetOrCreateBrands","bulkUpdateBrands","createBrand","deleteBrand","getBrand","getOrCreateBrand","queryBrands","updateBrand","import_timestamp","import_rest_modules","payload","createBrand","getBrand","updateBrand","deleteBrand","queryBrands","bulkCreateBrands","bulkUpdateBrands","getOrCreateBrand","bulkGetOrCreateBrands","bulkDeleteBrands"]}