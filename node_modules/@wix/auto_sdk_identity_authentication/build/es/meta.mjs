// src/iam-authentication-v1-authentication-authentication.http.ts
import { toURLSearchParams } from "@wix/sdk-runtime/rest-modules";
import { transformSDKFloatToRESTFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTFloatToSDKFloat } from "@wix/sdk-runtime/transformations/float";
import { transformRESTBytesToSDKBytes } from "@wix/sdk-runtime/transformations/bytes";
import { transformSDKTimestampToRESTTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformRESTTimestampToSDKTimestamp } from "@wix/sdk-runtime/transformations/timestamp";
import { transformPaths } from "@wix/sdk-runtime/transformations/transform-paths";
import { resolveUrl } from "@wix/sdk-runtime/rest-modules";
function resolveWixIamAuthenticationV1AuthenticationServiceUrl(opts) {
  const domainToMappings = {
    _: [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ],
    "users._base_domain_": [
      {
        srcPath: "/iam/wix/google",
        destPath: "/v1/sso/callback/root/0e6a50f5-b523-4e29-990d-f37fa2ffdd69"
      },
      {
        srcPath: "/authentication",
        destPath: ""
      }
    ],
    "www.wixapis.com": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      },
      {
        srcPath: "/iam/authentication",
        destPath: ""
      }
    ],
    "bo._base_domain_": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ],
    "wixbo.ai": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ],
    "wix-bo.com": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ],
    "dev._base_domain_": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ],
    "manage._base_domain_": [
      {
        srcPath: "/_api/authentication",
        destPath: ""
      }
    ],
    "www._base_domain_": [
      {
        srcPath: "/_api/iam/authentication",
        destPath: ""
      }
    ]
  };
  return resolveUrl(Object.assign(opts, { domainToMappings }));
}
var PACKAGE_NAME = "@wix/auto_sdk_identity_authentication";
function registerV2(payload) {
  function __registerV2({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [{ path: "profile.customFields.value.numValue" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "profile.customFields.value.dateValue" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "POST",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.RegisterV2",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v2/register",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __registerV2;
}
function loginV2(payload) {
  function __loginV2({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "POST",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.LoginV2",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v2/login",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __loginV2;
}
function changePassword(payload) {
  function __changePassword({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "POST",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.ChangePassword",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v2/change-password",
        data: payload,
        host
      }),
      data: payload
    };
    return metadata;
  }
  return __changePassword;
}
function loginCallback(payload) {
  function __loginCallback({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "GET",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.LoginCallback",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v1/callback",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [{ path: "body" }]
        }
      ])
    };
    return metadata;
  }
  return __loginCallback;
}
function signOn(payload) {
  function __signOn({ host }) {
    const serializedData = transformPaths(payload, [
      {
        transformFn: transformSDKFloatToRESTFloat,
        paths: [{ path: "profile.customFields.value.numValue" }]
      },
      {
        transformFn: transformSDKTimestampToRESTTimestamp,
        paths: [{ path: "profile.customFields.value.dateValue" }]
      }
    ]);
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "POST",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.SignOn",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v2/sign-on",
        data: serializedData,
        host
      }),
      data: serializedData,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __signOn;
}
function logout(payload) {
  function __logout({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "GET",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.Logout",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v1/logout",
        data: payload,
        host
      }),
      params: toURLSearchParams(payload),
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [{ path: "body" }]
        }
      ])
    };
    return metadata;
  }
  return __logout;
}
function verify(payload) {
  function __verify({ host }) {
    const metadata = {
      entityFqdn: "wix.iam.authentication.v1.authentication",
      method: "POST",
      methodFqn: "wix.iam.authentication.v1.AuthenticationService.Verify",
      packageName: PACKAGE_NAME,
      url: resolveWixIamAuthenticationV1AuthenticationServiceUrl({
        protoPath: "/v2/{factorType}/verify",
        data: payload,
        host
      }),
      data: payload,
      transformResponse: (payload2) => transformPaths(payload2, [
        {
          transformFn: transformRESTBytesToSDKBytes,
          paths: [
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.challenge"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.allowCredentials.id"
            },
            {
              path: "mfaChallengeData.verificationChallengeData.webauthnData.extensions.largeBlobWrite"
            }
          ]
        },
        {
          transformFn: transformRESTTimestampToSDKTimestamp,
          paths: [
            { path: "identity.createdDate" },
            { path: "identity.updatedDate" },
            { path: "identity.identityProfile.customFields.value.dateValue" },
            { path: "additionalData.*.dateValue" }
          ]
        },
        {
          transformFn: transformRESTFloatToSDKFloat,
          paths: [
            { path: "identity.identityProfile.customFields.value.numValue" },
            { path: "additionalData.*.numValue" }
          ]
        }
      ])
    };
    return metadata;
  }
  return __verify;
}

// src/iam-authentication-v1-authentication-authentication.meta.ts
function registerV22() {
  const payload = {};
  const getRequestOptions = registerV2(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/register",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function loginV22() {
  const payload = {};
  const getRequestOptions = loginV2(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/login",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function changePassword2() {
  const payload = {};
  const getRequestOptions = changePassword(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/change-password",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function loginCallback2() {
  const payload = {};
  const getRequestOptions = loginCallback(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/callback",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function signOn2() {
  const payload = {};
  const getRequestOptions = signOn(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/sign-on",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function logout2() {
  const payload = {};
  const getRequestOptions = logout(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "GET",
    path: "/v1/logout",
    pathParams: {},
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
function verify2() {
  const payload = { factorType: ":factorType" };
  const getRequestOptions = verify(payload);
  const getUrl = (context) => {
    const { url } = getRequestOptions(context);
    return url;
  };
  return {
    getUrl,
    httpMethod: "POST",
    path: "/v2/{factorType}/verify",
    pathParams: { factorType: "factorType" },
    __requestType: null,
    __originalRequestType: null,
    __responseType: null,
    __originalResponseType: null
  };
}
export {
  changePassword2 as changePassword,
  loginCallback2 as loginCallback,
  loginV22 as loginV2,
  logout2 as logout,
  registerV22 as registerV2,
  signOn2 as signOn,
  verify2 as verify
};
//# sourceMappingURL=meta.mjs.map